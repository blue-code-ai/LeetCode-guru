[
 {
   "acRate": "55.32585431246137",
   "difficulty": "Easy",
   "frontendQuestionId": 1,
   "isFavor": false,
   "paidOnly": false,
   "title": "Two Sum",
   "titleSlug": "two-sum",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "45.704411110949664",
   "difficulty": "Medium",
   "frontendQuestionId": 2,
   "isFavor": false,
   "paidOnly": false,
   "title": "Add Two Numbers",
   "titleSlug": "add-two-numbers",
   "topicTags": "['Linked List', 'Math', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "36.53266195940197",
   "difficulty": "Medium",
   "frontendQuestionId": 3,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Substring Without Repeating Characters",
   "titleSlug": "longest-substring-without-repeating-characters",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "43.21953807396498",
   "difficulty": "Hard",
   "frontendQuestionId": 4,
   "isFavor": false,
   "paidOnly": false,
   "title": "Median of Two Sorted Arrays",
   "titleSlug": "median-of-two-sorted-arrays",
   "topicTags": "['Array', 'Binary Search', 'Divide and Conquer']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "35.481251820068806",
   "difficulty": "Medium",
   "frontendQuestionId": 5,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Palindromic Substring",
   "titleSlug": "longest-palindromic-substring",
   "topicTags": "['Two Pointers', 'String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "51.05351030920713",
   "difficulty": "Medium",
   "frontendQuestionId": 6,
   "isFavor": false,
   "paidOnly": false,
   "title": "Zigzag Conversion",
   "titleSlug": "zigzag-conversion",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "29.998962373693704",
   "difficulty": "Medium",
   "frontendQuestionId": 7,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Integer",
   "titleSlug": "reverse-integer",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "18.883423761472542",
   "difficulty": "Medium",
   "frontendQuestionId": 8,
   "isFavor": false,
   "paidOnly": false,
   "title": "String to Integer (atoi)",
   "titleSlug": "string-to-integer-atoi",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.85029573775268",
   "difficulty": "Easy",
   "frontendQuestionId": 9,
   "isFavor": false,
   "paidOnly": false,
   "title": "Palindrome Number",
   "titleSlug": "palindrome-number",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "29.05733389816218",
   "difficulty": "Hard",
   "frontendQuestionId": 10,
   "isFavor": false,
   "paidOnly": false,
   "title": "Regular Expression Matching",
   "titleSlug": "regular-expression-matching",
   "topicTags": "['String', 'Dynamic Programming', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.38637078890165",
   "difficulty": "Medium",
   "frontendQuestionId": 11,
   "isFavor": false,
   "paidOnly": false,
   "title": "Container With Most Water",
   "titleSlug": "container-with-most-water",
   "topicTags": "['Array', 'Two Pointers', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "68.0793132571126",
   "difficulty": "Medium",
   "frontendQuestionId": 12,
   "isFavor": false,
   "paidOnly": false,
   "title": "Integer to Roman",
   "titleSlug": "integer-to-roman",
   "topicTags": "['Hash Table', 'Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "64.40139450155587",
   "difficulty": "Easy",
   "frontendQuestionId": 13,
   "isFavor": false,
   "paidOnly": false,
   "title": "Roman to Integer",
   "titleSlug": "roman-to-integer",
   "topicTags": "['Hash Table', 'Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "45.09105460550747",
   "difficulty": "Easy",
   "frontendQuestionId": 14,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Common Prefix",
   "titleSlug": "longest-common-prefix",
   "topicTags": "['String', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "36.65510003440354",
   "difficulty": "Medium",
   "frontendQuestionId": 15,
   "isFavor": false,
   "paidOnly": false,
   "title": "3Sum",
   "titleSlug": "3sum",
   "topicTags": "['Array', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "46.68625194837994",
   "difficulty": "Medium",
   "frontendQuestionId": 16,
   "isFavor": false,
   "paidOnly": false,
   "title": "3Sum Closest",
   "titleSlug": "3sum-closest",
   "topicTags": "['Array', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "63.35228021426222",
   "difficulty": "Medium",
   "frontendQuestionId": 17,
   "isFavor": false,
   "paidOnly": false,
   "title": "Letter Combinations of a Phone Number",
   "titleSlug": "letter-combinations-of-a-phone-number",
   "topicTags": "['Hash Table', 'String', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.795272452845",
   "difficulty": "Medium",
   "frontendQuestionId": 18,
   "isFavor": false,
   "paidOnly": false,
   "title": "4Sum",
   "titleSlug": "4sum",
   "topicTags": "['Array', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.39138170474623",
   "difficulty": "Medium",
   "frontendQuestionId": 19,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Nth Node From End of List",
   "titleSlug": "remove-nth-node-from-end-of-list",
   "topicTags": "['Linked List', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "42.014175046505926",
   "difficulty": "Easy",
   "frontendQuestionId": 20,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Parentheses",
   "titleSlug": "valid-parentheses",
   "topicTags": "['String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "66.47977328505019",
   "difficulty": "Easy",
   "frontendQuestionId": 21,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge Two Sorted Lists",
   "titleSlug": "merge-two-sorted-lists",
   "topicTags": "['Linked List', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "76.73858637694374",
   "difficulty": "Medium",
   "frontendQuestionId": 22,
   "isFavor": false,
   "paidOnly": false,
   "title": "Generate Parentheses",
   "titleSlug": "generate-parentheses",
   "topicTags": "['String', 'Dynamic Programming', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "56.13993332098537",
   "difficulty": "Hard",
   "frontendQuestionId": 23,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge k Sorted Lists",
   "titleSlug": "merge-k-sorted-lists",
   "topicTags": "['Linked List', 'Divide and Conquer', 'Heap (Priority Queue)', 'Merge Sort']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "66.73748832489265",
   "difficulty": "Medium",
   "frontendQuestionId": 24,
   "isFavor": false,
   "paidOnly": false,
   "title": "Swap Nodes in Pairs",
   "titleSlug": "swap-nodes-in-pairs",
   "topicTags": "['Linked List', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.38060257554574",
   "difficulty": "Hard",
   "frontendQuestionId": 25,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Nodes in k-Group",
   "titleSlug": "reverse-nodes-in-k-group",
   "topicTags": "['Linked List', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.790431572862026",
   "difficulty": "Easy",
   "frontendQuestionId": 26,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Duplicates from Sorted Array",
   "titleSlug": "remove-duplicates-from-sorted-array",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "59.670013626256214",
   "difficulty": "Easy",
   "frontendQuestionId": 27,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Element",
   "titleSlug": "remove-element",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "44.64272830268887",
   "difficulty": "Easy",
   "frontendQuestionId": 28,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Index of the First Occurrence in a String",
   "titleSlug": "find-the-index-of-the-first-occurrence-in-a-string",
   "topicTags": "['Two Pointers', 'String', 'String Matching']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "18.22850544373474",
   "difficulty": "Medium",
   "frontendQuestionId": 29,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divide Two Integers",
   "titleSlug": "divide-two-integers",
   "topicTags": "['Math', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.85574702797397",
   "difficulty": "Hard",
   "frontendQuestionId": 30,
   "isFavor": false,
   "paidOnly": false,
   "title": "Substring with Concatenation of All Words",
   "titleSlug": "substring-with-concatenation-of-all-words",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "42.57286061559552",
   "difficulty": "Medium",
   "frontendQuestionId": 31,
   "isFavor": false,
   "paidOnly": false,
   "title": "Next Permutation",
   "titleSlug": "next-permutation",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "35.88470902571685",
   "difficulty": "Hard",
   "frontendQuestionId": 32,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Valid Parentheses",
   "titleSlug": "longest-valid-parentheses",
   "topicTags": "['String', 'Dynamic Programming', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.49761626349072",
   "difficulty": "Medium",
   "frontendQuestionId": 33,
   "isFavor": false,
   "paidOnly": false,
   "title": "Search in Rotated Sorted Array",
   "titleSlug": "search-in-rotated-sorted-array",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.37332727775251",
   "difficulty": "Medium",
   "frontendQuestionId": 34,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find First and Last Position of Element in Sorted Array",
   "titleSlug": "find-first-and-last-position-of-element-in-sorted-array",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.56338276522516",
   "difficulty": "Easy",
   "frontendQuestionId": 35,
   "isFavor": false,
   "paidOnly": false,
   "title": "Search Insert Position",
   "titleSlug": "search-insert-position",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "61.88105753166876",
   "difficulty": "Medium",
   "frontendQuestionId": 36,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Sudoku",
   "titleSlug": "valid-sudoku",
   "topicTags": "['Array', 'Hash Table', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.70636136418608",
   "difficulty": "Hard",
   "frontendQuestionId": 37,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sudoku Solver",
   "titleSlug": "sudoku-solver",
   "topicTags": "['Array', 'Hash Table', 'Backtracking', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.163839917040924",
   "difficulty": "Medium",
   "frontendQuestionId": 38,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count and Say",
   "titleSlug": "count-and-say",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.17482928987673",
   "difficulty": "Medium",
   "frontendQuestionId": 39,
   "isFavor": false,
   "paidOnly": false,
   "title": "Combination Sum",
   "titleSlug": "combination-sum",
   "topicTags": "['Array', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "57.334587336001306",
   "difficulty": "Medium",
   "frontendQuestionId": 40,
   "isFavor": false,
   "paidOnly": false,
   "title": "Combination Sum II",
   "titleSlug": "combination-sum-ii",
   "topicTags": "['Array', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.79074752537147",
   "difficulty": "Hard",
   "frontendQuestionId": 41,
   "isFavor": false,
   "paidOnly": false,
   "title": "First Missing Positive",
   "titleSlug": "first-missing-positive",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.54800550101851",
   "difficulty": "Hard",
   "frontendQuestionId": 42,
   "isFavor": false,
   "paidOnly": false,
   "title": "Trapping Rain Water",
   "titleSlug": "trapping-rain-water",
   "topicTags": "['Array', 'Two Pointers', 'Dynamic Programming', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.99278377903678",
   "difficulty": "Medium",
   "frontendQuestionId": 43,
   "isFavor": false,
   "paidOnly": false,
   "title": "Multiply Strings",
   "titleSlug": "multiply-strings",
   "topicTags": "['Math', 'String', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.521067360840892",
   "difficulty": "Hard",
   "frontendQuestionId": 44,
   "isFavor": false,
   "paidOnly": false,
   "title": "Wildcard Matching",
   "titleSlug": "wildcard-matching",
   "topicTags": "['String', 'Dynamic Programming', 'Greedy', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.23835732745089",
   "difficulty": "Medium",
   "frontendQuestionId": 45,
   "isFavor": false,
   "paidOnly": false,
   "title": "Jump Game II",
   "titleSlug": "jump-game-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.32223826088229",
   "difficulty": "Medium",
   "frontendQuestionId": 46,
   "isFavor": false,
   "paidOnly": false,
   "title": "Permutations",
   "titleSlug": "permutations",
   "topicTags": "['Array', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.19496695115565",
   "difficulty": "Medium",
   "frontendQuestionId": 47,
   "isFavor": false,
   "paidOnly": false,
   "title": "Permutations II",
   "titleSlug": "permutations-ii",
   "topicTags": "['Array', 'Backtracking', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.41395736655889",
   "difficulty": "Medium",
   "frontendQuestionId": 48,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rotate Image",
   "titleSlug": "rotate-image",
   "topicTags": "['Array', 'Math', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.5572662582935",
   "difficulty": "Medium",
   "frontendQuestionId": 49,
   "isFavor": false,
   "paidOnly": false,
   "title": "Group Anagrams",
   "titleSlug": "group-anagrams",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "36.68207784402375",
   "difficulty": "Medium",
   "frontendQuestionId": 50,
   "isFavor": false,
   "paidOnly": false,
   "title": "Pow(x, n)",
   "titleSlug": "powx-n",
   "topicTags": "['Math', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.03651046667065",
   "difficulty": "Hard",
   "frontendQuestionId": 51,
   "isFavor": false,
   "paidOnly": false,
   "title": "N-Queens",
   "titleSlug": "n-queens",
   "topicTags": "['Array', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.26205612975849",
   "difficulty": "Hard",
   "frontendQuestionId": 52,
   "isFavor": false,
   "paidOnly": false,
   "title": "N-Queens II",
   "titleSlug": "n-queens-ii",
   "topicTags": "['Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.856984162877914",
   "difficulty": "Medium",
   "frontendQuestionId": 53,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Subarray",
   "titleSlug": "maximum-subarray",
   "topicTags": "['Array', 'Divide and Conquer', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "53.28543732754548",
   "difficulty": "Medium",
   "frontendQuestionId": 54,
   "isFavor": false,
   "paidOnly": false,
   "title": "Spiral Matrix",
   "titleSlug": "spiral-matrix",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.208807028620676",
   "difficulty": "Medium",
   "frontendQuestionId": 55,
   "isFavor": false,
   "paidOnly": false,
   "title": "Jump Game",
   "titleSlug": "jump-game",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.017818618218996",
   "difficulty": "Medium",
   "frontendQuestionId": 56,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge Intervals",
   "titleSlug": "merge-intervals",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "43.11610116029291",
   "difficulty": "Medium",
   "frontendQuestionId": 57,
   "isFavor": false,
   "paidOnly": false,
   "title": "Insert Interval",
   "titleSlug": "insert-interval",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.75914509337545",
   "difficulty": "Easy",
   "frontendQuestionId": 58,
   "isFavor": false,
   "paidOnly": false,
   "title": "Length of Last Word",
   "titleSlug": "length-of-last-word",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.11256996271193",
   "difficulty": "Medium",
   "frontendQuestionId": 59,
   "isFavor": false,
   "paidOnly": false,
   "title": "Spiral Matrix II",
   "titleSlug": "spiral-matrix-ii",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.39853883875239",
   "difficulty": "Hard",
   "frontendQuestionId": 60,
   "isFavor": false,
   "paidOnly": false,
   "title": "Permutation Sequence",
   "titleSlug": "permutation-sequence",
   "topicTags": "['Math', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.58616466769273",
   "difficulty": "Medium",
   "frontendQuestionId": 61,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rotate List",
   "titleSlug": "rotate-list",
   "topicTags": "['Linked List', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.53006461580337",
   "difficulty": "Medium",
   "frontendQuestionId": 62,
   "isFavor": false,
   "paidOnly": false,
   "title": "Unique Paths",
   "titleSlug": "unique-paths",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.8798137338955",
   "difficulty": "Medium",
   "frontendQuestionId": 63,
   "isFavor": false,
   "paidOnly": false,
   "title": "Unique Paths II",
   "titleSlug": "unique-paths-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.05915402258931",
   "difficulty": "Medium",
   "frontendQuestionId": 64,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Path Sum",
   "titleSlug": "minimum-path-sum",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "21.254069053844923",
   "difficulty": "Hard",
   "frontendQuestionId": 65,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Number",
   "titleSlug": "valid-number",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.21795386110077",
   "difficulty": "Easy",
   "frontendQuestionId": 66,
   "isFavor": false,
   "paidOnly": false,
   "title": "Plus One",
   "titleSlug": "plus-one",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.35535152388873",
   "difficulty": "Easy",
   "frontendQuestionId": 67,
   "isFavor": false,
   "paidOnly": false,
   "title": "Add Binary",
   "titleSlug": "add-binary",
   "topicTags": "['Math', 'String', 'Bit Manipulation', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.47001920612862",
   "difficulty": "Hard",
   "frontendQuestionId": 68,
   "isFavor": false,
   "paidOnly": false,
   "title": "Text Justification",
   "titleSlug": "text-justification",
   "topicTags": "['Array', 'String', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.14846281542911",
   "difficulty": "Easy",
   "frontendQuestionId": 69,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sqrt(x)",
   "titleSlug": "sqrtx",
   "topicTags": "['Math', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "53.40586674556813",
   "difficulty": "Easy",
   "frontendQuestionId": 70,
   "isFavor": false,
   "paidOnly": false,
   "title": "Climbing Stairs",
   "titleSlug": "climbing-stairs",
   "topicTags": "['Math', 'Dynamic Programming', 'Memoization']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.03654259964322",
   "difficulty": "Medium",
   "frontendQuestionId": 71,
   "isFavor": false,
   "paidOnly": false,
   "title": "Simplify Path",
   "titleSlug": "simplify-path",
   "topicTags": "['String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "58.37253922779719",
   "difficulty": "Medium",
   "frontendQuestionId": 72,
   "isFavor": false,
   "paidOnly": false,
   "title": "Edit Distance",
   "titleSlug": "edit-distance",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.237687013872254",
   "difficulty": "Medium",
   "frontendQuestionId": 73,
   "isFavor": false,
   "paidOnly": false,
   "title": "Set Matrix Zeroes",
   "titleSlug": "set-matrix-zeroes",
   "topicTags": "['Array', 'Hash Table', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.93615839678244",
   "difficulty": "Medium",
   "frontendQuestionId": 74,
   "isFavor": false,
   "paidOnly": false,
   "title": "Search a 2D Matrix",
   "titleSlug": "search-a-2d-matrix",
   "topicTags": "['Array', 'Binary Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.62584948187974",
   "difficulty": "Medium",
   "frontendQuestionId": 75,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort Colors",
   "titleSlug": "sort-colors",
   "topicTags": "['Array', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.88927254672343",
   "difficulty": "Hard",
   "frontendQuestionId": 76,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Window Substring",
   "titleSlug": "minimum-window-substring",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.48905682866528",
   "difficulty": "Medium",
   "frontendQuestionId": 77,
   "isFavor": false,
   "paidOnly": false,
   "title": "Combinations",
   "titleSlug": "combinations",
   "topicTags": "['Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.46166932893514",
   "difficulty": "Medium",
   "frontendQuestionId": 78,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subsets",
   "titleSlug": "subsets",
   "topicTags": "['Array', 'Backtracking', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "44.8280685348205",
   "difficulty": "Medium",
   "frontendQuestionId": 79,
   "isFavor": false,
   "paidOnly": false,
   "title": "Word Search",
   "titleSlug": "word-search",
   "topicTags": "['Array', 'String', 'Backtracking', 'Depth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.47353691493218",
   "difficulty": "Medium",
   "frontendQuestionId": 80,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Duplicates from Sorted Array II",
   "titleSlug": "remove-duplicates-from-sorted-array-ii",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.67160389142475",
   "difficulty": "Medium",
   "frontendQuestionId": 81,
   "isFavor": false,
   "paidOnly": false,
   "title": "Search in Rotated Sorted Array II",
   "titleSlug": "search-in-rotated-sorted-array-ii",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.453778952208424",
   "difficulty": "Medium",
   "frontendQuestionId": 82,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Duplicates from Sorted List II",
   "titleSlug": "remove-duplicates-from-sorted-list-ii",
   "topicTags": "['Linked List', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.526305790167086",
   "difficulty": "Easy",
   "frontendQuestionId": 83,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Duplicates from Sorted List",
   "titleSlug": "remove-duplicates-from-sorted-list",
   "topicTags": "['Linked List']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "46.827894581957295",
   "difficulty": "Hard",
   "frontendQuestionId": 84,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Rectangle in Histogram",
   "titleSlug": "largest-rectangle-in-histogram",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "53.11206834635055",
   "difficulty": "Hard",
   "frontendQuestionId": 85,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximal Rectangle",
   "titleSlug": "maximal-rectangle",
   "topicTags": "['Array', 'Dynamic Programming', 'Stack', 'Matrix', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.53383111010804",
   "difficulty": "Medium",
   "frontendQuestionId": 86,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition List",
   "titleSlug": "partition-list",
   "topicTags": "['Linked List', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.82100960823774",
   "difficulty": "Hard",
   "frontendQuestionId": 87,
   "isFavor": false,
   "paidOnly": false,
   "title": "Scramble String",
   "titleSlug": "scramble-string",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.48448426066158",
   "difficulty": "Easy",
   "frontendQuestionId": 88,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge Sorted Array",
   "titleSlug": "merge-sorted-array",
   "topicTags": "['Array', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "61.38800864241988",
   "difficulty": "Medium",
   "frontendQuestionId": 89,
   "isFavor": false,
   "paidOnly": false,
   "title": "Gray Code",
   "titleSlug": "gray-code",
   "topicTags": "['Math', 'Backtracking', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.08220843912342",
   "difficulty": "Medium",
   "frontendQuestionId": 90,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subsets II",
   "titleSlug": "subsets-ii",
   "topicTags": "['Array', 'Backtracking', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.24152581776716",
   "difficulty": "Medium",
   "frontendQuestionId": 91,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decode Ways",
   "titleSlug": "decode-ways",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "49.26211551521298",
   "difficulty": "Medium",
   "frontendQuestionId": 92,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Linked List II",
   "titleSlug": "reverse-linked-list-ii",
   "topicTags": "['Linked List']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "52.6022539191415",
   "difficulty": "Medium",
   "frontendQuestionId": 93,
   "isFavor": false,
   "paidOnly": false,
   "title": "Restore IP Addresses",
   "titleSlug": "restore-ip-addresses",
   "topicTags": "['String', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.20589737717746",
   "difficulty": "Easy",
   "frontendQuestionId": 94,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Inorder Traversal",
   "titleSlug": "binary-tree-inorder-traversal",
   "topicTags": "['Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.960737412385825",
   "difficulty": "Medium",
   "frontendQuestionId": 95,
   "isFavor": false,
   "paidOnly": false,
   "title": "Unique Binary Search Trees II",
   "titleSlug": "unique-binary-search-trees-ii",
   "topicTags": "['Dynamic Programming', 'Backtracking', 'Tree', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.223596180654795",
   "difficulty": "Medium",
   "frontendQuestionId": 96,
   "isFavor": false,
   "paidOnly": false,
   "title": "Unique Binary Search Trees",
   "titleSlug": "unique-binary-search-trees",
   "topicTags": "['Math', 'Dynamic Programming', 'Tree', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.579849037848646",
   "difficulty": "Medium",
   "frontendQuestionId": 97,
   "isFavor": false,
   "paidOnly": false,
   "title": "Interleaving String",
   "titleSlug": "interleaving-string",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.11056802559829",
   "difficulty": "Medium",
   "frontendQuestionId": 98,
   "isFavor": false,
   "paidOnly": false,
   "title": "Validate Binary Search Tree",
   "titleSlug": "validate-binary-search-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "55.70758076477843",
   "difficulty": "Medium",
   "frontendQuestionId": 99,
   "isFavor": false,
   "paidOnly": false,
   "title": "Recover Binary Search Tree",
   "titleSlug": "recover-binary-search-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.63721997383307",
   "difficulty": "Easy",
   "frontendQuestionId": 100,
   "isFavor": false,
   "paidOnly": false,
   "title": "Same Tree",
   "titleSlug": "same-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "58.84787078991024",
   "difficulty": "Easy",
   "frontendQuestionId": 101,
   "isFavor": false,
   "paidOnly": false,
   "title": "Symmetric Tree",
   "titleSlug": "symmetric-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "70.08174453677458",
   "difficulty": "Medium",
   "frontendQuestionId": 102,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Level Order Traversal",
   "titleSlug": "binary-tree-level-order-traversal",
   "topicTags": "['Tree', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.23410984474313",
   "difficulty": "Medium",
   "frontendQuestionId": 103,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Zigzag Level Order Traversal",
   "titleSlug": "binary-tree-zigzag-level-order-traversal",
   "topicTags": "['Tree', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.88843143428716",
   "difficulty": "Easy",
   "frontendQuestionId": 104,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Depth of Binary Tree",
   "titleSlug": "maximum-depth-of-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "66.35663492855096",
   "difficulty": "Medium",
   "frontendQuestionId": 105,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct Binary Tree from Preorder and Inorder Traversal",
   "titleSlug": "construct-binary-tree-from-preorder-and-inorder-traversal",
   "topicTags": "['Array', 'Hash Table', 'Divide and Conquer', 'Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.87913731814055",
   "difficulty": "Medium",
   "frontendQuestionId": 106,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct Binary Tree from Inorder and Postorder Traversal",
   "titleSlug": "construct-binary-tree-from-inorder-and-postorder-traversal",
   "topicTags": "['Array', 'Hash Table', 'Divide and Conquer', 'Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.56805089892934",
   "difficulty": "Medium",
   "frontendQuestionId": 107,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Level Order Traversal II",
   "titleSlug": "binary-tree-level-order-traversal-ii",
   "topicTags": "['Tree', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.73837506858537",
   "difficulty": "Easy",
   "frontendQuestionId": 108,
   "isFavor": false,
   "paidOnly": false,
   "title": "Convert Sorted Array to Binary Search Tree",
   "titleSlug": "convert-sorted-array-to-binary-search-tree",
   "topicTags": "['Array', 'Divide and Conquer', 'Tree', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "64.07128232055696",
   "difficulty": "Medium",
   "frontendQuestionId": 109,
   "isFavor": false,
   "paidOnly": false,
   "title": "Convert Sorted List to Binary Search Tree",
   "titleSlug": "convert-sorted-list-to-binary-search-tree",
   "topicTags": "['Linked List', 'Divide and Conquer', 'Tree', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "54.84580778050731",
   "difficulty": "Easy",
   "frontendQuestionId": 110,
   "isFavor": false,
   "paidOnly": false,
   "title": "Balanced Binary Tree",
   "titleSlug": "balanced-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.22250152802686",
   "difficulty": "Easy",
   "frontendQuestionId": 111,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Depth of Binary Tree",
   "titleSlug": "minimum-depth-of-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.585529755016516",
   "difficulty": "Easy",
   "frontendQuestionId": 112,
   "isFavor": false,
   "paidOnly": false,
   "title": "Path Sum",
   "titleSlug": "path-sum",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.15894522241499",
   "difficulty": "Medium",
   "frontendQuestionId": 113,
   "isFavor": false,
   "paidOnly": false,
   "title": "Path Sum II",
   "titleSlug": "path-sum-ii",
   "topicTags": "['Backtracking', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.95135671662553",
   "difficulty": "Medium",
   "frontendQuestionId": 114,
   "isFavor": false,
   "paidOnly": false,
   "title": "Flatten Binary Tree to Linked List",
   "titleSlug": "flatten-binary-tree-to-linked-list",
   "topicTags": "['Linked List', 'Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.64461157136712",
   "difficulty": "Hard",
   "frontendQuestionId": 115,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distinct Subsequences",
   "titleSlug": "distinct-subsequences",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.05375516072644",
   "difficulty": "Medium",
   "frontendQuestionId": 116,
   "isFavor": false,
   "paidOnly": false,
   "title": "Populating Next Right Pointers in Each Node",
   "titleSlug": "populating-next-right-pointers-in-each-node",
   "topicTags": "['Linked List', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.114076489344455",
   "difficulty": "Medium",
   "frontendQuestionId": 117,
   "isFavor": false,
   "paidOnly": false,
   "title": "Populating Next Right Pointers in Each Node II",
   "titleSlug": "populating-next-right-pointers-in-each-node-ii",
   "topicTags": "['Linked List', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.62019793551134",
   "difficulty": "Easy",
   "frontendQuestionId": 118,
   "isFavor": false,
   "paidOnly": false,
   "title": "Pascal's Triangle",
   "titleSlug": "pascals-triangle",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "65.64332740247664",
   "difficulty": "Easy",
   "frontendQuestionId": 119,
   "isFavor": false,
   "paidOnly": false,
   "title": "Pascal's Triangle II",
   "titleSlug": "pascals-triangle-ii",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.81466283479497",
   "difficulty": "Medium",
   "frontendQuestionId": 120,
   "isFavor": false,
   "paidOnly": false,
   "title": "Triangle",
   "titleSlug": "triangle",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.917541416626605",
   "difficulty": "Easy",
   "frontendQuestionId": 121,
   "isFavor": false,
   "paidOnly": false,
   "title": "Best Time to Buy and Sell Stock",
   "titleSlug": "best-time-to-buy-and-sell-stock",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "69.08096981252993",
   "difficulty": "Medium",
   "frontendQuestionId": 122,
   "isFavor": false,
   "paidOnly": false,
   "title": "Best Time to Buy and Sell Stock II",
   "titleSlug": "best-time-to-buy-and-sell-stock-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "50.49674341834229",
   "difficulty": "Hard",
   "frontendQuestionId": 123,
   "isFavor": false,
   "paidOnly": false,
   "title": "Best Time to Buy and Sell Stock III",
   "titleSlug": "best-time-to-buy-and-sell-stock-iii",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.01705434340362",
   "difficulty": "Hard",
   "frontendQuestionId": 124,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Maximum Path Sum",
   "titleSlug": "binary-tree-maximum-path-sum",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.43772738389903",
   "difficulty": "Easy",
   "frontendQuestionId": 125,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Palindrome",
   "titleSlug": "valid-palindrome",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.128707140135987",
   "difficulty": "Hard",
   "frontendQuestionId": 126,
   "isFavor": false,
   "paidOnly": false,
   "title": "Word Ladder II",
   "titleSlug": "word-ladder-ii",
   "topicTags": "['Hash Table', 'String', 'Backtracking', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.170272147323686",
   "difficulty": "Hard",
   "frontendQuestionId": 127,
   "isFavor": false,
   "paidOnly": false,
   "title": "Word Ladder",
   "titleSlug": "word-ladder",
   "topicTags": "['Hash Table', 'String', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "47.13009989735594",
   "difficulty": "Medium",
   "frontendQuestionId": 128,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Consecutive Sequence",
   "titleSlug": "longest-consecutive-sequence",
   "topicTags": "['Array', 'Hash Table', 'Union Find']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.13143482468416",
   "difficulty": "Medium",
   "frontendQuestionId": 129,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum Root to Leaf Numbers",
   "titleSlug": "sum-root-to-leaf-numbers",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.326444279887085",
   "difficulty": "Medium",
   "frontendQuestionId": 130,
   "isFavor": false,
   "paidOnly": false,
   "title": "Surrounded Regions",
   "titleSlug": "surrounded-regions",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.61107069454218",
   "difficulty": "Medium",
   "frontendQuestionId": 131,
   "isFavor": false,
   "paidOnly": false,
   "title": "Palindrome Partitioning",
   "titleSlug": "palindrome-partitioning",
   "topicTags": "['String', 'Dynamic Programming', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.983781488068374",
   "difficulty": "Hard",
   "frontendQuestionId": 132,
   "isFavor": false,
   "paidOnly": false,
   "title": "Palindrome Partitioning II",
   "titleSlug": "palindrome-partitioning-ii",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.58938834133822",
   "difficulty": "Medium",
   "frontendQuestionId": 133,
   "isFavor": false,
   "paidOnly": false,
   "title": "Clone Graph",
   "titleSlug": "clone-graph",
   "topicTags": "['Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.09316555148453",
   "difficulty": "Medium",
   "frontendQuestionId": 134,
   "isFavor": false,
   "paidOnly": false,
   "title": "Gas Station",
   "titleSlug": "gas-station",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.502524582756216",
   "difficulty": "Hard",
   "frontendQuestionId": 135,
   "isFavor": false,
   "paidOnly": false,
   "title": "Candy",
   "titleSlug": "candy",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.55385607802721",
   "difficulty": "Easy",
   "frontendQuestionId": 136,
   "isFavor": false,
   "paidOnly": false,
   "title": "Single Number",
   "titleSlug": "single-number",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.86222066956945",
   "difficulty": "Medium",
   "frontendQuestionId": 137,
   "isFavor": false,
   "paidOnly": false,
   "title": "Single Number II",
   "titleSlug": "single-number-ii",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.858387632279296",
   "difficulty": "Medium",
   "frontendQuestionId": 138,
   "isFavor": false,
   "paidOnly": false,
   "title": "Copy List with Random Pointer",
   "titleSlug": "copy-list-with-random-pointer",
   "topicTags": "['Hash Table', 'Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.01360441257331",
   "difficulty": "Medium",
   "frontendQuestionId": 139,
   "isFavor": false,
   "paidOnly": false,
   "title": "Word Break",
   "titleSlug": "word-break",
   "topicTags": "['Array', 'Hash Table', 'String', 'Dynamic Programming', 'Trie', 'Memoization']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "53.1695277538508",
   "difficulty": "Hard",
   "frontendQuestionId": 140,
   "isFavor": false,
   "paidOnly": false,
   "title": "Word Break II",
   "titleSlug": "word-break-ii",
   "topicTags": "['Array', 'Hash Table', 'String', 'Dynamic Programming', 'Backtracking', 'Trie', 'Memoization']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.170690714296505",
   "difficulty": "Easy",
   "frontendQuestionId": 141,
   "isFavor": false,
   "paidOnly": false,
   "title": "Linked List Cycle",
   "titleSlug": "linked-list-cycle",
   "topicTags": "['Hash Table', 'Linked List', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "54.30016759480062",
   "difficulty": "Medium",
   "frontendQuestionId": 142,
   "isFavor": false,
   "paidOnly": false,
   "title": "Linked List Cycle II",
   "titleSlug": "linked-list-cycle-ii",
   "topicTags": "['Hash Table', 'Linked List', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.89578500602961",
   "difficulty": "Medium",
   "frontendQuestionId": 143,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reorder List",
   "titleSlug": "reorder-list",
   "topicTags": "['Linked List', 'Two Pointers', 'Stack', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.61416965380624",
   "difficulty": "Easy",
   "frontendQuestionId": 144,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Preorder Traversal",
   "titleSlug": "binary-tree-preorder-traversal",
   "topicTags": "['Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.17174123703069",
   "difficulty": "Easy",
   "frontendQuestionId": 145,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Postorder Traversal",
   "titleSlug": "binary-tree-postorder-traversal",
   "topicTags": "['Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.7034071213883",
   "difficulty": "Medium",
   "frontendQuestionId": 146,
   "isFavor": false,
   "paidOnly": false,
   "title": "LRU Cache",
   "titleSlug": "lru-cache",
   "topicTags": "['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.001725328273075",
   "difficulty": "Medium",
   "frontendQuestionId": 147,
   "isFavor": false,
   "paidOnly": false,
   "title": "Insertion Sort List",
   "titleSlug": "insertion-sort-list",
   "topicTags": "['Linked List', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "61.171883322252306",
   "difficulty": "Medium",
   "frontendQuestionId": 148,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort List",
   "titleSlug": "sort-list",
   "topicTags": "['Linked List', 'Two Pointers', 'Divide and Conquer', 'Sorting', 'Merge Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.603217601087582",
   "difficulty": "Hard",
   "frontendQuestionId": 149,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Points on a Line",
   "titleSlug": "max-points-on-a-line",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Geometry']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.36149392828603",
   "difficulty": "Medium",
   "frontendQuestionId": 150,
   "isFavor": false,
   "paidOnly": false,
   "title": "Evaluate Reverse Polish Notation",
   "titleSlug": "evaluate-reverse-polish-notation",
   "topicTags": "['Array', 'Math', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.76627963532967",
   "difficulty": "Medium",
   "frontendQuestionId": 151,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Words in a String",
   "titleSlug": "reverse-words-in-a-string",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.661621126663164",
   "difficulty": "Medium",
   "frontendQuestionId": 152,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Product Subarray",
   "titleSlug": "maximum-product-subarray",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.32178284315621",
   "difficulty": "Medium",
   "frontendQuestionId": 153,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Minimum in Rotated Sorted Array",
   "titleSlug": "find-minimum-in-rotated-sorted-array",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.03912973299012",
   "difficulty": "Hard",
   "frontendQuestionId": 154,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Minimum in Rotated Sorted Array II",
   "titleSlug": "find-minimum-in-rotated-sorted-array-ii",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.100879422758545",
   "difficulty": "Medium",
   "frontendQuestionId": 155,
   "isFavor": false,
   "paidOnly": false,
   "title": "Min Stack",
   "titleSlug": "min-stack",
   "topicTags": "['Stack', 'Design']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.27365991428556",
   "difficulty": "Medium",
   "frontendQuestionId": 156,
   "isFavor": false,
   "paidOnly": true,
   "title": "Binary Tree Upside Down",
   "titleSlug": "binary-tree-upside-down",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.13558441776017",
   "difficulty": "Easy",
   "frontendQuestionId": 157,
   "isFavor": false,
   "paidOnly": true,
   "title": "Read N Characters Given Read4",
   "titleSlug": "read-n-characters-given-read4",
   "topicTags": "['Array', 'Simulation', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.792484346129584",
   "difficulty": "Hard",
   "frontendQuestionId": 158,
   "isFavor": false,
   "paidOnly": true,
   "title": "Read N Characters Given read4 II - Call Multiple Times",
   "titleSlug": "read-n-characters-given-read4-ii-call-multiple-times",
   "topicTags": "['Array', 'Simulation', 'Interactive']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.166546472829836",
   "difficulty": "Medium",
   "frontendQuestionId": 159,
   "isFavor": false,
   "paidOnly": true,
   "title": "Longest Substring with At Most Two Distinct Characters",
   "titleSlug": "longest-substring-with-at-most-two-distinct-characters",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "60.54281906473524",
   "difficulty": "Easy",
   "frontendQuestionId": 160,
   "isFavor": false,
   "paidOnly": false,
   "title": "Intersection of Two Linked Lists",
   "titleSlug": "intersection-of-two-linked-lists",
   "topicTags": "['Hash Table', 'Linked List', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "34.462399533226",
   "difficulty": "Medium",
   "frontendQuestionId": 161,
   "isFavor": false,
   "paidOnly": true,
   "title": "One Edit Distance",
   "titleSlug": "one-edit-distance",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.396559377413055",
   "difficulty": "Medium",
   "frontendQuestionId": 162,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Peak Element",
   "titleSlug": "find-peak-element",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "35.07924348265546",
   "difficulty": "Easy",
   "frontendQuestionId": 163,
   "isFavor": false,
   "paidOnly": true,
   "title": "Missing Ranges",
   "titleSlug": "missing-ranges",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.81446594023468",
   "difficulty": "Medium",
   "frontendQuestionId": 164,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Gap",
   "titleSlug": "maximum-gap",
   "topicTags": "['Array', 'Sorting', 'Bucket Sort', 'Radix Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.07519055086168",
   "difficulty": "Medium",
   "frontendQuestionId": 165,
   "isFavor": false,
   "paidOnly": false,
   "title": "Compare Version Numbers",
   "titleSlug": "compare-version-numbers",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.99917039660628",
   "difficulty": "Medium",
   "frontendQuestionId": 166,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fraction to Recurring Decimal",
   "titleSlug": "fraction-to-recurring-decimal",
   "topicTags": "['Hash Table', 'Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.05176932826424",
   "difficulty": "Medium",
   "frontendQuestionId": 167,
   "isFavor": false,
   "paidOnly": false,
   "title": "Two Sum II - Input Array Is Sorted",
   "titleSlug": "two-sum-ii-input-array-is-sorted",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.06426068203262",
   "difficulty": "Easy",
   "frontendQuestionId": 168,
   "isFavor": false,
   "paidOnly": false,
   "title": "Excel Sheet Column Title",
   "titleSlug": "excel-sheet-column-title",
   "topicTags": "['Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.56892143374714",
   "difficulty": "Easy",
   "frontendQuestionId": 169,
   "isFavor": false,
   "paidOnly": false,
   "title": "Majority Element",
   "titleSlug": "majority-element",
   "topicTags": "['Array', 'Hash Table', 'Divide and Conquer', 'Sorting', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.60033521325587",
   "difficulty": "Easy",
   "frontendQuestionId": 170,
   "isFavor": false,
   "paidOnly": true,
   "title": "Two Sum III - Data structure design",
   "titleSlug": "two-sum-iii-data-structure-design",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Design', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.41758504708174",
   "difficulty": "Easy",
   "frontendQuestionId": 171,
   "isFavor": false,
   "paidOnly": false,
   "title": "Excel Sheet Column Number",
   "titleSlug": "excel-sheet-column-number",
   "topicTags": "['Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.57352967694449",
   "difficulty": "Medium",
   "frontendQuestionId": 172,
   "isFavor": false,
   "paidOnly": false,
   "title": "Factorial Trailing Zeroes",
   "titleSlug": "factorial-trailing-zeroes",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.47714020382705",
   "difficulty": "Medium",
   "frontendQuestionId": 173,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Search Tree Iterator",
   "titleSlug": "binary-search-tree-iterator",
   "topicTags": "['Stack', 'Tree', 'Design', 'Binary Search Tree', 'Binary Tree', 'Iterator']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.23273823626422",
   "difficulty": "Hard",
   "frontendQuestionId": 174,
   "isFavor": false,
   "paidOnly": false,
   "title": "Dungeon Game",
   "titleSlug": "dungeon-game",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.72856386610518",
   "difficulty": "Easy",
   "frontendQuestionId": 175,
   "isFavor": false,
   "paidOnly": false,
   "title": "Combine Two Tables",
   "titleSlug": "combine-two-tables",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.23549375846015",
   "difficulty": "Medium",
   "frontendQuestionId": 176,
   "isFavor": false,
   "paidOnly": false,
   "title": "Second Highest Salary",
   "titleSlug": "second-highest-salary",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.87709693858367",
   "difficulty": "Medium",
   "frontendQuestionId": 177,
   "isFavor": false,
   "paidOnly": false,
   "title": "Nth Highest Salary",
   "titleSlug": "nth-highest-salary",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.76711239521113",
   "difficulty": "Medium",
   "frontendQuestionId": 178,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rank Scores",
   "titleSlug": "rank-scores",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.98636892858161",
   "difficulty": "Medium",
   "frontendQuestionId": 179,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Number",
   "titleSlug": "largest-number",
   "topicTags": "['Array', 'String', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.63540555897164",
   "difficulty": "Medium",
   "frontendQuestionId": 180,
   "isFavor": false,
   "paidOnly": false,
   "title": "Consecutive Numbers",
   "titleSlug": "consecutive-numbers",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.20616161597785",
   "difficulty": "Easy",
   "frontendQuestionId": 181,
   "isFavor": false,
   "paidOnly": false,
   "title": "Employees Earning More Than Their Managers",
   "titleSlug": "employees-earning-more-than-their-managers",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.20110760250282",
   "difficulty": "Easy",
   "frontendQuestionId": 182,
   "isFavor": false,
   "paidOnly": false,
   "title": "Duplicate Emails",
   "titleSlug": "duplicate-emails",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.41864947195337",
   "difficulty": "Easy",
   "frontendQuestionId": 183,
   "isFavor": false,
   "paidOnly": false,
   "title": "Customers Who Never Order",
   "titleSlug": "customers-who-never-order",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.14050839284484",
   "difficulty": "Medium",
   "frontendQuestionId": 184,
   "isFavor": false,
   "paidOnly": false,
   "title": "Department Highest Salary",
   "titleSlug": "department-highest-salary",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.12175650176692",
   "difficulty": "Hard",
   "frontendQuestionId": 185,
   "isFavor": false,
   "paidOnly": false,
   "title": "Department Top Three Salaries",
   "titleSlug": "department-top-three-salaries",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.875064699792965",
   "difficulty": "Medium",
   "frontendQuestionId": 186,
   "isFavor": false,
   "paidOnly": true,
   "title": "Reverse Words in a String II",
   "titleSlug": "reverse-words-in-a-string-ii",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "50.91627661023838",
   "difficulty": "Medium",
   "frontendQuestionId": 187,
   "isFavor": false,
   "paidOnly": false,
   "title": "Repeated DNA Sequences",
   "titleSlug": "repeated-dna-sequences",
   "topicTags": "['Hash Table', 'String', 'Bit Manipulation', 'Sliding Window', 'Rolling Hash', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.34749636596209",
   "difficulty": "Hard",
   "frontendQuestionId": 188,
   "isFavor": false,
   "paidOnly": false,
   "title": "Best Time to Buy and Sell Stock IV",
   "titleSlug": "best-time-to-buy-and-sell-stock-iv",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.64457806431453",
   "difficulty": "Medium",
   "frontendQuestionId": 189,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rotate Array",
   "titleSlug": "rotate-array",
   "topicTags": "['Array', 'Math', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.512268694533766",
   "difficulty": "Easy",
   "frontendQuestionId": 190,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Bits",
   "titleSlug": "reverse-bits",
   "topicTags": "['Divide and Conquer', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.00448077055407",
   "difficulty": "Easy",
   "frontendQuestionId": 191,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of 1 Bits",
   "titleSlug": "number-of-1-bits",
   "topicTags": "['Divide and Conquer', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.98886307613187",
   "difficulty": "Medium",
   "frontendQuestionId": 192,
   "isFavor": false,
   "paidOnly": false,
   "title": "Word Frequency",
   "titleSlug": "word-frequency",
   "topicTags": "['Shell']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.104746100770523",
   "difficulty": "Easy",
   "frontendQuestionId": 193,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Phone Numbers",
   "titleSlug": "valid-phone-numbers",
   "topicTags": "['Shell']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.09624785953207",
   "difficulty": "Medium",
   "frontendQuestionId": 194,
   "isFavor": false,
   "paidOnly": false,
   "title": "Transpose File",
   "titleSlug": "transpose-file",
   "topicTags": "['Shell']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.31058686803683",
   "difficulty": "Easy",
   "frontendQuestionId": 195,
   "isFavor": false,
   "paidOnly": false,
   "title": "Tenth Line",
   "titleSlug": "tenth-line",
   "topicTags": "['Shell']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.97106716208014",
   "difficulty": "Easy",
   "frontendQuestionId": 196,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Duplicate Emails",
   "titleSlug": "delete-duplicate-emails",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.95328567006882",
   "difficulty": "Easy",
   "frontendQuestionId": 197,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rising Temperature",
   "titleSlug": "rising-temperature",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.08982086559484",
   "difficulty": "Medium",
   "frontendQuestionId": 198,
   "isFavor": false,
   "paidOnly": false,
   "title": "House Robber",
   "titleSlug": "house-robber",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.16452373604615",
   "difficulty": "Medium",
   "frontendQuestionId": 199,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Right Side View",
   "titleSlug": "binary-tree-right-side-view",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "61.84977470033564",
   "difficulty": "Medium",
   "frontendQuestionId": 200,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Islands",
   "titleSlug": "number-of-islands",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "47.53928504251297",
   "difficulty": "Medium",
   "frontendQuestionId": 201,
   "isFavor": false,
   "paidOnly": false,
   "title": "Bitwise AND of Numbers Range",
   "titleSlug": "bitwise-and-of-numbers-range",
   "topicTags": "['Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.72668627820219",
   "difficulty": "Easy",
   "frontendQuestionId": 202,
   "isFavor": false,
   "paidOnly": false,
   "title": "Happy Number",
   "titleSlug": "happy-number",
   "topicTags": "['Hash Table', 'Math', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.39575568570777",
   "difficulty": "Easy",
   "frontendQuestionId": 203,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Linked List Elements",
   "titleSlug": "remove-linked-list-elements",
   "topicTags": "['Linked List', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.54131075943778",
   "difficulty": "Medium",
   "frontendQuestionId": 204,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Primes",
   "titleSlug": "count-primes",
   "topicTags": "['Array', 'Math', 'Enumeration', 'Number Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.556533060501",
   "difficulty": "Easy",
   "frontendQuestionId": 205,
   "isFavor": false,
   "paidOnly": false,
   "title": "Isomorphic Strings",
   "titleSlug": "isomorphic-strings",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.84051756162391",
   "difficulty": "Easy",
   "frontendQuestionId": 206,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Linked List",
   "titleSlug": "reverse-linked-list",
   "topicTags": "['Linked List', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "48.70314668601601",
   "difficulty": "Medium",
   "frontendQuestionId": 207,
   "isFavor": false,
   "paidOnly": false,
   "title": "Course Schedule",
   "titleSlug": "course-schedule",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.66522747109457",
   "difficulty": "Medium",
   "frontendQuestionId": 208,
   "isFavor": false,
   "paidOnly": false,
   "title": "Implement Trie (Prefix Tree)",
   "titleSlug": "implement-trie-prefix-tree",
   "topicTags": "['Hash Table', 'String', 'Design', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.95424548715766",
   "difficulty": "Medium",
   "frontendQuestionId": 209,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Size Subarray Sum",
   "titleSlug": "minimum-size-subarray-sum",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.89729193659325",
   "difficulty": "Medium",
   "frontendQuestionId": 210,
   "isFavor": false,
   "paidOnly": false,
   "title": "Course Schedule II",
   "titleSlug": "course-schedule-ii",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "46.86278290181542",
   "difficulty": "Medium",
   "frontendQuestionId": 211,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Add and Search Words Data Structure",
   "titleSlug": "design-add-and-search-words-data-structure",
   "topicTags": "['String', 'Depth-First Search', 'Design', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.11179144883208",
   "difficulty": "Hard",
   "frontendQuestionId": 212,
   "isFavor": false,
   "paidOnly": false,
   "title": "Word Search II",
   "titleSlug": "word-search-ii",
   "topicTags": "['Array', 'String', 'Backtracking', 'Trie', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "43.275162095278205",
   "difficulty": "Medium",
   "frontendQuestionId": 213,
   "isFavor": false,
   "paidOnly": false,
   "title": "House Robber II",
   "titleSlug": "house-robber-ii",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.42999468614901",
   "difficulty": "Hard",
   "frontendQuestionId": 214,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Palindrome",
   "titleSlug": "shortest-palindrome",
   "topicTags": "['String', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.73325921332224",
   "difficulty": "Medium",
   "frontendQuestionId": 215,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Largest Element in an Array",
   "titleSlug": "kth-largest-element-in-an-array",
   "topicTags": "['Array', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Quickselect']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "71.53218707429487",
   "difficulty": "Medium",
   "frontendQuestionId": 216,
   "isFavor": false,
   "paidOnly": false,
   "title": "Combination Sum III",
   "titleSlug": "combination-sum-iii",
   "topicTags": "['Array', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.94722457476656",
   "difficulty": "Easy",
   "frontendQuestionId": 217,
   "isFavor": false,
   "paidOnly": false,
   "title": "Contains Duplicate",
   "titleSlug": "contains-duplicate",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.74420708679064",
   "difficulty": "Hard",
   "frontendQuestionId": 218,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Skyline Problem",
   "titleSlug": "the-skyline-problem",
   "topicTags": "['Array', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Line Sweep', 'Heap (Priority Queue)', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.46467380118596",
   "difficulty": "Easy",
   "frontendQuestionId": 219,
   "isFavor": false,
   "paidOnly": false,
   "title": "Contains Duplicate II",
   "titleSlug": "contains-duplicate-ii",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.483085492748994",
   "difficulty": "Hard",
   "frontendQuestionId": 220,
   "isFavor": false,
   "paidOnly": false,
   "title": "Contains Duplicate III",
   "titleSlug": "contains-duplicate-iii",
   "topicTags": "['Array', 'Sliding Window', 'Sorting', 'Bucket Sort', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.40551354537252",
   "difficulty": "Medium",
   "frontendQuestionId": 221,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximal Square",
   "titleSlug": "maximal-square",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.28048692231879",
   "difficulty": "Easy",
   "frontendQuestionId": 222,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Complete Tree Nodes",
   "titleSlug": "count-complete-tree-nodes",
   "topicTags": "['Binary Search', 'Bit Manipulation', 'Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.11721496446171",
   "difficulty": "Medium",
   "frontendQuestionId": 223,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rectangle Area",
   "titleSlug": "rectangle-area",
   "topicTags": "['Math', 'Geometry']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.1385610507106",
   "difficulty": "Hard",
   "frontendQuestionId": 224,
   "isFavor": false,
   "paidOnly": false,
   "title": "Basic Calculator",
   "titleSlug": "basic-calculator",
   "topicTags": "['Math', 'String', 'Stack', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.7974011994464",
   "difficulty": "Easy",
   "frontendQuestionId": 225,
   "isFavor": false,
   "paidOnly": false,
   "title": "Implement Stack using Queues",
   "titleSlug": "implement-stack-using-queues",
   "topicTags": "['Stack', 'Design', 'Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.7443480498189",
   "difficulty": "Easy",
   "frontendQuestionId": 226,
   "isFavor": false,
   "paidOnly": false,
   "title": "Invert Binary Tree",
   "titleSlug": "invert-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "45.44387110481266",
   "difficulty": "Medium",
   "frontendQuestionId": 227,
   "isFavor": false,
   "paidOnly": false,
   "title": "Basic Calculator II",
   "titleSlug": "basic-calculator-ii",
   "topicTags": "['Math', 'String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.74872911876093",
   "difficulty": "Easy",
   "frontendQuestionId": 228,
   "isFavor": false,
   "paidOnly": false,
   "title": "Summary Ranges",
   "titleSlug": "summary-ranges",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.90763215521856",
   "difficulty": "Medium",
   "frontendQuestionId": 229,
   "isFavor": false,
   "paidOnly": false,
   "title": "Majority Element II",
   "titleSlug": "majority-element-ii",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.92560818931577",
   "difficulty": "Medium",
   "frontendQuestionId": 230,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Smallest Element in a BST",
   "titleSlug": "kth-smallest-element-in-a-bst",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.248587403964855",
   "difficulty": "Easy",
   "frontendQuestionId": 231,
   "isFavor": false,
   "paidOnly": false,
   "title": "Power of Two",
   "titleSlug": "power-of-two",
   "topicTags": "['Math', 'Bit Manipulation', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.89577265860983",
   "difficulty": "Easy",
   "frontendQuestionId": 232,
   "isFavor": false,
   "paidOnly": false,
   "title": "Implement Queue using Stacks",
   "titleSlug": "implement-queue-using-stacks",
   "topicTags": "['Stack', 'Design', 'Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.681223265019476",
   "difficulty": "Hard",
   "frontendQuestionId": 233,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Digit One",
   "titleSlug": "number-of-digit-one",
   "topicTags": "['Math', 'Dynamic Programming', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.38666761272927",
   "difficulty": "Easy",
   "frontendQuestionId": 234,
   "isFavor": false,
   "paidOnly": false,
   "title": "Palindrome Linked List",
   "titleSlug": "palindrome-linked-list",
   "topicTags": "['Linked List', 'Two Pointers', 'Stack', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "67.72613210156695",
   "difficulty": "Medium",
   "frontendQuestionId": 235,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lowest Common Ancestor of a Binary Search Tree",
   "titleSlug": "lowest-common-ancestor-of-a-binary-search-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.04760957285092",
   "difficulty": "Medium",
   "frontendQuestionId": 236,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lowest Common Ancestor of a Binary Tree",
   "titleSlug": "lowest-common-ancestor-of-a-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.91876620289827",
   "difficulty": "Medium",
   "frontendQuestionId": 237,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Node in a Linked List",
   "titleSlug": "delete-node-in-a-linked-list",
   "topicTags": "['Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.50065303456216",
   "difficulty": "Medium",
   "frontendQuestionId": 238,
   "isFavor": false,
   "paidOnly": false,
   "title": "Product of Array Except Self",
   "titleSlug": "product-of-array-except-self",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "47.35889002165485",
   "difficulty": "Hard",
   "frontendQuestionId": 239,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sliding Window Maximum",
   "titleSlug": "sliding-window-maximum",
   "topicTags": "['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Monotonic Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.66706004301156",
   "difficulty": "Medium",
   "frontendQuestionId": 240,
   "isFavor": false,
   "paidOnly": false,
   "title": "Search a 2D Matrix II",
   "titleSlug": "search-a-2d-matrix-ii",
   "topicTags": "['Array', 'Binary Search', 'Divide and Conquer', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "72.18222288673297",
   "difficulty": "Medium",
   "frontendQuestionId": 241,
   "isFavor": false,
   "paidOnly": false,
   "title": "Different Ways to Add Parentheses",
   "titleSlug": "different-ways-to-add-parentheses",
   "topicTags": "['Math', 'String', 'Dynamic Programming', 'Recursion', 'Memoization']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.32064504096365",
   "difficulty": "Easy",
   "frontendQuestionId": 242,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Anagram",
   "titleSlug": "valid-anagram",
   "topicTags": "['Hash Table', 'String', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "65.85981428755383",
   "difficulty": "Easy",
   "frontendQuestionId": 243,
   "isFavor": false,
   "paidOnly": true,
   "title": "Shortest Word Distance",
   "titleSlug": "shortest-word-distance",
   "topicTags": "['Array', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.97912179700873",
   "difficulty": "Medium",
   "frontendQuestionId": 244,
   "isFavor": false,
   "paidOnly": true,
   "title": "Shortest Word Distance II",
   "titleSlug": "shortest-word-distance-ii",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'String', 'Design']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "58.95278923670091",
   "difficulty": "Medium",
   "frontendQuestionId": 245,
   "isFavor": false,
   "paidOnly": true,
   "title": "Shortest Word Distance III",
   "titleSlug": "shortest-word-distance-iii",
   "topicTags": "['Array', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.5990531547051",
   "difficulty": "Easy",
   "frontendQuestionId": 246,
   "isFavor": false,
   "paidOnly": true,
   "title": "Strobogrammatic Number",
   "titleSlug": "strobogrammatic-number",
   "topicTags": "['Hash Table', 'Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "53.033251072924024",
   "difficulty": "Medium",
   "frontendQuestionId": 247,
   "isFavor": false,
   "paidOnly": true,
   "title": "Strobogrammatic Number II",
   "titleSlug": "strobogrammatic-number-ii",
   "topicTags": "['Array', 'String', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.38593875314876",
   "difficulty": "Hard",
   "frontendQuestionId": 248,
   "isFavor": false,
   "paidOnly": true,
   "title": "Strobogrammatic Number III",
   "titleSlug": "strobogrammatic-number-iii",
   "topicTags": "['Array', 'String', 'Recursion']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.12163160700757",
   "difficulty": "Medium",
   "frontendQuestionId": 249,
   "isFavor": false,
   "paidOnly": true,
   "title": "Group Shifted Strings",
   "titleSlug": "group-shifted-strings",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "57.05799894865954",
   "difficulty": "Medium",
   "frontendQuestionId": 250,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Univalue Subtrees",
   "titleSlug": "count-univalue-subtrees",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.043678018077955",
   "difficulty": "Medium",
   "frontendQuestionId": 251,
   "isFavor": false,
   "paidOnly": true,
   "title": "Flatten 2D Vector",
   "titleSlug": "flatten-2d-vector",
   "topicTags": "['Array', 'Two Pointers', 'Design', 'Iterator']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.83551958118572",
   "difficulty": "Easy",
   "frontendQuestionId": 252,
   "isFavor": false,
   "paidOnly": true,
   "title": "Meeting Rooms",
   "titleSlug": "meeting-rooms",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "52.00140062117144",
   "difficulty": "Medium",
   "frontendQuestionId": 253,
   "isFavor": false,
   "paidOnly": true,
   "title": "Meeting Rooms II",
   "titleSlug": "meeting-rooms-ii",
   "topicTags": "['Array', 'Two Pointers', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "50.1685131669389",
   "difficulty": "Medium",
   "frontendQuestionId": 254,
   "isFavor": false,
   "paidOnly": true,
   "title": "Factor Combinations",
   "titleSlug": "factor-combinations",
   "topicTags": "['Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.73289949892711",
   "difficulty": "Medium",
   "frontendQuestionId": 255,
   "isFavor": false,
   "paidOnly": true,
   "title": "Verify Preorder Sequence in Binary Search Tree",
   "titleSlug": "verify-preorder-sequence-in-binary-search-tree",
   "topicTags": "['Array', 'Stack', 'Tree', 'Binary Search Tree', 'Recursion', 'Monotonic Stack', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.550267525569424",
   "difficulty": "Medium",
   "frontendQuestionId": 256,
   "isFavor": false,
   "paidOnly": true,
   "title": "Paint House",
   "titleSlug": "paint-house",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.01837245552262",
   "difficulty": "Easy",
   "frontendQuestionId": 257,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Paths",
   "titleSlug": "binary-tree-paths",
   "topicTags": "['String', 'Backtracking', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.69678326844932",
   "difficulty": "Easy",
   "frontendQuestionId": 258,
   "isFavor": false,
   "paidOnly": false,
   "title": "Add Digits",
   "titleSlug": "add-digits",
   "topicTags": "['Math', 'Simulation', 'Number Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.95213603377009",
   "difficulty": "Medium",
   "frontendQuestionId": 259,
   "isFavor": false,
   "paidOnly": true,
   "title": "3Sum Smaller",
   "titleSlug": "3sum-smaller",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.68501939123767",
   "difficulty": "Medium",
   "frontendQuestionId": 260,
   "isFavor": false,
   "paidOnly": false,
   "title": "Single Number III",
   "titleSlug": "single-number-iii",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.16038689338437",
   "difficulty": "Medium",
   "frontendQuestionId": 261,
   "isFavor": false,
   "paidOnly": true,
   "title": "Graph Valid Tree",
   "titleSlug": "graph-valid-tree",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.04776966991315",
   "difficulty": "Hard",
   "frontendQuestionId": 262,
   "isFavor": false,
   "paidOnly": false,
   "title": "Trips and Users",
   "titleSlug": "trips-and-users",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.23867050767646",
   "difficulty": "Easy",
   "frontendQuestionId": 263,
   "isFavor": false,
   "paidOnly": false,
   "title": "Ugly Number",
   "titleSlug": "ugly-number",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.185055242041344",
   "difficulty": "Medium",
   "frontendQuestionId": 264,
   "isFavor": false,
   "paidOnly": false,
   "title": "Ugly Number II",
   "titleSlug": "ugly-number-ii",
   "topicTags": "['Hash Table', 'Math', 'Dynamic Programming', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.17428294236176",
   "difficulty": "Hard",
   "frontendQuestionId": 265,
   "isFavor": false,
   "paidOnly": true,
   "title": "Paint House II",
   "titleSlug": "paint-house-ii",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.43759680740565",
   "difficulty": "Easy",
   "frontendQuestionId": 266,
   "isFavor": false,
   "paidOnly": true,
   "title": "Palindrome Permutation",
   "titleSlug": "palindrome-permutation",
   "topicTags": "['Hash Table', 'String', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.07398646126993",
   "difficulty": "Medium",
   "frontendQuestionId": 267,
   "isFavor": false,
   "paidOnly": true,
   "title": "Palindrome Permutation II",
   "titleSlug": "palindrome-permutation-ii",
   "topicTags": "['Hash Table', 'String', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.5899247391063",
   "difficulty": "Easy",
   "frontendQuestionId": 268,
   "isFavor": false,
   "paidOnly": false,
   "title": "Missing Number",
   "titleSlug": "missing-number",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Binary Search', 'Bit Manipulation', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "36.52223320490321",
   "difficulty": "Hard",
   "frontendQuestionId": 269,
   "isFavor": false,
   "paidOnly": true,
   "title": "Alien Dictionary",
   "titleSlug": "alien-dictionary",
   "topicTags": "['Array', 'String', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.01564987321158",
   "difficulty": "Easy",
   "frontendQuestionId": 270,
   "isFavor": false,
   "paidOnly": true,
   "title": "Closest Binary Search Tree Value",
   "titleSlug": "closest-binary-search-tree-value",
   "topicTags": "['Binary Search', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.199585328528414",
   "difficulty": "Medium",
   "frontendQuestionId": 271,
   "isFavor": false,
   "paidOnly": true,
   "title": "Encode and Decode Strings",
   "titleSlug": "encode-and-decode-strings",
   "topicTags": "['Array', 'String', 'Design']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.075555534724145",
   "difficulty": "Hard",
   "frontendQuestionId": 272,
   "isFavor": false,
   "paidOnly": true,
   "title": "Closest Binary Search Tree Value II",
   "titleSlug": "closest-binary-search-tree-value-ii",
   "topicTags": "['Two Pointers', 'Stack', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Heap (Priority Queue)', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.27135723277101",
   "difficulty": "Hard",
   "frontendQuestionId": 273,
   "isFavor": false,
   "paidOnly": false,
   "title": "Integer to English Words",
   "titleSlug": "integer-to-english-words",
   "topicTags": "['Math', 'String', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.0377540174332",
   "difficulty": "Medium",
   "frontendQuestionId": 274,
   "isFavor": false,
   "paidOnly": false,
   "title": "H-Index",
   "titleSlug": "h-index",
   "topicTags": "['Array', 'Sorting', 'Counting Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.721477037000305",
   "difficulty": "Medium",
   "frontendQuestionId": 275,
   "isFavor": false,
   "paidOnly": false,
   "title": "H-Index II",
   "titleSlug": "h-index-ii",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.5702325654078",
   "difficulty": "Medium",
   "frontendQuestionId": 276,
   "isFavor": false,
   "paidOnly": true,
   "title": "Paint Fence",
   "titleSlug": "paint-fence",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.290689444546786",
   "difficulty": "Medium",
   "frontendQuestionId": 277,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Celebrity",
   "titleSlug": "find-the-celebrity",
   "topicTags": "['Two Pointers', 'Graph', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "45.68210452193819",
   "difficulty": "Easy",
   "frontendQuestionId": 278,
   "isFavor": false,
   "paidOnly": false,
   "title": "First Bad Version",
   "titleSlug": "first-bad-version",
   "topicTags": "['Binary Search', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "55.51255922288981",
   "difficulty": "Medium",
   "frontendQuestionId": 279,
   "isFavor": false,
   "paidOnly": false,
   "title": "Perfect Squares",
   "titleSlug": "perfect-squares",
   "topicTags": "['Math', 'Dynamic Programming', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.15219695227272",
   "difficulty": "Medium",
   "frontendQuestionId": 280,
   "isFavor": false,
   "paidOnly": true,
   "title": "Wiggle Sort",
   "titleSlug": "wiggle-sort",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "65.38765067525425",
   "difficulty": "Medium",
   "frontendQuestionId": 281,
   "isFavor": false,
   "paidOnly": true,
   "title": "Zigzag Iterator",
   "titleSlug": "zigzag-iterator",
   "topicTags": "['Array', 'Design', 'Queue', 'Iterator']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.29862654444492",
   "difficulty": "Hard",
   "frontendQuestionId": 282,
   "isFavor": false,
   "paidOnly": false,
   "title": "Expression Add Operators",
   "titleSlug": "expression-add-operators",
   "topicTags": "['Math', 'String', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.6359904682904",
   "difficulty": "Easy",
   "frontendQuestionId": 283,
   "isFavor": false,
   "paidOnly": false,
   "title": "Move Zeroes",
   "titleSlug": "move-zeroes",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "60.48991740303611",
   "difficulty": "Medium",
   "frontendQuestionId": 284,
   "isFavor": false,
   "paidOnly": false,
   "title": "Peeking Iterator",
   "titleSlug": "peeking-iterator",
   "topicTags": "['Array', 'Design', 'Iterator']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.54622601615527",
   "difficulty": "Medium",
   "frontendQuestionId": 285,
   "isFavor": false,
   "paidOnly": true,
   "title": "Inorder Successor in BST",
   "titleSlug": "inorder-successor-in-bst",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.6936554854404",
   "difficulty": "Medium",
   "frontendQuestionId": 286,
   "isFavor": false,
   "paidOnly": true,
   "title": "Walls and Gates",
   "titleSlug": "walls-and-gates",
   "topicTags": "['Array', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.5021138926519",
   "difficulty": "Medium",
   "frontendQuestionId": 287,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Duplicate Number",
   "titleSlug": "find-the-duplicate-number",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.935724230572795",
   "difficulty": "Medium",
   "frontendQuestionId": 288,
   "isFavor": false,
   "paidOnly": true,
   "title": "Unique Word Abbreviation",
   "titleSlug": "unique-word-abbreviation",
   "topicTags": "['Array', 'Hash Table', 'String', 'Design']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.0935182248775",
   "difficulty": "Medium",
   "frontendQuestionId": 289,
   "isFavor": false,
   "paidOnly": false,
   "title": "Game of Life",
   "titleSlug": "game-of-life",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "42.900180730874524",
   "difficulty": "Easy",
   "frontendQuestionId": 290,
   "isFavor": false,
   "paidOnly": false,
   "title": "Word Pattern",
   "titleSlug": "word-pattern",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.577986888516335",
   "difficulty": "Medium",
   "frontendQuestionId": 291,
   "isFavor": false,
   "paidOnly": true,
   "title": "Word Pattern II",
   "titleSlug": "word-pattern-ii",
   "topicTags": "['Hash Table', 'String', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.91995690391413",
   "difficulty": "Easy",
   "frontendQuestionId": 292,
   "isFavor": false,
   "paidOnly": false,
   "title": "Nim Game",
   "titleSlug": "nim-game",
   "topicTags": "['Math', 'Brainteaser', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.85861639694114",
   "difficulty": "Easy",
   "frontendQuestionId": 293,
   "isFavor": false,
   "paidOnly": true,
   "title": "Flip Game",
   "titleSlug": "flip-game",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.21387927911289",
   "difficulty": "Medium",
   "frontendQuestionId": 294,
   "isFavor": false,
   "paidOnly": true,
   "title": "Flip Game II",
   "titleSlug": "flip-game-ii",
   "topicTags": "['Math', 'Dynamic Programming', 'Backtracking', 'Memoization', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.107500079157376",
   "difficulty": "Hard",
   "frontendQuestionId": 295,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Median from Data Stream",
   "titleSlug": "find-median-from-data-stream",
   "topicTags": "['Two Pointers', 'Design', 'Sorting', 'Heap (Priority Queue)', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.22718025590235",
   "difficulty": "Hard",
   "frontendQuestionId": 296,
   "isFavor": false,
   "paidOnly": true,
   "title": "Best Meeting Point",
   "titleSlug": "best-meeting-point",
   "topicTags": "['Array', 'Math', 'Sorting', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.532124062619516",
   "difficulty": "Hard",
   "frontendQuestionId": 297,
   "isFavor": false,
   "paidOnly": false,
   "title": "Serialize and Deserialize Binary Tree",
   "titleSlug": "serialize-and-deserialize-binary-tree",
   "topicTags": "['String', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.02912976652272",
   "difficulty": "Medium",
   "frontendQuestionId": 298,
   "isFavor": false,
   "paidOnly": true,
   "title": "Binary Tree Longest Consecutive Sequence",
   "titleSlug": "binary-tree-longest-consecutive-sequence",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.17797690409807",
   "difficulty": "Medium",
   "frontendQuestionId": 299,
   "isFavor": false,
   "paidOnly": false,
   "title": "Bulls and Cows",
   "titleSlug": "bulls-and-cows",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.37412610365313",
   "difficulty": "Medium",
   "frontendQuestionId": 300,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Increasing Subsequence",
   "titleSlug": "longest-increasing-subsequence",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.99606721861761",
   "difficulty": "Hard",
   "frontendQuestionId": 301,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Invalid Parentheses",
   "titleSlug": "remove-invalid-parentheses",
   "topicTags": "['String', 'Backtracking', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.485780177876215",
   "difficulty": "Hard",
   "frontendQuestionId": 302,
   "isFavor": false,
   "paidOnly": true,
   "title": "Smallest Rectangle Enclosing Black Pixels",
   "titleSlug": "smallest-rectangle-enclosing-black-pixels",
   "topicTags": "['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.69789807654175",
   "difficulty": "Easy",
   "frontendQuestionId": 303,
   "isFavor": false,
   "paidOnly": false,
   "title": "Range Sum Query - Immutable",
   "titleSlug": "range-sum-query-immutable",
   "topicTags": "['Array', 'Design', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "56.21715045907574",
   "difficulty": "Medium",
   "frontendQuestionId": 304,
   "isFavor": false,
   "paidOnly": false,
   "title": "Range Sum Query 2D - Immutable",
   "titleSlug": "range-sum-query-2d-immutable",
   "topicTags": "['Array', 'Design', 'Matrix', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "40.0245613772343",
   "difficulty": "Hard",
   "frontendQuestionId": 305,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Islands II",
   "titleSlug": "number-of-islands-ii",
   "topicTags": "['Array', 'Hash Table', 'Union Find']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.373543806656066",
   "difficulty": "Medium",
   "frontendQuestionId": 306,
   "isFavor": false,
   "paidOnly": false,
   "title": "Additive Number",
   "titleSlug": "additive-number",
   "topicTags": "['String', 'Backtracking']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.63221603431853",
   "difficulty": "Medium",
   "frontendQuestionId": 307,
   "isFavor": false,
   "paidOnly": false,
   "title": "Range Sum Query - Mutable",
   "titleSlug": "range-sum-query-mutable",
   "topicTags": "['Array', 'Design', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.75811840171055",
   "difficulty": "Medium",
   "frontendQuestionId": 308,
   "isFavor": false,
   "paidOnly": true,
   "title": "Range Sum Query 2D - Mutable",
   "titleSlug": "range-sum-query-2d-mutable",
   "topicTags": "['Array', 'Design', 'Binary Indexed Tree', 'Segment Tree', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "59.981675786937096",
   "difficulty": "Medium",
   "frontendQuestionId": 309,
   "isFavor": false,
   "paidOnly": false,
   "title": "Best Time to Buy and Sell Stock with Cooldown",
   "titleSlug": "best-time-to-buy-and-sell-stock-with-cooldown",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.92250688121956",
   "difficulty": "Medium",
   "frontendQuestionId": 310,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Height Trees",
   "titleSlug": "minimum-height-trees",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.63625715337506",
   "difficulty": "Medium",
   "frontendQuestionId": 311,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sparse Matrix Multiplication",
   "titleSlug": "sparse-matrix-multiplication",
   "topicTags": "['Array', 'Hash Table', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.833299761258765",
   "difficulty": "Hard",
   "frontendQuestionId": 312,
   "isFavor": false,
   "paidOnly": false,
   "title": "Burst Balloons",
   "titleSlug": "burst-balloons",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.40176736539252",
   "difficulty": "Medium",
   "frontendQuestionId": 313,
   "isFavor": false,
   "paidOnly": false,
   "title": "Super Ugly Number",
   "titleSlug": "super-ugly-number",
   "topicTags": "['Array', 'Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.80982692340844",
   "difficulty": "Medium",
   "frontendQuestionId": 314,
   "isFavor": false,
   "paidOnly": true,
   "title": "Binary Tree Vertical Order Traversal",
   "titleSlug": "binary-tree-vertical-order-traversal",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Sorting', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.73045536201494",
   "difficulty": "Hard",
   "frontendQuestionId": 315,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count of Smaller Numbers After Self",
   "titleSlug": "count-of-smaller-numbers-after-self",
   "topicTags": "['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.977576253398006",
   "difficulty": "Medium",
   "frontendQuestionId": 316,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Duplicate Letters",
   "titleSlug": "remove-duplicate-letters",
   "topicTags": "['String', 'Stack', 'Greedy', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.144788706268926",
   "difficulty": "Hard",
   "frontendQuestionId": 317,
   "isFavor": false,
   "paidOnly": true,
   "title": "Shortest Distance from All Buildings",
   "titleSlug": "shortest-distance-from-all-buildings",
   "topicTags": "['Array', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.43503928304861",
   "difficulty": "Medium",
   "frontendQuestionId": 318,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Product of Word Lengths",
   "titleSlug": "maximum-product-of-word-lengths",
   "topicTags": "['Array', 'String', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.82091645383957",
   "difficulty": "Medium",
   "frontendQuestionId": 319,
   "isFavor": false,
   "paidOnly": false,
   "title": "Bulb Switcher",
   "titleSlug": "bulb-switcher",
   "topicTags": "['Math', 'Brainteaser']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.96544339530809",
   "difficulty": "Medium",
   "frontendQuestionId": 320,
   "isFavor": false,
   "paidOnly": true,
   "title": "Generalized Abbreviation",
   "titleSlug": "generalized-abbreviation",
   "topicTags": "['String', 'Backtracking', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.998009341484686",
   "difficulty": "Hard",
   "frontendQuestionId": 321,
   "isFavor": false,
   "paidOnly": false,
   "title": "Create Maximum Number",
   "titleSlug": "create-maximum-number",
   "topicTags": "['Array', 'Two Pointers', 'Stack', 'Greedy', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.03576243829789",
   "difficulty": "Medium",
   "frontendQuestionId": 322,
   "isFavor": false,
   "paidOnly": false,
   "title": "Coin Change",
   "titleSlug": "coin-change",
   "topicTags": "['Array', 'Dynamic Programming', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "63.96052450829048",
   "difficulty": "Medium",
   "frontendQuestionId": 323,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Connected Components in an Undirected Graph",
   "titleSlug": "number-of-connected-components-in-an-undirected-graph",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "35.423376321831256",
   "difficulty": "Medium",
   "frontendQuestionId": 324,
   "isFavor": false,
   "paidOnly": false,
   "title": "Wiggle Sort II",
   "titleSlug": "wiggle-sort-ii",
   "topicTags": "['Array', 'Divide and Conquer', 'Greedy', 'Sorting', 'Quickselect']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.27830542916464",
   "difficulty": "Medium",
   "frontendQuestionId": 325,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Size Subarray Sum Equals k",
   "titleSlug": "maximum-size-subarray-sum-equals-k",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.73102538015498",
   "difficulty": "Easy",
   "frontendQuestionId": 326,
   "isFavor": false,
   "paidOnly": false,
   "title": "Power of Three",
   "titleSlug": "power-of-three",
   "topicTags": "['Math', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.75610790029254",
   "difficulty": "Hard",
   "frontendQuestionId": 327,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count of Range Sum",
   "titleSlug": "count-of-range-sum",
   "topicTags": "['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.87786272317343",
   "difficulty": "Medium",
   "frontendQuestionId": 328,
   "isFavor": false,
   "paidOnly": false,
   "title": "Odd Even Linked List",
   "titleSlug": "odd-even-linked-list",
   "topicTags": "['Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.036278141690666",
   "difficulty": "Hard",
   "frontendQuestionId": 329,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Increasing Path in a Matrix",
   "titleSlug": "longest-increasing-path-in-a-matrix",
   "topicTags": "['Array', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort', 'Memoization', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.39261482463002",
   "difficulty": "Hard",
   "frontendQuestionId": 330,
   "isFavor": false,
   "paidOnly": false,
   "title": "Patching Array",
   "titleSlug": "patching-array",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.96882363603408",
   "difficulty": "Medium",
   "frontendQuestionId": 331,
   "isFavor": false,
   "paidOnly": false,
   "title": "Verify Preorder Serialization of a Binary Tree",
   "titleSlug": "verify-preorder-serialization-of-a-binary-tree",
   "topicTags": "['String', 'Stack', 'Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.45414064562518",
   "difficulty": "Hard",
   "frontendQuestionId": 332,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reconstruct Itinerary",
   "titleSlug": "reconstruct-itinerary",
   "topicTags": "['Depth-First Search', 'Graph', 'Eulerian Circuit']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.20626782117352",
   "difficulty": "Medium",
   "frontendQuestionId": 333,
   "isFavor": false,
   "paidOnly": true,
   "title": "Largest BST Subtree",
   "titleSlug": "largest-bst-subtree",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.1440390434756",
   "difficulty": "Medium",
   "frontendQuestionId": 334,
   "isFavor": false,
   "paidOnly": false,
   "title": "Increasing Triplet Subsequence",
   "titleSlug": "increasing-triplet-subsequence",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.764972189884876",
   "difficulty": "Hard",
   "frontendQuestionId": 335,
   "isFavor": false,
   "paidOnly": false,
   "title": "Self Crossing",
   "titleSlug": "self-crossing",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.08990649373454",
   "difficulty": "Hard",
   "frontendQuestionId": 336,
   "isFavor": false,
   "paidOnly": false,
   "title": "Palindrome Pairs",
   "titleSlug": "palindrome-pairs",
   "topicTags": "['Array', 'Hash Table', 'String', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.77449626114394",
   "difficulty": "Medium",
   "frontendQuestionId": 337,
   "isFavor": false,
   "paidOnly": false,
   "title": "House Robber III",
   "titleSlug": "house-robber-iii",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.49642858419",
   "difficulty": "Easy",
   "frontendQuestionId": 338,
   "isFavor": false,
   "paidOnly": false,
   "title": "Counting Bits",
   "titleSlug": "counting-bits",
   "topicTags": "['Dynamic Programming', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.3247377366231",
   "difficulty": "Medium",
   "frontendQuestionId": 339,
   "isFavor": false,
   "paidOnly": true,
   "title": "Nested List Weight Sum",
   "titleSlug": "nested-list-weight-sum",
   "topicTags": "['Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "49.38406875880823",
   "difficulty": "Medium",
   "frontendQuestionId": 340,
   "isFavor": false,
   "paidOnly": true,
   "title": "Longest Substring with At Most K Distinct Characters",
   "titleSlug": "longest-substring-with-at-most-k-distinct-characters",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "65.23699688156745",
   "difficulty": "Medium",
   "frontendQuestionId": 341,
   "isFavor": false,
   "paidOnly": false,
   "title": "Flatten Nested List Iterator",
   "titleSlug": "flatten-nested-list-iterator",
   "topicTags": "['Stack', 'Tree', 'Depth-First Search', 'Design', 'Queue', 'Iterator']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.19951493754727",
   "difficulty": "Easy",
   "frontendQuestionId": 342,
   "isFavor": false,
   "paidOnly": false,
   "title": "Power of Four",
   "titleSlug": "power-of-four",
   "topicTags": "['Math', 'Bit Manipulation', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.989199757634815",
   "difficulty": "Medium",
   "frontendQuestionId": 343,
   "isFavor": false,
   "paidOnly": false,
   "title": "Integer Break",
   "titleSlug": "integer-break",
   "topicTags": "['Math', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.57238409120183",
   "difficulty": "Easy",
   "frontendQuestionId": 344,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse String",
   "titleSlug": "reverse-string",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "57.427146392895224",
   "difficulty": "Easy",
   "frontendQuestionId": 345,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Vowels of a String",
   "titleSlug": "reverse-vowels-of-a-string",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "79.74698908924164",
   "difficulty": "Easy",
   "frontendQuestionId": 346,
   "isFavor": false,
   "paidOnly": true,
   "title": "Moving Average from Data Stream",
   "titleSlug": "moving-average-from-data-stream",
   "topicTags": "['Array', 'Design', 'Queue', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "64.24105582807094",
   "difficulty": "Medium",
   "frontendQuestionId": 347,
   "isFavor": false,
   "paidOnly": false,
   "title": "Top K Frequent Elements",
   "titleSlug": "top-k-frequent-elements",
   "topicTags": "['Array', 'Hash Table', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Bucket Sort', 'Counting', 'Quickselect']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "58.49560781261116",
   "difficulty": "Medium",
   "frontendQuestionId": 348,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design Tic-Tac-Toe",
   "titleSlug": "design-tic-tac-toe",
   "topicTags": "['Array', 'Hash Table', 'Design', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.15756459509657",
   "difficulty": "Easy",
   "frontendQuestionId": 349,
   "isFavor": false,
   "paidOnly": false,
   "title": "Intersection of Two Arrays",
   "titleSlug": "intersection-of-two-arrays",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.93756112149418",
   "difficulty": "Easy",
   "frontendQuestionId": 350,
   "isFavor": false,
   "paidOnly": false,
   "title": "Intersection of Two Arrays II",
   "titleSlug": "intersection-of-two-arrays-ii",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.23735735175574",
   "difficulty": "Medium",
   "frontendQuestionId": 351,
   "isFavor": false,
   "paidOnly": true,
   "title": "Android Unlock Patterns",
   "titleSlug": "android-unlock-patterns",
   "topicTags": "['Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.34710073924352",
   "difficulty": "Hard",
   "frontendQuestionId": 352,
   "isFavor": false,
   "paidOnly": false,
   "title": "Data Stream as Disjoint Intervals",
   "titleSlug": "data-stream-as-disjoint-intervals",
   "topicTags": "['Binary Search', 'Design', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.06955281483346",
   "difficulty": "Medium",
   "frontendQuestionId": 353,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design Snake Game",
   "titleSlug": "design-snake-game",
   "topicTags": "['Array', 'Hash Table', 'Design', 'Queue', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.20578368374363",
   "difficulty": "Hard",
   "frontendQuestionId": 354,
   "isFavor": false,
   "paidOnly": false,
   "title": "Russian Doll Envelopes",
   "titleSlug": "russian-doll-envelopes",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.754525355810415",
   "difficulty": "Medium",
   "frontendQuestionId": 355,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Twitter",
   "titleSlug": "design-twitter",
   "topicTags": "['Hash Table', 'Linked List', 'Design', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.89878929832086",
   "difficulty": "Medium",
   "frontendQuestionId": 356,
   "isFavor": false,
   "paidOnly": true,
   "title": "Line Reflection",
   "titleSlug": "line-reflection",
   "topicTags": "['Array', 'Hash Table', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.071848978816895",
   "difficulty": "Medium",
   "frontendQuestionId": 357,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Numbers with Unique Digits",
   "titleSlug": "count-numbers-with-unique-digits",
   "topicTags": "['Math', 'Dynamic Programming', 'Backtracking']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.308741387620856",
   "difficulty": "Hard",
   "frontendQuestionId": 358,
   "isFavor": false,
   "paidOnly": true,
   "title": "Rearrange String k Distance Apart",
   "titleSlug": "rearrange-string-k-distance-apart",
   "topicTags": "['Hash Table', 'String', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.40069152962225",
   "difficulty": "Easy",
   "frontendQuestionId": 359,
   "isFavor": false,
   "paidOnly": true,
   "title": "Logger Rate Limiter",
   "titleSlug": "logger-rate-limiter",
   "topicTags": "['Hash Table', 'Design', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "56.87767921053266",
   "difficulty": "Medium",
   "frontendQuestionId": 360,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sort Transformed Array",
   "titleSlug": "sort-transformed-array",
   "topicTags": "['Array', 'Math', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.04007671535141",
   "difficulty": "Medium",
   "frontendQuestionId": 361,
   "isFavor": false,
   "paidOnly": true,
   "title": "Bomb Enemy",
   "titleSlug": "bomb-enemy",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.06353970009",
   "difficulty": "Medium",
   "frontendQuestionId": 362,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design Hit Counter",
   "titleSlug": "design-hit-counter",
   "topicTags": "['Array', 'Binary Search', 'Design', 'Queue', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.54356239555348",
   "difficulty": "Hard",
   "frontendQuestionId": 363,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Sum of Rectangle No Larger Than K",
   "titleSlug": "max-sum-of-rectangle-no-larger-than-k",
   "topicTags": "['Array', 'Binary Search', 'Matrix', 'Prefix Sum', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.22345401004677",
   "difficulty": "Medium",
   "frontendQuestionId": 364,
   "isFavor": false,
   "paidOnly": true,
   "title": "Nested List Weight Sum II",
   "titleSlug": "nested-list-weight-sum-ii",
   "topicTags": "['Stack', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.689623047660724",
   "difficulty": "Medium",
   "frontendQuestionId": 365,
   "isFavor": false,
   "paidOnly": false,
   "title": "Water and Jug Problem",
   "titleSlug": "water-and-jug-problem",
   "topicTags": "['Math', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.99992899492314",
   "difficulty": "Medium",
   "frontendQuestionId": 366,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Leaves of Binary Tree",
   "titleSlug": "find-leaves-of-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "44.08741754341279",
   "difficulty": "Easy",
   "frontendQuestionId": 367,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Perfect Square",
   "titleSlug": "valid-perfect-square",
   "topicTags": "['Math', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.69399156310569",
   "difficulty": "Medium",
   "frontendQuestionId": 368,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Divisible Subset",
   "titleSlug": "largest-divisible-subset",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.13677634924094",
   "difficulty": "Medium",
   "frontendQuestionId": 369,
   "isFavor": false,
   "paidOnly": true,
   "title": "Plus One Linked List",
   "titleSlug": "plus-one-linked-list",
   "topicTags": "['Linked List', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "72.18731320435626",
   "difficulty": "Medium",
   "frontendQuestionId": 370,
   "isFavor": false,
   "paidOnly": true,
   "title": "Range Addition",
   "titleSlug": "range-addition",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.348406076036845",
   "difficulty": "Medium",
   "frontendQuestionId": 371,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Two Integers",
   "titleSlug": "sum-of-two-integers",
   "topicTags": "['Math', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.32843769835098",
   "difficulty": "Medium",
   "frontendQuestionId": 372,
   "isFavor": false,
   "paidOnly": false,
   "title": "Super Pow",
   "titleSlug": "super-pow",
   "topicTags": "['Math', 'Divide and Conquer']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.511750031073",
   "difficulty": "Medium",
   "frontendQuestionId": 373,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find K Pairs with Smallest Sums",
   "titleSlug": "find-k-pairs-with-smallest-sums",
   "topicTags": "['Array', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.40466902977626",
   "difficulty": "Easy",
   "frontendQuestionId": 374,
   "isFavor": false,
   "paidOnly": false,
   "title": "Guess Number Higher or Lower",
   "titleSlug": "guess-number-higher-or-lower",
   "topicTags": "['Binary Search', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "50.82335275305193",
   "difficulty": "Medium",
   "frontendQuestionId": 375,
   "isFavor": false,
   "paidOnly": false,
   "title": "Guess Number Higher or Lower II",
   "titleSlug": "guess-number-higher-or-lower-ii",
   "topicTags": "['Math', 'Dynamic Programming', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.782081912200056",
   "difficulty": "Medium",
   "frontendQuestionId": 376,
   "isFavor": false,
   "paidOnly": false,
   "title": "Wiggle Subsequence",
   "titleSlug": "wiggle-subsequence",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.5740604281583",
   "difficulty": "Medium",
   "frontendQuestionId": 377,
   "isFavor": false,
   "paidOnly": false,
   "title": "Combination Sum IV",
   "titleSlug": "combination-sum-iv",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.345915377802",
   "difficulty": "Medium",
   "frontendQuestionId": 378,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Smallest Element in a Sorted Matrix",
   "titleSlug": "kth-smallest-element-in-a-sorted-matrix",
   "topicTags": "['Array', 'Binary Search', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.254821654628046",
   "difficulty": "Medium",
   "frontendQuestionId": 379,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design Phone Directory",
   "titleSlug": "design-phone-directory",
   "topicTags": "['Array', 'Hash Table', 'Linked List', 'Design', 'Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.966186162631644",
   "difficulty": "Medium",
   "frontendQuestionId": 380,
   "isFavor": false,
   "paidOnly": false,
   "title": "Insert Delete GetRandom O(1)",
   "titleSlug": "insert-delete-getrandom-o1",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Design', 'Randomized']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.843902697757066",
   "difficulty": "Hard",
   "frontendQuestionId": 381,
   "isFavor": false,
   "paidOnly": false,
   "title": "Insert Delete GetRandom O(1) - Duplicates allowed",
   "titleSlug": "insert-delete-getrandom-o1-duplicates-allowed",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Design', 'Randomized']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.833205144431574",
   "difficulty": "Medium",
   "frontendQuestionId": 382,
   "isFavor": false,
   "paidOnly": false,
   "title": "Linked List Random Node",
   "titleSlug": "linked-list-random-node",
   "topicTags": "['Linked List', 'Math', 'Reservoir Sampling', 'Randomized']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.13011488616434",
   "difficulty": "Easy",
   "frontendQuestionId": 383,
   "isFavor": false,
   "paidOnly": false,
   "title": "Ransom Note",
   "titleSlug": "ransom-note",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "58.89613873609125",
   "difficulty": "Medium",
   "frontendQuestionId": 384,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shuffle an Array",
   "titleSlug": "shuffle-an-array",
   "topicTags": "['Array', 'Math', 'Design', 'Randomized']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.794066865484226",
   "difficulty": "Medium",
   "frontendQuestionId": 385,
   "isFavor": false,
   "paidOnly": false,
   "title": "Mini Parser",
   "titleSlug": "mini-parser",
   "topicTags": "['String', 'Stack', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.03693495038588",
   "difficulty": "Medium",
   "frontendQuestionId": 386,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lexicographical Numbers",
   "titleSlug": "lexicographical-numbers",
   "topicTags": "['Depth-First Search', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.38082757812998",
   "difficulty": "Easy",
   "frontendQuestionId": 387,
   "isFavor": false,
   "paidOnly": false,
   "title": "First Unique Character in a String",
   "titleSlug": "first-unique-character-in-a-string",
   "topicTags": "['Hash Table', 'String', 'Queue', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "48.20986536255509",
   "difficulty": "Medium",
   "frontendQuestionId": 388,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Absolute File Path",
   "titleSlug": "longest-absolute-file-path",
   "topicTags": "['String', 'Stack', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.63395014793521",
   "difficulty": "Easy",
   "frontendQuestionId": 389,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Difference",
   "titleSlug": "find-the-difference",
   "topicTags": "['Hash Table', 'String', 'Bit Manipulation', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.66201480514502",
   "difficulty": "Medium",
   "frontendQuestionId": 390,
   "isFavor": false,
   "paidOnly": false,
   "title": "Elimination Game",
   "titleSlug": "elimination-game",
   "topicTags": "['Math', 'Recursion']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.90926155505593",
   "difficulty": "Hard",
   "frontendQuestionId": 391,
   "isFavor": false,
   "paidOnly": false,
   "title": "Perfect Rectangle",
   "titleSlug": "perfect-rectangle",
   "topicTags": "['Array', 'Line Sweep']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.27304767923818",
   "difficulty": "Easy",
   "frontendQuestionId": 392,
   "isFavor": false,
   "paidOnly": false,
   "title": "Is Subsequence",
   "titleSlug": "is-subsequence",
   "topicTags": "['Two Pointers', 'String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.451955118961166",
   "difficulty": "Medium",
   "frontendQuestionId": 393,
   "isFavor": false,
   "paidOnly": false,
   "title": "UTF-8 Validation",
   "titleSlug": "utf-8-validation",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.832596682354456",
   "difficulty": "Medium",
   "frontendQuestionId": 394,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decode String",
   "titleSlug": "decode-string",
   "topicTags": "['String', 'Stack', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.3459167230001",
   "difficulty": "Medium",
   "frontendQuestionId": 395,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Substring with At Least K Repeating Characters",
   "titleSlug": "longest-substring-with-at-least-k-repeating-characters",
   "topicTags": "['Hash Table', 'String', 'Divide and Conquer', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.72939386254121",
   "difficulty": "Medium",
   "frontendQuestionId": 396,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rotate Function",
   "titleSlug": "rotate-function",
   "topicTags": "['Array', 'Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.373181975672395",
   "difficulty": "Medium",
   "frontendQuestionId": 397,
   "isFavor": false,
   "paidOnly": false,
   "title": "Integer Replacement",
   "titleSlug": "integer-replacement",
   "topicTags": "['Dynamic Programming', 'Greedy', 'Bit Manipulation', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.37451857140172",
   "difficulty": "Medium",
   "frontendQuestionId": 398,
   "isFavor": false,
   "paidOnly": false,
   "title": "Random Pick Index",
   "titleSlug": "random-pick-index",
   "topicTags": "['Hash Table', 'Math', 'Reservoir Sampling', 'Randomized']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.88035525599997",
   "difficulty": "Medium",
   "frontendQuestionId": 399,
   "isFavor": false,
   "paidOnly": false,
   "title": "Evaluate Division",
   "titleSlug": "evaluate-division",
   "topicTags": "['Array', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.44544113831126",
   "difficulty": "Medium",
   "frontendQuestionId": 400,
   "isFavor": false,
   "paidOnly": false,
   "title": "Nth Digit",
   "titleSlug": "nth-digit",
   "topicTags": "['Math', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.15610537250693",
   "difficulty": "Easy",
   "frontendQuestionId": 401,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Watch",
   "titleSlug": "binary-watch",
   "topicTags": "['Backtracking', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.58090284072015",
   "difficulty": "Medium",
   "frontendQuestionId": 402,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove K Digits",
   "titleSlug": "remove-k-digits",
   "topicTags": "['String', 'Stack', 'Greedy', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.43818977050692",
   "difficulty": "Hard",
   "frontendQuestionId": 403,
   "isFavor": false,
   "paidOnly": false,
   "title": "Frog Jump",
   "titleSlug": "frog-jump",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.438085478798435",
   "difficulty": "Easy",
   "frontendQuestionId": 404,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Left Leaves",
   "titleSlug": "sum-of-left-leaves",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.48548513439257",
   "difficulty": "Easy",
   "frontendQuestionId": 405,
   "isFavor": false,
   "paidOnly": false,
   "title": "Convert a Number to Hexadecimal",
   "titleSlug": "convert-a-number-to-hexadecimal",
   "topicTags": "['Math', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.04884949553829",
   "difficulty": "Medium",
   "frontendQuestionId": 406,
   "isFavor": false,
   "paidOnly": false,
   "title": "Queue Reconstruction by Height",
   "titleSlug": "queue-reconstruction-by-height",
   "topicTags": "['Array', 'Binary Indexed Tree', 'Segment Tree', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.73706986669145",
   "difficulty": "Hard",
   "frontendQuestionId": 407,
   "isFavor": false,
   "paidOnly": false,
   "title": "Trapping Rain Water II",
   "titleSlug": "trapping-rain-water-ii",
   "topicTags": "['Array', 'Breadth-First Search', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.71026446176076",
   "difficulty": "Easy",
   "frontendQuestionId": 408,
   "isFavor": false,
   "paidOnly": true,
   "title": "Valid Word Abbreviation",
   "titleSlug": "valid-word-abbreviation",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.4812765912912",
   "difficulty": "Easy",
   "frontendQuestionId": 409,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Palindrome",
   "titleSlug": "longest-palindrome",
   "topicTags": "['Hash Table', 'String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.60607620813847",
   "difficulty": "Hard",
   "frontendQuestionId": 410,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split Array Largest Sum",
   "titleSlug": "split-array-largest-sum",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Greedy', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.1079373436883",
   "difficulty": "Hard",
   "frontendQuestionId": 411,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Unique Word Abbreviation",
   "titleSlug": "minimum-unique-word-abbreviation",
   "topicTags": "['Array', 'String', 'Backtracking', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.07704614543016",
   "difficulty": "Easy",
   "frontendQuestionId": 412,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fizz Buzz",
   "titleSlug": "fizz-buzz",
   "topicTags": "['Math', 'String', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "64.84263935469176",
   "difficulty": "Medium",
   "frontendQuestionId": 413,
   "isFavor": false,
   "paidOnly": false,
   "title": "Arithmetic Slices",
   "titleSlug": "arithmetic-slices",
   "topicTags": "['Array', 'Dynamic Programming', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.825028464754446",
   "difficulty": "Easy",
   "frontendQuestionId": 414,
   "isFavor": false,
   "paidOnly": false,
   "title": "Third Maximum Number",
   "titleSlug": "third-maximum-number",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.784927712140636",
   "difficulty": "Easy",
   "frontendQuestionId": 415,
   "isFavor": false,
   "paidOnly": false,
   "title": "Add Strings",
   "titleSlug": "add-strings",
   "topicTags": "['Math', 'String', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.180795091191804",
   "difficulty": "Medium",
   "frontendQuestionId": 416,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition Equal Subset Sum",
   "titleSlug": "partition-equal-subset-sum",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "57.1052919476019",
   "difficulty": "Medium",
   "frontendQuestionId": 417,
   "isFavor": false,
   "paidOnly": false,
   "title": "Pacific Atlantic Water Flow",
   "titleSlug": "pacific-atlantic-water-flow",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.316944855784406",
   "difficulty": "Medium",
   "frontendQuestionId": 418,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sentence Screen Fitting",
   "titleSlug": "sentence-screen-fitting",
   "topicTags": "['Array', 'String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.33467894134131",
   "difficulty": "Medium",
   "frontendQuestionId": 419,
   "isFavor": false,
   "paidOnly": false,
   "title": "Battleships in a Board",
   "titleSlug": "battleships-in-a-board",
   "topicTags": "['Array', 'Depth-First Search', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "14.457352343147786",
   "difficulty": "Hard",
   "frontendQuestionId": 420,
   "isFavor": false,
   "paidOnly": false,
   "title": "Strong Password Checker",
   "titleSlug": "strong-password-checker",
   "topicTags": "['String', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.19033094837662",
   "difficulty": "Medium",
   "frontendQuestionId": 421,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum XOR of Two Numbers in an Array",
   "titleSlug": "maximum-xor-of-two-numbers-in-an-array",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.90232874206111",
   "difficulty": "Easy",
   "frontendQuestionId": 422,
   "isFavor": false,
   "paidOnly": true,
   "title": "Valid Word Square",
   "titleSlug": "valid-word-square",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.50729240178782",
   "difficulty": "Medium",
   "frontendQuestionId": 423,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reconstruct Original Digits from English",
   "titleSlug": "reconstruct-original-digits-from-english",
   "topicTags": "['Hash Table', 'Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.676129737902414",
   "difficulty": "Medium",
   "frontendQuestionId": 424,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Repeating Character Replacement",
   "titleSlug": "longest-repeating-character-replacement",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.843555935404275",
   "difficulty": "Hard",
   "frontendQuestionId": 425,
   "isFavor": false,
   "paidOnly": true,
   "title": "Word Squares",
   "titleSlug": "word-squares",
   "topicTags": "['Array', 'String', 'Backtracking', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.40306379648926",
   "difficulty": "Medium",
   "frontendQuestionId": 426,
   "isFavor": false,
   "paidOnly": true,
   "title": "Convert Binary Search Tree to Sorted Doubly Linked List",
   "titleSlug": "convert-binary-search-tree-to-sorted-doubly-linked-list",
   "topicTags": "['Linked List', 'Stack', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree', 'Doubly-Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.7786004391846",
   "difficulty": "Medium",
   "frontendQuestionId": 427,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct Quad Tree",
   "titleSlug": "construct-quad-tree",
   "topicTags": "['Array', 'Divide and Conquer', 'Tree', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.13071989623117",
   "difficulty": "Hard",
   "frontendQuestionId": 428,
   "isFavor": false,
   "paidOnly": true,
   "title": "Serialize and Deserialize N-ary Tree",
   "titleSlug": "serialize-and-deserialize-n-ary-tree",
   "topicTags": "['String', 'Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.18816930137685",
   "difficulty": "Medium",
   "frontendQuestionId": 429,
   "isFavor": false,
   "paidOnly": false,
   "title": "N-ary Tree Level Order Traversal",
   "titleSlug": "n-ary-tree-level-order-traversal",
   "topicTags": "['Tree', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.063639545666426",
   "difficulty": "Medium",
   "frontendQuestionId": 430,
   "isFavor": false,
   "paidOnly": false,
   "title": "Flatten a Multilevel Doubly Linked List",
   "titleSlug": "flatten-a-multilevel-doubly-linked-list",
   "topicTags": "['Linked List', 'Depth-First Search', 'Doubly-Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.05614131178967",
   "difficulty": "Hard",
   "frontendQuestionId": 431,
   "isFavor": false,
   "paidOnly": true,
   "title": "Encode N-ary Tree to Binary Tree",
   "titleSlug": "encode-n-ary-tree-to-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Design', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.759211891480994",
   "difficulty": "Hard",
   "frontendQuestionId": 432,
   "isFavor": false,
   "paidOnly": false,
   "title": "All O`one Data Structure",
   "titleSlug": "all-oone-data-structure",
   "topicTags": "['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.182120446988826",
   "difficulty": "Medium",
   "frontendQuestionId": 433,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Genetic Mutation",
   "titleSlug": "minimum-genetic-mutation",
   "topicTags": "['Hash Table', 'String', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.30344038130701",
   "difficulty": "Easy",
   "frontendQuestionId": 434,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Segments in a String",
   "titleSlug": "number-of-segments-in-a-string",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.1263280893878",
   "difficulty": "Medium",
   "frontendQuestionId": 435,
   "isFavor": false,
   "paidOnly": false,
   "title": "Non-overlapping Intervals",
   "titleSlug": "non-overlapping-intervals",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.50845844660116",
   "difficulty": "Medium",
   "frontendQuestionId": 436,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Right Interval",
   "titleSlug": "find-right-interval",
   "topicTags": "['Array', 'Binary Search', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.042966721986",
   "difficulty": "Medium",
   "frontendQuestionId": 437,
   "isFavor": false,
   "paidOnly": false,
   "title": "Path Sum III",
   "titleSlug": "path-sum-iii",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.94765991457042",
   "difficulty": "Medium",
   "frontendQuestionId": 438,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All Anagrams in a String",
   "titleSlug": "find-all-anagrams-in-a-string",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.86973889488934",
   "difficulty": "Medium",
   "frontendQuestionId": 439,
   "isFavor": false,
   "paidOnly": true,
   "title": "Ternary Expression Parser",
   "titleSlug": "ternary-expression-parser",
   "topicTags": "['String', 'Stack', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.96620544320625",
   "difficulty": "Hard",
   "frontendQuestionId": 440,
   "isFavor": false,
   "paidOnly": false,
   "title": "K-th Smallest in Lexicographical Order",
   "titleSlug": "k-th-smallest-in-lexicographical-order",
   "topicTags": "['Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.20566711338222",
   "difficulty": "Easy",
   "frontendQuestionId": 441,
   "isFavor": false,
   "paidOnly": false,
   "title": "Arranging Coins",
   "titleSlug": "arranging-coins",
   "topicTags": "['Math', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.29603682089213",
   "difficulty": "Medium",
   "frontendQuestionId": 442,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All Duplicates in an Array",
   "titleSlug": "find-all-duplicates-in-an-array",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.573897816579255",
   "difficulty": "Medium",
   "frontendQuestionId": 443,
   "isFavor": false,
   "paidOnly": false,
   "title": "String Compression",
   "titleSlug": "string-compression",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.254837948395217",
   "difficulty": "Medium",
   "frontendQuestionId": 444,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sequence Reconstruction",
   "titleSlug": "sequence-reconstruction",
   "topicTags": "['Array', 'Graph', 'Topological Sort']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.602712125059625",
   "difficulty": "Medium",
   "frontendQuestionId": 445,
   "isFavor": false,
   "paidOnly": false,
   "title": "Add Two Numbers II",
   "titleSlug": "add-two-numbers-ii",
   "topicTags": "['Linked List', 'Math', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.52685031668181",
   "difficulty": "Hard",
   "frontendQuestionId": 446,
   "isFavor": false,
   "paidOnly": false,
   "title": "Arithmetic Slices II - Subsequence",
   "titleSlug": "arithmetic-slices-ii-subsequence",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.237187879799485",
   "difficulty": "Medium",
   "frontendQuestionId": 447,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Boomerangs",
   "titleSlug": "number-of-boomerangs",
   "topicTags": "['Array', 'Hash Table', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.13719720329636",
   "difficulty": "Easy",
   "frontendQuestionId": 448,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All Numbers Disappeared in an Array",
   "titleSlug": "find-all-numbers-disappeared-in-an-array",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.417546657271856",
   "difficulty": "Medium",
   "frontendQuestionId": 449,
   "isFavor": false,
   "paidOnly": false,
   "title": "Serialize and Deserialize BST",
   "titleSlug": "serialize-and-deserialize-bst",
   "topicTags": "['String', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.69833768504626",
   "difficulty": "Medium",
   "frontendQuestionId": 450,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Node in a BST",
   "titleSlug": "delete-node-in-a-bst",
   "topicTags": "['Tree', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.7827231674193",
   "difficulty": "Medium",
   "frontendQuestionId": 451,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort Characters By Frequency",
   "titleSlug": "sort-characters-by-frequency",
   "topicTags": "['Hash Table', 'String', 'Sorting', 'Heap (Priority Queue)', 'Bucket Sort', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.14997476252136",
   "difficulty": "Medium",
   "frontendQuestionId": 452,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Arrows to Burst Balloons",
   "titleSlug": "minimum-number-of-arrows-to-burst-balloons",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.59439695005809",
   "difficulty": "Medium",
   "frontendQuestionId": 453,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Moves to Equal Array Elements",
   "titleSlug": "minimum-moves-to-equal-array-elements",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.51089443383116",
   "difficulty": "Medium",
   "frontendQuestionId": 454,
   "isFavor": false,
   "paidOnly": false,
   "title": "4Sum II",
   "titleSlug": "4sum-ii",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.57974178857312",
   "difficulty": "Easy",
   "frontendQuestionId": 455,
   "isFavor": false,
   "paidOnly": false,
   "title": "Assign Cookies",
   "titleSlug": "assign-cookies",
   "topicTags": "['Array', 'Two Pointers', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.94388241029804",
   "difficulty": "Medium",
   "frontendQuestionId": 456,
   "isFavor": false,
   "paidOnly": false,
   "title": "132 Pattern",
   "titleSlug": "132-pattern",
   "topicTags": "['Array', 'Binary Search', 'Stack', 'Monotonic Stack', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "35.31794248683678",
   "difficulty": "Medium",
   "frontendQuestionId": 457,
   "isFavor": false,
   "paidOnly": false,
   "title": "Circular Array Loop",
   "titleSlug": "circular-array-loop",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.2706816299723",
   "difficulty": "Hard",
   "frontendQuestionId": 458,
   "isFavor": false,
   "paidOnly": false,
   "title": "Poor Pigs",
   "titleSlug": "poor-pigs",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.691755027620715",
   "difficulty": "Easy",
   "frontendQuestionId": 459,
   "isFavor": false,
   "paidOnly": false,
   "title": "Repeated Substring Pattern",
   "titleSlug": "repeated-substring-pattern",
   "topicTags": "['String', 'String Matching']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.064146296276114",
   "difficulty": "Hard",
   "frontendQuestionId": 460,
   "isFavor": false,
   "paidOnly": false,
   "title": "LFU Cache",
   "titleSlug": "lfu-cache",
   "topicTags": "['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.92720399951224",
   "difficulty": "Easy",
   "frontendQuestionId": 461,
   "isFavor": false,
   "paidOnly": false,
   "title": "Hamming Distance",
   "titleSlug": "hamming-distance",
   "topicTags": "['Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.82884964912915",
   "difficulty": "Medium",
   "frontendQuestionId": 462,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Moves to Equal Array Elements II",
   "titleSlug": "minimum-moves-to-equal-array-elements-ii",
   "topicTags": "['Array', 'Math', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.37220382516922",
   "difficulty": "Easy",
   "frontendQuestionId": 463,
   "isFavor": false,
   "paidOnly": false,
   "title": "Island Perimeter",
   "titleSlug": "island-perimeter",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.216130673465315",
   "difficulty": "Medium",
   "frontendQuestionId": 464,
   "isFavor": false,
   "paidOnly": false,
   "title": "Can I Win",
   "titleSlug": "can-i-win",
   "topicTags": "['Math', 'Dynamic Programming', 'Bit Manipulation', 'Memoization', 'Game Theory', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.761791329204385",
   "difficulty": "Hard",
   "frontendQuestionId": 465,
   "isFavor": false,
   "paidOnly": true,
   "title": "Optimal Account Balancing",
   "titleSlug": "optimal-account-balancing",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.48279481433151",
   "difficulty": "Hard",
   "frontendQuestionId": 466,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count The Repetitions",
   "titleSlug": "count-the-repetitions",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.920836463604914",
   "difficulty": "Medium",
   "frontendQuestionId": 467,
   "isFavor": false,
   "paidOnly": false,
   "title": "Unique Substrings in Wraparound String",
   "titleSlug": "unique-substrings-in-wraparound-string",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.72043448043533",
   "difficulty": "Medium",
   "frontendQuestionId": 468,
   "isFavor": false,
   "paidOnly": false,
   "title": "Validate IP Address",
   "titleSlug": "validate-ip-address",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.80226892848252",
   "difficulty": "Medium",
   "frontendQuestionId": 469,
   "isFavor": false,
   "paidOnly": true,
   "title": "Convex Polygon",
   "titleSlug": "convex-polygon",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.830859029879925",
   "difficulty": "Medium",
   "frontendQuestionId": 470,
   "isFavor": false,
   "paidOnly": false,
   "title": "Implement Rand10() Using Rand7()",
   "titleSlug": "implement-rand10-using-rand7",
   "topicTags": "['Math', 'Rejection Sampling', 'Randomized', 'Probability and Statistics']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.46895291231783",
   "difficulty": "Hard",
   "frontendQuestionId": 471,
   "isFavor": false,
   "paidOnly": true,
   "title": "Encode String with Shortest Length",
   "titleSlug": "encode-string-with-shortest-length",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.37657423092629",
   "difficulty": "Hard",
   "frontendQuestionId": 472,
   "isFavor": false,
   "paidOnly": false,
   "title": "Concatenated Words",
   "titleSlug": "concatenated-words",
   "topicTags": "['Array', 'String', 'Dynamic Programming', 'Depth-First Search', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.76708409755071",
   "difficulty": "Medium",
   "frontendQuestionId": 473,
   "isFavor": false,
   "paidOnly": false,
   "title": "Matchsticks to Square",
   "titleSlug": "matchsticks-to-square",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.572464236088685",
   "difficulty": "Medium",
   "frontendQuestionId": 474,
   "isFavor": false,
   "paidOnly": false,
   "title": "Ones and Zeroes",
   "titleSlug": "ones-and-zeroes",
   "topicTags": "['Array', 'String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.5729121125577",
   "difficulty": "Medium",
   "frontendQuestionId": 475,
   "isFavor": false,
   "paidOnly": false,
   "title": "Heaters",
   "titleSlug": "heaters",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.29482495033501",
   "difficulty": "Easy",
   "frontendQuestionId": 476,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number Complement",
   "titleSlug": "number-complement",
   "topicTags": "['Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.56887191366945",
   "difficulty": "Medium",
   "frontendQuestionId": 477,
   "isFavor": false,
   "paidOnly": false,
   "title": "Total Hamming Distance",
   "titleSlug": "total-hamming-distance",
   "topicTags": "['Array', 'Math', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.705569154353306",
   "difficulty": "Medium",
   "frontendQuestionId": 478,
   "isFavor": false,
   "paidOnly": false,
   "title": "Generate Random Point in a Circle",
   "titleSlug": "generate-random-point-in-a-circle",
   "topicTags": "['Math', 'Geometry', 'Rejection Sampling', 'Randomized']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.74241926102021",
   "difficulty": "Hard",
   "frontendQuestionId": 479,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Palindrome Product",
   "titleSlug": "largest-palindrome-product",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.56573409475909",
   "difficulty": "Hard",
   "frontendQuestionId": 480,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sliding Window Median",
   "titleSlug": "sliding-window-median",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.18123072765022",
   "difficulty": "Medium",
   "frontendQuestionId": 481,
   "isFavor": false,
   "paidOnly": false,
   "title": "Magical String",
   "titleSlug": "magical-string",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.53602852189841",
   "difficulty": "Easy",
   "frontendQuestionId": 482,
   "isFavor": false,
   "paidOnly": false,
   "title": "License Key Formatting",
   "titleSlug": "license-key-formatting",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.91589280976386",
   "difficulty": "Hard",
   "frontendQuestionId": 483,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Good Base",
   "titleSlug": "smallest-good-base",
   "topicTags": "['Math', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.91754880062155",
   "difficulty": "Medium",
   "frontendQuestionId": 484,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Permutation",
   "titleSlug": "find-permutation",
   "topicTags": "['Array', 'String', 'Stack', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.99948642656782",
   "difficulty": "Easy",
   "frontendQuestionId": 485,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Consecutive Ones",
   "titleSlug": "max-consecutive-ones",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.59290527124694",
   "difficulty": "Medium",
   "frontendQuestionId": 486,
   "isFavor": false,
   "paidOnly": false,
   "title": "Predict the Winner",
   "titleSlug": "predict-the-winner",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Recursion', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "51.404036433336074",
   "difficulty": "Medium",
   "frontendQuestionId": 487,
   "isFavor": false,
   "paidOnly": true,
   "title": "Max Consecutive Ones II",
   "titleSlug": "max-consecutive-ones-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.76209943939876",
   "difficulty": "Hard",
   "frontendQuestionId": 488,
   "isFavor": false,
   "paidOnly": false,
   "title": "Zuma Game",
   "titleSlug": "zuma-game",
   "topicTags": "['String', 'Dynamic Programming', 'Stack', 'Breadth-First Search', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.30452238750141",
   "difficulty": "Hard",
   "frontendQuestionId": 489,
   "isFavor": false,
   "paidOnly": true,
   "title": "Robot Room Cleaner",
   "titleSlug": "robot-room-cleaner",
   "topicTags": "['Backtracking', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.2120133620555",
   "difficulty": "Medium",
   "frontendQuestionId": 490,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Maze",
   "titleSlug": "the-maze",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.47382520223281",
   "difficulty": "Medium",
   "frontendQuestionId": 491,
   "isFavor": false,
   "paidOnly": false,
   "title": "Non-decreasing Subsequences",
   "titleSlug": "non-decreasing-subsequences",
   "topicTags": "['Array', 'Hash Table', 'Backtracking', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.17399730914157",
   "difficulty": "Easy",
   "frontendQuestionId": 492,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct the Rectangle",
   "titleSlug": "construct-the-rectangle",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.820555200542728",
   "difficulty": "Hard",
   "frontendQuestionId": 493,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Pairs",
   "titleSlug": "reverse-pairs",
   "topicTags": "['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.44206525436068",
   "difficulty": "Medium",
   "frontendQuestionId": 494,
   "isFavor": false,
   "paidOnly": false,
   "title": "Target Sum",
   "titleSlug": "target-sum",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.870435829096024",
   "difficulty": "Easy",
   "frontendQuestionId": 495,
   "isFavor": false,
   "paidOnly": false,
   "title": "Teemo Attacking",
   "titleSlug": "teemo-attacking",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.10825592000054",
   "difficulty": "Easy",
   "frontendQuestionId": 496,
   "isFavor": false,
   "paidOnly": false,
   "title": "Next Greater Element I",
   "titleSlug": "next-greater-element-i",
   "topicTags": "['Array', 'Hash Table', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.46071437995303",
   "difficulty": "Medium",
   "frontendQuestionId": 497,
   "isFavor": false,
   "paidOnly": false,
   "title": "Random Point in Non-overlapping Rectangles",
   "titleSlug": "random-point-in-non-overlapping-rectangles",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Reservoir Sampling', 'Prefix Sum', 'Ordered Set', 'Randomized']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.70755743712121",
   "difficulty": "Medium",
   "frontendQuestionId": 498,
   "isFavor": false,
   "paidOnly": false,
   "title": "Diagonal Traverse",
   "titleSlug": "diagonal-traverse",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.37443337643699",
   "difficulty": "Hard",
   "frontendQuestionId": 499,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Maze III",
   "titleSlug": "the-maze-iii",
   "topicTags": "['Array', 'String', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.21104492744439",
   "difficulty": "Easy",
   "frontendQuestionId": 500,
   "isFavor": false,
   "paidOnly": false,
   "title": "Keyboard Row",
   "titleSlug": "keyboard-row",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.27932162680492",
   "difficulty": "Easy",
   "frontendQuestionId": 501,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Mode in Binary Search Tree",
   "titleSlug": "find-mode-in-binary-search-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.001727988196755",
   "difficulty": "Hard",
   "frontendQuestionId": 502,
   "isFavor": false,
   "paidOnly": false,
   "title": "IPO",
   "titleSlug": "ipo",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.77135702078594",
   "difficulty": "Medium",
   "frontendQuestionId": 503,
   "isFavor": false,
   "paidOnly": false,
   "title": "Next Greater Element II",
   "titleSlug": "next-greater-element-ii",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.640720562220885",
   "difficulty": "Easy",
   "frontendQuestionId": 504,
   "isFavor": false,
   "paidOnly": false,
   "title": "Base 7",
   "titleSlug": "base-7",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.03709740151501",
   "difficulty": "Medium",
   "frontendQuestionId": 505,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Maze II",
   "titleSlug": "the-maze-ii",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.03056429342746",
   "difficulty": "Easy",
   "frontendQuestionId": 506,
   "isFavor": false,
   "paidOnly": false,
   "title": "Relative Ranks",
   "titleSlug": "relative-ranks",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.26236203428594",
   "difficulty": "Easy",
   "frontendQuestionId": 507,
   "isFavor": false,
   "paidOnly": false,
   "title": "Perfect Number",
   "titleSlug": "perfect-number",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.6024187713193",
   "difficulty": "Medium",
   "frontendQuestionId": 508,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Frequent Subtree Sum",
   "titleSlug": "most-frequent-subtree-sum",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.67757375418867",
   "difficulty": "Easy",
   "frontendQuestionId": 509,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fibonacci Number",
   "titleSlug": "fibonacci-number",
   "topicTags": "['Math', 'Dynamic Programming', 'Recursion', 'Memoization']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.9408886652671",
   "difficulty": "Medium",
   "frontendQuestionId": 510,
   "isFavor": false,
   "paidOnly": true,
   "title": "Inorder Successor in BST II",
   "titleSlug": "inorder-successor-in-bst-ii",
   "topicTags": "['Tree', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.54848657257493",
   "difficulty": "Easy",
   "frontendQuestionId": 511,
   "isFavor": false,
   "paidOnly": false,
   "title": "Game Play Analysis I",
   "titleSlug": "game-play-analysis-i",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.79129317807377",
   "difficulty": "Easy",
   "frontendQuestionId": 512,
   "isFavor": false,
   "paidOnly": true,
   "title": "Game Play Analysis II",
   "titleSlug": "game-play-analysis-ii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.6437940489049",
   "difficulty": "Medium",
   "frontendQuestionId": 513,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Bottom Left Tree Value",
   "titleSlug": "find-bottom-left-tree-value",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.8318128941407",
   "difficulty": "Hard",
   "frontendQuestionId": 514,
   "isFavor": false,
   "paidOnly": false,
   "title": "Freedom Trail",
   "titleSlug": "freedom-trail",
   "topicTags": "['String', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.27736123122392",
   "difficulty": "Medium",
   "frontendQuestionId": 515,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Largest Value in Each Tree Row",
   "titleSlug": "find-largest-value-in-each-tree-row",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.78187561949083",
   "difficulty": "Medium",
   "frontendQuestionId": 516,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Palindromic Subsequence",
   "titleSlug": "longest-palindromic-subsequence",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.20643071476101",
   "difficulty": "Hard",
   "frontendQuestionId": 517,
   "isFavor": false,
   "paidOnly": false,
   "title": "Super Washing Machines",
   "titleSlug": "super-washing-machines",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.90845696237639",
   "difficulty": "Medium",
   "frontendQuestionId": 518,
   "isFavor": false,
   "paidOnly": false,
   "title": "Coin Change II",
   "titleSlug": "coin-change-ii",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.26161790017212",
   "difficulty": "Medium",
   "frontendQuestionId": 519,
   "isFavor": false,
   "paidOnly": false,
   "title": "Random Flip Matrix",
   "titleSlug": "random-flip-matrix",
   "topicTags": "['Hash Table', 'Math', 'Reservoir Sampling', 'Randomized']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.131575456559226",
   "difficulty": "Easy",
   "frontendQuestionId": 520,
   "isFavor": false,
   "paidOnly": false,
   "title": "Detect Capital",
   "titleSlug": "detect-capital",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.20318548520183",
   "difficulty": "Easy",
   "frontendQuestionId": 521,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Uncommon Subsequence I",
   "titleSlug": "longest-uncommon-subsequence-i",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.758941755835686",
   "difficulty": "Medium",
   "frontendQuestionId": 522,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Uncommon Subsequence II",
   "titleSlug": "longest-uncommon-subsequence-ii",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'String', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.778890984506212",
   "difficulty": "Medium",
   "frontendQuestionId": 523,
   "isFavor": false,
   "paidOnly": false,
   "title": "Continuous Subarray Sum",
   "titleSlug": "continuous-subarray-sum",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.64496145203541",
   "difficulty": "Medium",
   "frontendQuestionId": 524,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Word in Dictionary through Deleting",
   "titleSlug": "longest-word-in-dictionary-through-deleting",
   "topicTags": "['Array', 'Two Pointers', 'String', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.02217246929617",
   "difficulty": "Medium",
   "frontendQuestionId": 525,
   "isFavor": false,
   "paidOnly": false,
   "title": "Contiguous Array",
   "titleSlug": "contiguous-array",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.46666711052818",
   "difficulty": "Medium",
   "frontendQuestionId": 526,
   "isFavor": false,
   "paidOnly": false,
   "title": "Beautiful Arrangement",
   "titleSlug": "beautiful-arrangement",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.728806498646115",
   "difficulty": "Hard",
   "frontendQuestionId": 527,
   "isFavor": false,
   "paidOnly": true,
   "title": "Word Abbreviation",
   "titleSlug": "word-abbreviation",
   "topicTags": "['Array', 'String', 'Greedy', 'Trie', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.32145299263438",
   "difficulty": "Medium",
   "frontendQuestionId": 528,
   "isFavor": false,
   "paidOnly": false,
   "title": "Random Pick with Weight",
   "titleSlug": "random-pick-with-weight",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Prefix Sum', 'Randomized']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.868367190966",
   "difficulty": "Medium",
   "frontendQuestionId": 529,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minesweeper",
   "titleSlug": "minesweeper",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.71897405182589",
   "difficulty": "Easy",
   "frontendQuestionId": 530,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Absolute Difference in BST",
   "titleSlug": "minimum-absolute-difference-in-bst",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.48634476731484",
   "difficulty": "Medium",
   "frontendQuestionId": 531,
   "isFavor": false,
   "paidOnly": true,
   "title": "Lonely Pixel I",
   "titleSlug": "lonely-pixel-i",
   "topicTags": "['Array', 'Hash Table', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "44.3926619792077",
   "difficulty": "Medium",
   "frontendQuestionId": 532,
   "isFavor": false,
   "paidOnly": false,
   "title": "K-diff Pairs in an Array",
   "titleSlug": "k-diff-pairs-in-an-array",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.62746476398018",
   "difficulty": "Medium",
   "frontendQuestionId": 533,
   "isFavor": false,
   "paidOnly": true,
   "title": "Lonely Pixel II",
   "titleSlug": "lonely-pixel-ii",
   "topicTags": "['Array', 'Hash Table', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.17395763740555",
   "difficulty": "Medium",
   "frontendQuestionId": 534,
   "isFavor": false,
   "paidOnly": true,
   "title": "Game Play Analysis III",
   "titleSlug": "game-play-analysis-iii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.62732017133573",
   "difficulty": "Medium",
   "frontendQuestionId": 535,
   "isFavor": false,
   "paidOnly": false,
   "title": "Encode and Decode TinyURL",
   "titleSlug": "encode-and-decode-tinyurl",
   "topicTags": "['Hash Table', 'String', 'Design', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.14887616443038",
   "difficulty": "Medium",
   "frontendQuestionId": 536,
   "isFavor": false,
   "paidOnly": true,
   "title": "Construct Binary Tree from String",
   "titleSlug": "construct-binary-tree-from-string",
   "topicTags": "['String', 'Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.27089043999209",
   "difficulty": "Medium",
   "frontendQuestionId": 537,
   "isFavor": false,
   "paidOnly": false,
   "title": "Complex Number Multiplication",
   "titleSlug": "complex-number-multiplication",
   "topicTags": "['Math', 'String', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.2844867349966",
   "difficulty": "Medium",
   "frontendQuestionId": 538,
   "isFavor": false,
   "paidOnly": false,
   "title": "Convert BST to Greater Tree",
   "titleSlug": "convert-bst-to-greater-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.29017841432945",
   "difficulty": "Medium",
   "frontendQuestionId": 539,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time Difference",
   "titleSlug": "minimum-time-difference",
   "topicTags": "['Array', 'Math', 'String', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.16954363626918",
   "difficulty": "Medium",
   "frontendQuestionId": 540,
   "isFavor": false,
   "paidOnly": false,
   "title": "Single Element in a Sorted Array",
   "titleSlug": "single-element-in-a-sorted-array",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.881035565162804",
   "difficulty": "Easy",
   "frontendQuestionId": 541,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse String II",
   "titleSlug": "reverse-string-ii",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.93505427333438",
   "difficulty": "Medium",
   "frontendQuestionId": 542,
   "isFavor": false,
   "paidOnly": false,
   "title": "01 Matrix",
   "titleSlug": "01-matrix",
   "topicTags": "['Array', 'Dynamic Programming', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.0340818044819",
   "difficulty": "Easy",
   "frontendQuestionId": 543,
   "isFavor": false,
   "paidOnly": false,
   "title": "Diameter of Binary Tree",
   "titleSlug": "diameter-of-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.36341910743066",
   "difficulty": "Medium",
   "frontendQuestionId": 544,
   "isFavor": false,
   "paidOnly": true,
   "title": "Output Contest Matches",
   "titleSlug": "output-contest-matches",
   "topicTags": "['String', 'Recursion', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.9214373267799",
   "difficulty": "Medium",
   "frontendQuestionId": 545,
   "isFavor": false,
   "paidOnly": true,
   "title": "Boundary of Binary Tree",
   "titleSlug": "boundary-of-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.19240394115963",
   "difficulty": "Hard",
   "frontendQuestionId": 546,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Boxes",
   "titleSlug": "remove-boxes",
   "topicTags": "['Array', 'Dynamic Programming', 'Memoization']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.18497434980941",
   "difficulty": "Medium",
   "frontendQuestionId": 547,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Provinces",
   "titleSlug": "number-of-provinces",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.14018787221415",
   "difficulty": "Hard",
   "frontendQuestionId": 548,
   "isFavor": false,
   "paidOnly": true,
   "title": "Split Array with Equal Sum",
   "titleSlug": "split-array-with-equal-sum",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.560746599399145",
   "difficulty": "Medium",
   "frontendQuestionId": 549,
   "isFavor": false,
   "paidOnly": true,
   "title": "Binary Tree Longest Consecutive Sequence II",
   "titleSlug": "binary-tree-longest-consecutive-sequence-ii",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.1092398862759",
   "difficulty": "Medium",
   "frontendQuestionId": 550,
   "isFavor": false,
   "paidOnly": false,
   "title": "Game Play Analysis IV",
   "titleSlug": "game-play-analysis-iv",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.50213680277429",
   "difficulty": "Easy",
   "frontendQuestionId": 551,
   "isFavor": false,
   "paidOnly": false,
   "title": "Student Attendance Record I",
   "titleSlug": "student-attendance-record-i",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.66980268087587",
   "difficulty": "Hard",
   "frontendQuestionId": 552,
   "isFavor": false,
   "paidOnly": false,
   "title": "Student Attendance Record II",
   "titleSlug": "student-attendance-record-ii",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.53740957017628",
   "difficulty": "Medium",
   "frontendQuestionId": 553,
   "isFavor": false,
   "paidOnly": false,
   "title": "Optimal Division",
   "titleSlug": "optimal-division",
   "topicTags": "['Array', 'Math', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.79271886799867",
   "difficulty": "Medium",
   "frontendQuestionId": 554,
   "isFavor": false,
   "paidOnly": false,
   "title": "Brick Wall",
   "titleSlug": "brick-wall",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "43.28539353116087",
   "difficulty": "Medium",
   "frontendQuestionId": 555,
   "isFavor": false,
   "paidOnly": true,
   "title": "Split Concatenated Strings",
   "titleSlug": "split-concatenated-strings",
   "topicTags": "['Array', 'String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.456542922583246",
   "difficulty": "Medium",
   "frontendQuestionId": 556,
   "isFavor": false,
   "paidOnly": false,
   "title": "Next Greater Element III",
   "titleSlug": "next-greater-element-iii",
   "topicTags": "['Math', 'Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.56493304890384",
   "difficulty": "Easy",
   "frontendQuestionId": 557,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Words in a String III",
   "titleSlug": "reverse-words-in-a-string-iii",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.11477588498248",
   "difficulty": "Medium",
   "frontendQuestionId": 558,
   "isFavor": false,
   "paidOnly": false,
   "title": "Logical OR of Two Binary Grids Represented as Quad-Trees",
   "titleSlug": "logical-or-of-two-binary-grids-represented-as-quad-trees",
   "topicTags": "['Divide and Conquer', 'Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.78079449958292",
   "difficulty": "Easy",
   "frontendQuestionId": 559,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Depth of N-ary Tree",
   "titleSlug": "maximum-depth-of-n-ary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.10859191060946",
   "difficulty": "Medium",
   "frontendQuestionId": 560,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subarray Sum Equals K",
   "titleSlug": "subarray-sum-equals-k",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "80.17155235816394",
   "difficulty": "Easy",
   "frontendQuestionId": 561,
   "isFavor": false,
   "paidOnly": false,
   "title": "Array Partition",
   "titleSlug": "array-partition",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Counting Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.49869169401634",
   "difficulty": "Medium",
   "frontendQuestionId": 562,
   "isFavor": false,
   "paidOnly": true,
   "title": "Longest Line of Consecutive One in Matrix",
   "titleSlug": "longest-line-of-consecutive-one-in-matrix",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.66346463453901",
   "difficulty": "Easy",
   "frontendQuestionId": 563,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Tilt",
   "titleSlug": "binary-tree-tilt",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.5799273342123",
   "difficulty": "Hard",
   "frontendQuestionId": 564,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Closest Palindrome",
   "titleSlug": "find-the-closest-palindrome",
   "topicTags": "['Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.908621912684595",
   "difficulty": "Medium",
   "frontendQuestionId": 565,
   "isFavor": false,
   "paidOnly": false,
   "title": "Array Nesting",
   "titleSlug": "array-nesting",
   "topicTags": "['Array', 'Depth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.74774543038164",
   "difficulty": "Easy",
   "frontendQuestionId": 566,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reshape the Matrix",
   "titleSlug": "reshape-the-matrix",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.95832289823908",
   "difficulty": "Medium",
   "frontendQuestionId": 567,
   "isFavor": false,
   "paidOnly": false,
   "title": "Permutation in String",
   "titleSlug": "permutation-in-string",
   "topicTags": "['Hash Table', 'Two Pointers', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.25267665952891",
   "difficulty": "Hard",
   "frontendQuestionId": 568,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Vacation Days",
   "titleSlug": "maximum-vacation-days",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.2596805598255",
   "difficulty": "Hard",
   "frontendQuestionId": 569,
   "isFavor": false,
   "paidOnly": true,
   "title": "Median Employee Salary",
   "titleSlug": "median-employee-salary",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.034556082349766",
   "difficulty": "Medium",
   "frontendQuestionId": 570,
   "isFavor": false,
   "paidOnly": false,
   "title": "Managers with at Least 5 Direct Reports",
   "titleSlug": "managers-with-at-least-5-direct-reports",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.54910726024876",
   "difficulty": "Hard",
   "frontendQuestionId": 571,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Median Given Frequency of Numbers",
   "titleSlug": "find-median-given-frequency-of-numbers",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.626114749743095",
   "difficulty": "Easy",
   "frontendQuestionId": 572,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subtree of Another Tree",
   "titleSlug": "subtree-of-another-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'String Matching', 'Binary Tree', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.2397637987409",
   "difficulty": "Medium",
   "frontendQuestionId": 573,
   "isFavor": false,
   "paidOnly": true,
   "title": "Squirrel Simulation",
   "titleSlug": "squirrel-simulation",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "61.79507337526206",
   "difficulty": "Medium",
   "frontendQuestionId": 574,
   "isFavor": false,
   "paidOnly": true,
   "title": "Winning Candidate",
   "titleSlug": "winning-candidate",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.23647483922296",
   "difficulty": "Easy",
   "frontendQuestionId": 575,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distribute Candies",
   "titleSlug": "distribute-candies",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.11350756849633",
   "difficulty": "Medium",
   "frontendQuestionId": 576,
   "isFavor": false,
   "paidOnly": false,
   "title": "Out of Boundary Paths",
   "titleSlug": "out-of-boundary-paths",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.06963964445394",
   "difficulty": "Easy",
   "frontendQuestionId": 577,
   "isFavor": false,
   "paidOnly": false,
   "title": "Employee Bonus",
   "titleSlug": "employee-bonus",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.23674756403298",
   "difficulty": "Medium",
   "frontendQuestionId": 578,
   "isFavor": false,
   "paidOnly": true,
   "title": "Get Highest Answer Rate Question",
   "titleSlug": "get-highest-answer-rate-question",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.511227618953406",
   "difficulty": "Hard",
   "frontendQuestionId": 579,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Cumulative Salary of an Employee",
   "titleSlug": "find-cumulative-salary-of-an-employee",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.66042585937308",
   "difficulty": "Medium",
   "frontendQuestionId": 580,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Student Number in Departments",
   "titleSlug": "count-student-number-in-departments",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.30297982133318",
   "difficulty": "Medium",
   "frontendQuestionId": 581,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Unsorted Continuous Subarray",
   "titleSlug": "shortest-unsorted-continuous-subarray",
   "topicTags": "['Array', 'Two Pointers', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.00442390127073",
   "difficulty": "Medium",
   "frontendQuestionId": 582,
   "isFavor": false,
   "paidOnly": true,
   "title": "Kill Process",
   "titleSlug": "kill-process",
   "topicTags": "['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "63.268684419080564",
   "difficulty": "Medium",
   "frontendQuestionId": 583,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Operation for Two Strings",
   "titleSlug": "delete-operation-for-two-strings",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.66733744798674",
   "difficulty": "Easy",
   "frontendQuestionId": 584,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Customer Referee",
   "titleSlug": "find-customer-referee",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.83496750364755",
   "difficulty": "Medium",
   "frontendQuestionId": 585,
   "isFavor": false,
   "paidOnly": false,
   "title": "Investments in 2016",
   "titleSlug": "investments-in-2016",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.49056625777723",
   "difficulty": "Easy",
   "frontendQuestionId": 586,
   "isFavor": false,
   "paidOnly": false,
   "title": "Customer Placing the Largest Number of Orders",
   "titleSlug": "customer-placing-the-largest-number-of-orders",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.08965698003772",
   "difficulty": "Hard",
   "frontendQuestionId": 587,
   "isFavor": false,
   "paidOnly": false,
   "title": "Erect the Fence",
   "titleSlug": "erect-the-fence",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.10249743635292",
   "difficulty": "Hard",
   "frontendQuestionId": 588,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design In-Memory File System",
   "titleSlug": "design-in-memory-file-system",
   "topicTags": "['Hash Table', 'String', 'Design', 'Trie', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.08884909497291",
   "difficulty": "Easy",
   "frontendQuestionId": 589,
   "isFavor": false,
   "paidOnly": false,
   "title": "N-ary Tree Preorder Traversal",
   "titleSlug": "n-ary-tree-preorder-traversal",
   "topicTags": "['Stack', 'Tree', 'Depth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.58780086746123",
   "difficulty": "Easy",
   "frontendQuestionId": 590,
   "isFavor": false,
   "paidOnly": false,
   "title": "N-ary Tree Postorder Traversal",
   "titleSlug": "n-ary-tree-postorder-traversal",
   "topicTags": "['Stack', 'Tree', 'Depth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.78923270885404",
   "difficulty": "Hard",
   "frontendQuestionId": 591,
   "isFavor": false,
   "paidOnly": false,
   "title": "Tag Validator",
   "titleSlug": "tag-validator",
   "topicTags": "['String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.11253582742495",
   "difficulty": "Medium",
   "frontendQuestionId": 592,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fraction Addition and Subtraction",
   "titleSlug": "fraction-addition-and-subtraction",
   "topicTags": "['Math', 'String', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.19668082399386",
   "difficulty": "Medium",
   "frontendQuestionId": 593,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Square",
   "titleSlug": "valid-square",
   "topicTags": "['Math', 'Geometry']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.7065908175419",
   "difficulty": "Easy",
   "frontendQuestionId": 594,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Harmonious Subsequence",
   "titleSlug": "longest-harmonious-subsequence",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window', 'Sorting', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.19410784886924",
   "difficulty": "Easy",
   "frontendQuestionId": 595,
   "isFavor": false,
   "paidOnly": false,
   "title": "Big Countries",
   "titleSlug": "big-countries",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.00944488907226",
   "difficulty": "Easy",
   "frontendQuestionId": 596,
   "isFavor": false,
   "paidOnly": false,
   "title": "Classes More Than 5 Students",
   "titleSlug": "classes-more-than-5-students",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.47216959393722",
   "difficulty": "Easy",
   "frontendQuestionId": 597,
   "isFavor": false,
   "paidOnly": true,
   "title": "Friend Requests I: Overall Acceptance Rate",
   "titleSlug": "friend-requests-i-overall-acceptance-rate",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.08122368623329",
   "difficulty": "Easy",
   "frontendQuestionId": 598,
   "isFavor": false,
   "paidOnly": false,
   "title": "Range Addition II",
   "titleSlug": "range-addition-ii",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.573610992574885",
   "difficulty": "Easy",
   "frontendQuestionId": 599,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Index Sum of Two Lists",
   "titleSlug": "minimum-index-sum-of-two-lists",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.068163702828244",
   "difficulty": "Hard",
   "frontendQuestionId": 600,
   "isFavor": false,
   "paidOnly": false,
   "title": "Non-negative Integers without Consecutive Ones",
   "titleSlug": "non-negative-integers-without-consecutive-ones",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.58221555941297",
   "difficulty": "Hard",
   "frontendQuestionId": 601,
   "isFavor": false,
   "paidOnly": false,
   "title": "Human Traffic of Stadium",
   "titleSlug": "human-traffic-of-stadium",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.35286535259681",
   "difficulty": "Medium",
   "frontendQuestionId": 602,
   "isFavor": false,
   "paidOnly": false,
   "title": "Friend Requests II: Who Has the Most Friends",
   "titleSlug": "friend-requests-ii-who-has-the-most-friends",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.44768878214613",
   "difficulty": "Easy",
   "frontendQuestionId": 603,
   "isFavor": false,
   "paidOnly": true,
   "title": "Consecutive Available Seats",
   "titleSlug": "consecutive-available-seats",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.100731897336864",
   "difficulty": "Easy",
   "frontendQuestionId": 604,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design Compressed String Iterator",
   "titleSlug": "design-compressed-string-iterator",
   "topicTags": "['Array', 'String', 'Design', 'Iterator']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.83821368230578",
   "difficulty": "Easy",
   "frontendQuestionId": 605,
   "isFavor": false,
   "paidOnly": false,
   "title": "Can Place Flowers",
   "titleSlug": "can-place-flowers",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.9567924081059",
   "difficulty": "Medium",
   "frontendQuestionId": 606,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct String from Binary Tree",
   "titleSlug": "construct-string-from-binary-tree",
   "topicTags": "['String', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.8195923926261",
   "difficulty": "Easy",
   "frontendQuestionId": 607,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sales Person",
   "titleSlug": "sales-person",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.63579114530569",
   "difficulty": "Medium",
   "frontendQuestionId": 608,
   "isFavor": false,
   "paidOnly": false,
   "title": "Tree Node",
   "titleSlug": "tree-node",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.55477584814217",
   "difficulty": "Medium",
   "frontendQuestionId": 609,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Duplicate File in System",
   "titleSlug": "find-duplicate-file-in-system",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.41074321994266",
   "difficulty": "Easy",
   "frontendQuestionId": 610,
   "isFavor": false,
   "paidOnly": false,
   "title": "Triangle Judgement",
   "titleSlug": "triangle-judgement",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.04146610978967",
   "difficulty": "Medium",
   "frontendQuestionId": 611,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Triangle Number",
   "titleSlug": "valid-triangle-number",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.27353206371758",
   "difficulty": "Medium",
   "frontendQuestionId": 612,
   "isFavor": false,
   "paidOnly": true,
   "title": "Shortest Distance in a Plane",
   "titleSlug": "shortest-distance-in-a-plane",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.98984410704311",
   "difficulty": "Easy",
   "frontendQuestionId": 613,
   "isFavor": false,
   "paidOnly": true,
   "title": "Shortest Distance in a Line",
   "titleSlug": "shortest-distance-in-a-line",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.764744546537585",
   "difficulty": "Medium",
   "frontendQuestionId": 614,
   "isFavor": false,
   "paidOnly": true,
   "title": "Second Degree Follower",
   "titleSlug": "second-degree-follower",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.59083211019532",
   "difficulty": "Hard",
   "frontendQuestionId": 615,
   "isFavor": false,
   "paidOnly": true,
   "title": "Average Salary: Departments VS Company",
   "titleSlug": "average-salary-departments-vs-company",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.78852862712908",
   "difficulty": "Medium",
   "frontendQuestionId": 616,
   "isFavor": false,
   "paidOnly": true,
   "title": "Add Bold Tag in String",
   "titleSlug": "add-bold-tag-in-string",
   "topicTags": "['Array', 'Hash Table', 'String', 'Trie', 'String Matching']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.23236300978202",
   "difficulty": "Easy",
   "frontendQuestionId": 617,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge Two Binary Trees",
   "titleSlug": "merge-two-binary-trees",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.663570197280215",
   "difficulty": "Hard",
   "frontendQuestionId": 618,
   "isFavor": false,
   "paidOnly": true,
   "title": "Students Report By Geography",
   "titleSlug": "students-report-by-geography",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.95268077186009",
   "difficulty": "Easy",
   "frontendQuestionId": 619,
   "isFavor": false,
   "paidOnly": false,
   "title": "Biggest Single Number",
   "titleSlug": "biggest-single-number",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.82776987255748",
   "difficulty": "Easy",
   "frontendQuestionId": 620,
   "isFavor": false,
   "paidOnly": false,
   "title": "Not Boring Movies",
   "titleSlug": "not-boring-movies",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.107064242362554",
   "difficulty": "Medium",
   "frontendQuestionId": 621,
   "isFavor": false,
   "paidOnly": false,
   "title": "Task Scheduler",
   "titleSlug": "task-scheduler",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.46487152214073",
   "difficulty": "Medium",
   "frontendQuestionId": 622,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Circular Queue",
   "titleSlug": "design-circular-queue",
   "topicTags": "['Array', 'Linked List', 'Design', 'Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.03230439342423",
   "difficulty": "Medium",
   "frontendQuestionId": 623,
   "isFavor": false,
   "paidOnly": false,
   "title": "Add One Row to Tree",
   "titleSlug": "add-one-row-to-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.60368013045965",
   "difficulty": "Medium",
   "frontendQuestionId": 624,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Distance in Arrays",
   "titleSlug": "maximum-distance-in-arrays",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.759275706959286",
   "difficulty": "Medium",
   "frontendQuestionId": 625,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Factorization",
   "titleSlug": "minimum-factorization",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "72.27735289942508",
   "difficulty": "Medium",
   "frontendQuestionId": 626,
   "isFavor": false,
   "paidOnly": false,
   "title": "Exchange Seats",
   "titleSlug": "exchange-seats",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.88249927957307",
   "difficulty": "Easy",
   "frontendQuestionId": 627,
   "isFavor": false,
   "paidOnly": false,
   "title": "Swap Salary",
   "titleSlug": "swap-salary",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.25399369726912",
   "difficulty": "Easy",
   "frontendQuestionId": 628,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Product of Three Numbers",
   "titleSlug": "maximum-product-of-three-numbers",
   "topicTags": "['Array', 'Math', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.098469787885975",
   "difficulty": "Hard",
   "frontendQuestionId": 629,
   "isFavor": false,
   "paidOnly": false,
   "title": "K Inverse Pairs Array",
   "titleSlug": "k-inverse-pairs-array",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.49810413636937",
   "difficulty": "Hard",
   "frontendQuestionId": 630,
   "isFavor": false,
   "paidOnly": false,
   "title": "Course Schedule III",
   "titleSlug": "course-schedule-iii",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.66732774148942",
   "difficulty": "Hard",
   "frontendQuestionId": 631,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design Excel Sum Formula",
   "titleSlug": "design-excel-sum-formula",
   "topicTags": "['Array', 'Hash Table', 'String', 'Graph', 'Design', 'Topological Sort', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.71917772300593",
   "difficulty": "Hard",
   "frontendQuestionId": 632,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Range Covering Elements from K Lists",
   "titleSlug": "smallest-range-covering-elements-from-k-lists",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Sliding Window', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.41138579469463",
   "difficulty": "Medium",
   "frontendQuestionId": 633,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Square Numbers",
   "titleSlug": "sum-of-square-numbers",
   "topicTags": "['Math', 'Two Pointers', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.70134725259223",
   "difficulty": "Medium",
   "frontendQuestionId": 634,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Derangement of An Array",
   "titleSlug": "find-the-derangement-of-an-array",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.22479132687326",
   "difficulty": "Medium",
   "frontendQuestionId": 635,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design Log Storage System",
   "titleSlug": "design-log-storage-system",
   "topicTags": "['Hash Table', 'String', 'Design', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.32411114430833",
   "difficulty": "Medium",
   "frontendQuestionId": 636,
   "isFavor": false,
   "paidOnly": false,
   "title": "Exclusive Time of Functions",
   "titleSlug": "exclusive-time-of-functions",
   "topicTags": "['Array', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.88581744991289",
   "difficulty": "Easy",
   "frontendQuestionId": 637,
   "isFavor": false,
   "paidOnly": false,
   "title": "Average of Levels in Binary Tree",
   "titleSlug": "average-of-levels-in-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.82379623430647",
   "difficulty": "Medium",
   "frontendQuestionId": 638,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shopping Offers",
   "titleSlug": "shopping-offers",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Memoization', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.09436510555355",
   "difficulty": "Hard",
   "frontendQuestionId": 639,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decode Ways II",
   "titleSlug": "decode-ways-ii",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.4375",
   "difficulty": "Medium",
   "frontendQuestionId": 640,
   "isFavor": false,
   "paidOnly": false,
   "title": "Solve the Equation",
   "titleSlug": "solve-the-equation",
   "topicTags": "['Math', 'String', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.54989792421058",
   "difficulty": "Medium",
   "frontendQuestionId": 641,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Circular Deque",
   "titleSlug": "design-circular-deque",
   "topicTags": "['Array', 'Linked List', 'Design', 'Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.30547070436846",
   "difficulty": "Hard",
   "frontendQuestionId": 642,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design Search Autocomplete System",
   "titleSlug": "design-search-autocomplete-system",
   "topicTags": "['String', 'Depth-First Search', 'Design', 'Trie', 'Sorting', 'Heap (Priority Queue)', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.919525618617016",
   "difficulty": "Easy",
   "frontendQuestionId": 643,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Average Subarray I",
   "titleSlug": "maximum-average-subarray-i",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.35920006837022",
   "difficulty": "Hard",
   "frontendQuestionId": 644,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Average Subarray II",
   "titleSlug": "maximum-average-subarray-ii",
   "topicTags": "['Array', 'Binary Search', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "44.848395821272106",
   "difficulty": "Easy",
   "frontendQuestionId": 645,
   "isFavor": false,
   "paidOnly": false,
   "title": "Set Mismatch",
   "titleSlug": "set-mismatch",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.671894349542434",
   "difficulty": "Medium",
   "frontendQuestionId": 646,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Length of Pair Chain",
   "titleSlug": "maximum-length-of-pair-chain",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.4070841609852",
   "difficulty": "Medium",
   "frontendQuestionId": 647,
   "isFavor": false,
   "paidOnly": false,
   "title": "Palindromic Substrings",
   "titleSlug": "palindromic-substrings",
   "topicTags": "['Two Pointers', 'String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.28298776382084",
   "difficulty": "Medium",
   "frontendQuestionId": 648,
   "isFavor": false,
   "paidOnly": false,
   "title": "Replace Words",
   "titleSlug": "replace-words",
   "topicTags": "['Array', 'Hash Table', 'String', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.63365372916413",
   "difficulty": "Medium",
   "frontendQuestionId": 649,
   "isFavor": false,
   "paidOnly": false,
   "title": "Dota2 Senate",
   "titleSlug": "dota2-senate",
   "topicTags": "['String', 'Greedy', 'Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.51514464328156",
   "difficulty": "Medium",
   "frontendQuestionId": 650,
   "isFavor": false,
   "paidOnly": false,
   "title": "2 Keys Keyboard",
   "titleSlug": "2-keys-keyboard",
   "topicTags": "['Math', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.86052764828104",
   "difficulty": "Medium",
   "frontendQuestionId": 651,
   "isFavor": false,
   "paidOnly": true,
   "title": "4 Keys Keyboard",
   "titleSlug": "4-keys-keyboard",
   "topicTags": "['Math', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.966429482152925",
   "difficulty": "Medium",
   "frontendQuestionId": 652,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Duplicate Subtrees",
   "titleSlug": "find-duplicate-subtrees",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.004375077481434",
   "difficulty": "Easy",
   "frontendQuestionId": 653,
   "isFavor": false,
   "paidOnly": false,
   "title": "Two Sum IV - Input is a BST",
   "titleSlug": "two-sum-iv-input-is-a-bst",
   "topicTags": "['Hash Table', 'Two Pointers', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.83013061795897",
   "difficulty": "Medium",
   "frontendQuestionId": 654,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Binary Tree",
   "titleSlug": "maximum-binary-tree",
   "topicTags": "['Array', 'Divide and Conquer', 'Stack', 'Tree', 'Monotonic Stack', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.33289658242414",
   "difficulty": "Medium",
   "frontendQuestionId": 655,
   "isFavor": false,
   "paidOnly": false,
   "title": "Print Binary Tree",
   "titleSlug": "print-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.366652804832675",
   "difficulty": "Hard",
   "frontendQuestionId": 656,
   "isFavor": false,
   "paidOnly": true,
   "title": "Coin Path",
   "titleSlug": "coin-path",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.07851446135942",
   "difficulty": "Easy",
   "frontendQuestionId": 657,
   "isFavor": false,
   "paidOnly": false,
   "title": "Robot Return to Origin",
   "titleSlug": "robot-return-to-origin",
   "topicTags": "['String', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.45424383337746",
   "difficulty": "Medium",
   "frontendQuestionId": 658,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find K Closest Elements",
   "titleSlug": "find-k-closest-elements",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sliding Window', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.42034219539312",
   "difficulty": "Medium",
   "frontendQuestionId": 659,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split Array into Consecutive Subsequences",
   "titleSlug": "split-array-into-consecutive-subsequences",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.35713914984169",
   "difficulty": "Hard",
   "frontendQuestionId": 660,
   "isFavor": false,
   "paidOnly": true,
   "title": "Remove 9",
   "titleSlug": "remove-9",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.16848242483134",
   "difficulty": "Easy",
   "frontendQuestionId": 661,
   "isFavor": false,
   "paidOnly": false,
   "title": "Image Smoother",
   "titleSlug": "image-smoother",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.86477249781565",
   "difficulty": "Medium",
   "frontendQuestionId": 662,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Width of Binary Tree",
   "titleSlug": "maximum-width-of-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.53211338356656",
   "difficulty": "Medium",
   "frontendQuestionId": 663,
   "isFavor": false,
   "paidOnly": true,
   "title": "Equal Tree Partition",
   "titleSlug": "equal-tree-partition",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.783685372194476",
   "difficulty": "Hard",
   "frontendQuestionId": 664,
   "isFavor": false,
   "paidOnly": false,
   "title": "Strange Printer",
   "titleSlug": "strange-printer",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.00771206382002",
   "difficulty": "Medium",
   "frontendQuestionId": 665,
   "isFavor": false,
   "paidOnly": false,
   "title": "Non-decreasing Array",
   "titleSlug": "non-decreasing-array",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.620038161969404",
   "difficulty": "Medium",
   "frontendQuestionId": 666,
   "isFavor": false,
   "paidOnly": true,
   "title": "Path Sum IV",
   "titleSlug": "path-sum-iv",
   "topicTags": "['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.33140157013148",
   "difficulty": "Medium",
   "frontendQuestionId": 667,
   "isFavor": false,
   "paidOnly": false,
   "title": "Beautiful Arrangement II",
   "titleSlug": "beautiful-arrangement-ii",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.60673397281369",
   "difficulty": "Hard",
   "frontendQuestionId": 668,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Smallest Number in Multiplication Table",
   "titleSlug": "kth-smallest-number-in-multiplication-table",
   "topicTags": "['Math', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.33987064643358",
   "difficulty": "Medium",
   "frontendQuestionId": 669,
   "isFavor": false,
   "paidOnly": false,
   "title": "Trim a Binary Search Tree",
   "titleSlug": "trim-a-binary-search-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "51.73960675118967",
   "difficulty": "Medium",
   "frontendQuestionId": 670,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Swap",
   "titleSlug": "maximum-swap",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.18470070503471",
   "difficulty": "Easy",
   "frontendQuestionId": 671,
   "isFavor": false,
   "paidOnly": false,
   "title": "Second Minimum Node In a Binary Tree",
   "titleSlug": "second-minimum-node-in-a-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.45098558010319",
   "difficulty": "Medium",
   "frontendQuestionId": 672,
   "isFavor": false,
   "paidOnly": false,
   "title": "Bulb Switcher II",
   "titleSlug": "bulb-switcher-ii",
   "topicTags": "['Math', 'Bit Manipulation', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.488572610764095",
   "difficulty": "Medium",
   "frontendQuestionId": 673,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Longest Increasing Subsequence",
   "titleSlug": "number-of-longest-increasing-subsequence",
   "topicTags": "['Array', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.96813047409546",
   "difficulty": "Easy",
   "frontendQuestionId": 674,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Continuous Increasing Subsequence",
   "titleSlug": "longest-continuous-increasing-subsequence",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.145108023837196",
   "difficulty": "Hard",
   "frontendQuestionId": 675,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cut Off Trees for Golf Event",
   "titleSlug": "cut-off-trees-for-golf-event",
   "topicTags": "['Array', 'Breadth-First Search', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.03139792526941",
   "difficulty": "Medium",
   "frontendQuestionId": 676,
   "isFavor": false,
   "paidOnly": false,
   "title": "Implement Magic Dictionary",
   "titleSlug": "implement-magic-dictionary",
   "topicTags": "['Hash Table', 'String', 'Depth-First Search', 'Design', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.94442596559386",
   "difficulty": "Medium",
   "frontendQuestionId": 677,
   "isFavor": false,
   "paidOnly": false,
   "title": "Map Sum Pairs",
   "titleSlug": "map-sum-pairs",
   "topicTags": "['Hash Table', 'String', 'Design', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.68884684000984",
   "difficulty": "Medium",
   "frontendQuestionId": 678,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Parenthesis String",
   "titleSlug": "valid-parenthesis-string",
   "topicTags": "['String', 'Dynamic Programming', 'Stack', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.83728229642946",
   "difficulty": "Hard",
   "frontendQuestionId": 679,
   "isFavor": false,
   "paidOnly": false,
   "title": "24 Game",
   "titleSlug": "24-game",
   "topicTags": "['Array', 'Math', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.68425713866155",
   "difficulty": "Easy",
   "frontendQuestionId": 680,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Palindrome II",
   "titleSlug": "valid-palindrome-ii",
   "topicTags": "['Two Pointers', 'String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.87925495374313",
   "difficulty": "Medium",
   "frontendQuestionId": 681,
   "isFavor": false,
   "paidOnly": true,
   "title": "Next Closest Time",
   "titleSlug": "next-closest-time",
   "topicTags": "['Hash Table', 'String', 'Backtracking', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.44021869711693",
   "difficulty": "Easy",
   "frontendQuestionId": 682,
   "isFavor": false,
   "paidOnly": false,
   "title": "Baseball Game",
   "titleSlug": "baseball-game",
   "topicTags": "['Array', 'Stack', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.240114626696695",
   "difficulty": "Hard",
   "frontendQuestionId": 683,
   "isFavor": false,
   "paidOnly": true,
   "title": "K Empty Slots",
   "titleSlug": "k-empty-slots",
   "topicTags": "['Array', 'Binary Indexed Tree', 'Segment Tree', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Ordered Set', 'Monotonic Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.15637837555394",
   "difficulty": "Medium",
   "frontendQuestionId": 684,
   "isFavor": false,
   "paidOnly": false,
   "title": "Redundant Connection",
   "titleSlug": "redundant-connection",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.91414842734025",
   "difficulty": "Hard",
   "frontendQuestionId": 685,
   "isFavor": false,
   "paidOnly": false,
   "title": "Redundant Connection II",
   "titleSlug": "redundant-connection-ii",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.418086583937765",
   "difficulty": "Medium",
   "frontendQuestionId": 686,
   "isFavor": false,
   "paidOnly": false,
   "title": "Repeated String Match",
   "titleSlug": "repeated-string-match",
   "topicTags": "['String', 'String Matching']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.387475123851466",
   "difficulty": "Medium",
   "frontendQuestionId": 687,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Univalue Path",
   "titleSlug": "longest-univalue-path",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.50177631425613",
   "difficulty": "Medium",
   "frontendQuestionId": 688,
   "isFavor": false,
   "paidOnly": false,
   "title": "Knight Probability in Chessboard",
   "titleSlug": "knight-probability-in-chessboard",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.43939577527364",
   "difficulty": "Hard",
   "frontendQuestionId": 689,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum of 3 Non-Overlapping Subarrays",
   "titleSlug": "maximum-sum-of-3-non-overlapping-subarrays",
   "topicTags": "['Array', 'Dynamic Programming', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.14258656809471",
   "difficulty": "Medium",
   "frontendQuestionId": 690,
   "isFavor": false,
   "paidOnly": false,
   "title": "Employee Importance",
   "titleSlug": "employee-importance",
   "topicTags": "['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.90412326684367",
   "difficulty": "Hard",
   "frontendQuestionId": 691,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stickers to Spell Word",
   "titleSlug": "stickers-to-spell-word",
   "topicTags": "['Array', 'Hash Table', 'String', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Memoization', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.03600001714082",
   "difficulty": "Medium",
   "frontendQuestionId": 692,
   "isFavor": false,
   "paidOnly": false,
   "title": "Top K Frequent Words",
   "titleSlug": "top-k-frequent-words",
   "topicTags": "['Array', 'Hash Table', 'String', 'Trie', 'Sorting', 'Heap (Priority Queue)', 'Bucket Sort', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.35196229720148",
   "difficulty": "Easy",
   "frontendQuestionId": 693,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Number with Alternating Bits",
   "titleSlug": "binary-number-with-alternating-bits",
   "topicTags": "['Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.037624742871",
   "difficulty": "Medium",
   "frontendQuestionId": 694,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Distinct Islands",
   "titleSlug": "number-of-distinct-islands",
   "topicTags": "['Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "72.98250886832547",
   "difficulty": "Medium",
   "frontendQuestionId": 695,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Area of Island",
   "titleSlug": "max-area-of-island",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.79124559664551",
   "difficulty": "Easy",
   "frontendQuestionId": 696,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Binary Substrings",
   "titleSlug": "count-binary-substrings",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.19244009065822",
   "difficulty": "Easy",
   "frontendQuestionId": 697,
   "isFavor": false,
   "paidOnly": false,
   "title": "Degree of an Array",
   "titleSlug": "degree-of-an-array",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.080917184676615",
   "difficulty": "Medium",
   "frontendQuestionId": 698,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition to K Equal Sum Subsets",
   "titleSlug": "partition-to-k-equal-sum-subsets",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Memoization', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.01410302378392",
   "difficulty": "Hard",
   "frontendQuestionId": 699,
   "isFavor": false,
   "paidOnly": false,
   "title": "Falling Squares",
   "titleSlug": "falling-squares",
   "topicTags": "['Array', 'Segment Tree', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.43042276761105",
   "difficulty": "Easy",
   "frontendQuestionId": 700,
   "isFavor": false,
   "paidOnly": false,
   "title": "Search in a Binary Search Tree",
   "titleSlug": "search-in-a-binary-search-tree",
   "topicTags": "['Tree', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.47122617523803",
   "difficulty": "Medium",
   "frontendQuestionId": 701,
   "isFavor": false,
   "paidOnly": false,
   "title": "Insert into a Binary Search Tree",
   "titleSlug": "insert-into-a-binary-search-tree",
   "topicTags": "['Tree', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.68419464560017",
   "difficulty": "Medium",
   "frontendQuestionId": 702,
   "isFavor": false,
   "paidOnly": true,
   "title": "Search in a Sorted Array of Unknown Size",
   "titleSlug": "search-in-a-sorted-array-of-unknown-size",
   "topicTags": "['Array', 'Binary Search', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.77112815093658",
   "difficulty": "Easy",
   "frontendQuestionId": 703,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Largest Element in a Stream",
   "titleSlug": "kth-largest-element-in-a-stream",
   "topicTags": "['Tree', 'Design', 'Binary Search Tree', 'Heap (Priority Queue)', 'Binary Tree', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.289560662581906",
   "difficulty": "Easy",
   "frontendQuestionId": 704,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Search",
   "titleSlug": "binary-search",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.31574089822914",
   "difficulty": "Easy",
   "frontendQuestionId": 705,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design HashSet",
   "titleSlug": "design-hashset",
   "topicTags": "['Array', 'Hash Table', 'Linked List', 'Design', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.70470269025522",
   "difficulty": "Easy",
   "frontendQuestionId": 706,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design HashMap",
   "titleSlug": "design-hashmap",
   "topicTags": "['Array', 'Hash Table', 'Linked List', 'Design', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.96404858688276",
   "difficulty": "Medium",
   "frontendQuestionId": 707,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Linked List",
   "titleSlug": "design-linked-list",
   "topicTags": "['Linked List', 'Design']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.832004596090904",
   "difficulty": "Medium",
   "frontendQuestionId": 708,
   "isFavor": false,
   "paidOnly": true,
   "title": "Insert into a Sorted Circular Linked List",
   "titleSlug": "insert-into-a-sorted-circular-linked-list",
   "topicTags": "['Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.0535972124355",
   "difficulty": "Easy",
   "frontendQuestionId": 709,
   "isFavor": false,
   "paidOnly": false,
   "title": "To Lower Case",
   "titleSlug": "to-lower-case",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.740486569698014",
   "difficulty": "Hard",
   "frontendQuestionId": 710,
   "isFavor": false,
   "paidOnly": false,
   "title": "Random Pick with Blacklist",
   "titleSlug": "random-pick-with-blacklist",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Binary Search', 'Sorting', 'Randomized']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.45714524975924",
   "difficulty": "Hard",
   "frontendQuestionId": 711,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Distinct Islands II",
   "titleSlug": "number-of-distinct-islands-ii",
   "topicTags": "['Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.5785406885759",
   "difficulty": "Medium",
   "frontendQuestionId": 712,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum ASCII Delete Sum for Two Strings",
   "titleSlug": "minimum-ascii-delete-sum-for-two-strings",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.55095299712272",
   "difficulty": "Medium",
   "frontendQuestionId": 713,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subarray Product Less Than K",
   "titleSlug": "subarray-product-less-than-k",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.07833422297651",
   "difficulty": "Medium",
   "frontendQuestionId": 714,
   "isFavor": false,
   "paidOnly": false,
   "title": "Best Time to Buy and Sell Stock with Transaction Fee",
   "titleSlug": "best-time-to-buy-and-sell-stock-with-transaction-fee",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.11619944361224",
   "difficulty": "Hard",
   "frontendQuestionId": 715,
   "isFavor": false,
   "paidOnly": false,
   "title": "Range Module",
   "titleSlug": "range-module",
   "topicTags": "['Design', 'Segment Tree', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.390095879509076",
   "difficulty": "Hard",
   "frontendQuestionId": 716,
   "isFavor": false,
   "paidOnly": true,
   "title": "Max Stack",
   "titleSlug": "max-stack",
   "topicTags": "['Linked List', 'Stack', 'Design', 'Doubly-Linked List', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.11294985304147",
   "difficulty": "Easy",
   "frontendQuestionId": 717,
   "isFavor": false,
   "paidOnly": false,
   "title": "1-bit and 2-bit Characters",
   "titleSlug": "1-bit-and-2-bit-characters",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.9819525147189",
   "difficulty": "Medium",
   "frontendQuestionId": 718,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Length of Repeated Subarray",
   "titleSlug": "maximum-length-of-repeated-subarray",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Sliding Window', 'Rolling Hash', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.64773124543938",
   "difficulty": "Hard",
   "frontendQuestionId": 719,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find K-th Smallest Pair Distance",
   "titleSlug": "find-k-th-smallest-pair-distance",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.253763664233624",
   "difficulty": "Medium",
   "frontendQuestionId": 720,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Word in Dictionary",
   "titleSlug": "longest-word-in-dictionary",
   "topicTags": "['Array', 'Hash Table', 'String', 'Trie', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.07550131808892",
   "difficulty": "Medium",
   "frontendQuestionId": 721,
   "isFavor": false,
   "paidOnly": false,
   "title": "Accounts Merge",
   "titleSlug": "accounts-merge",
   "topicTags": "['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.28994967362599",
   "difficulty": "Medium",
   "frontendQuestionId": 722,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Comments",
   "titleSlug": "remove-comments",
   "topicTags": "['Array', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.23536369012419",
   "difficulty": "Medium",
   "frontendQuestionId": 723,
   "isFavor": false,
   "paidOnly": true,
   "title": "Candy Crush",
   "titleSlug": "candy-crush",
   "topicTags": "['Array', 'Two Pointers', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.13174677981626",
   "difficulty": "Easy",
   "frontendQuestionId": 724,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Pivot Index",
   "titleSlug": "find-pivot-index",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.12402627744079",
   "difficulty": "Medium",
   "frontendQuestionId": 725,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split Linked List in Parts",
   "titleSlug": "split-linked-list-in-parts",
   "topicTags": "['Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.01266936551649",
   "difficulty": "Hard",
   "frontendQuestionId": 726,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Atoms",
   "titleSlug": "number-of-atoms",
   "topicTags": "['Hash Table', 'String', 'Stack', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.58935886768604",
   "difficulty": "Hard",
   "frontendQuestionId": 727,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Window Subsequence",
   "titleSlug": "minimum-window-subsequence",
   "topicTags": "['String', 'Dynamic Programming', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.46549936643244",
   "difficulty": "Easy",
   "frontendQuestionId": 728,
   "isFavor": false,
   "paidOnly": false,
   "title": "Self Dividing Numbers",
   "titleSlug": "self-dividing-numbers",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.3575715717079",
   "difficulty": "Medium",
   "frontendQuestionId": 729,
   "isFavor": false,
   "paidOnly": false,
   "title": "My Calendar I",
   "titleSlug": "my-calendar-i",
   "topicTags": "['Array', 'Binary Search', 'Design', 'Segment Tree', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.209835102114624",
   "difficulty": "Hard",
   "frontendQuestionId": 730,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Different Palindromic Subsequences",
   "titleSlug": "count-different-palindromic-subsequences",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.83527152633106",
   "difficulty": "Medium",
   "frontendQuestionId": 731,
   "isFavor": false,
   "paidOnly": false,
   "title": "My Calendar II",
   "titleSlug": "my-calendar-ii",
   "topicTags": "['Array', 'Binary Search', 'Design', 'Segment Tree', 'Prefix Sum', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.04105757864083",
   "difficulty": "Hard",
   "frontendQuestionId": 732,
   "isFavor": false,
   "paidOnly": false,
   "title": "My Calendar III",
   "titleSlug": "my-calendar-iii",
   "topicTags": "['Binary Search', 'Design', 'Segment Tree', 'Prefix Sum', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.01359837217258",
   "difficulty": "Easy",
   "frontendQuestionId": 733,
   "isFavor": false,
   "paidOnly": false,
   "title": "Flood Fill",
   "titleSlug": "flood-fill",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.54864378158434",
   "difficulty": "Easy",
   "frontendQuestionId": 734,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sentence Similarity",
   "titleSlug": "sentence-similarity",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.19997519084202",
   "difficulty": "Medium",
   "frontendQuestionId": 735,
   "isFavor": false,
   "paidOnly": false,
   "title": "Asteroid Collision",
   "titleSlug": "asteroid-collision",
   "topicTags": "['Array', 'Stack', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.38860669967209",
   "difficulty": "Hard",
   "frontendQuestionId": 736,
   "isFavor": false,
   "paidOnly": false,
   "title": "Parse Lisp Expression",
   "titleSlug": "parse-lisp-expression",
   "topicTags": "['Hash Table', 'String', 'Stack', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.54071547039549",
   "difficulty": "Medium",
   "frontendQuestionId": 737,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sentence Similarity II",
   "titleSlug": "sentence-similarity-ii",
   "topicTags": "['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.543720394315706",
   "difficulty": "Medium",
   "frontendQuestionId": 738,
   "isFavor": false,
   "paidOnly": false,
   "title": "Monotone Increasing Digits",
   "titleSlug": "monotone-increasing-digits",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.09699820752796",
   "difficulty": "Medium",
   "frontendQuestionId": 739,
   "isFavor": false,
   "paidOnly": false,
   "title": "Daily Temperatures",
   "titleSlug": "daily-temperatures",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.668019421697224",
   "difficulty": "Medium",
   "frontendQuestionId": 740,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete and Earn",
   "titleSlug": "delete-and-earn",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.66223158788888",
   "difficulty": "Hard",
   "frontendQuestionId": 741,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cherry Pickup",
   "titleSlug": "cherry-pickup",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.99840428458759",
   "difficulty": "Medium",
   "frontendQuestionId": 742,
   "isFavor": false,
   "paidOnly": true,
   "title": "Closest Leaf in a Binary Tree",
   "titleSlug": "closest-leaf-in-a-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.696482077460885",
   "difficulty": "Medium",
   "frontendQuestionId": 743,
   "isFavor": false,
   "paidOnly": false,
   "title": "Network Delay Time",
   "titleSlug": "network-delay-time",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.770863564519246",
   "difficulty": "Easy",
   "frontendQuestionId": 744,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Smallest Letter Greater Than Target",
   "titleSlug": "find-smallest-letter-greater-than-target",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.22722415869954",
   "difficulty": "Hard",
   "frontendQuestionId": 745,
   "isFavor": false,
   "paidOnly": false,
   "title": "Prefix and Suffix Search",
   "titleSlug": "prefix-and-suffix-search",
   "topicTags": "['Array', 'Hash Table', 'String', 'Design', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.93432156897751",
   "difficulty": "Easy",
   "frontendQuestionId": 746,
   "isFavor": false,
   "paidOnly": false,
   "title": "Min Cost Climbing Stairs",
   "titleSlug": "min-cost-climbing-stairs",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.48574405011607",
   "difficulty": "Easy",
   "frontendQuestionId": 747,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Number At Least Twice of Others",
   "titleSlug": "largest-number-at-least-twice-of-others",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.091957877791934",
   "difficulty": "Easy",
   "frontendQuestionId": 748,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Completing Word",
   "titleSlug": "shortest-completing-word",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.28247602441151",
   "difficulty": "Hard",
   "frontendQuestionId": 749,
   "isFavor": false,
   "paidOnly": false,
   "title": "Contain Virus",
   "titleSlug": "contain-virus",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.80225409836066",
   "difficulty": "Medium",
   "frontendQuestionId": 750,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number Of Corner Rectangles",
   "titleSlug": "number-of-corner-rectangles",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.33927347498286",
   "difficulty": "Medium",
   "frontendQuestionId": 751,
   "isFavor": false,
   "paidOnly": true,
   "title": "IP to CIDR",
   "titleSlug": "ip-to-cidr",
   "topicTags": "['String', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.62998757349769",
   "difficulty": "Medium",
   "frontendQuestionId": 752,
   "isFavor": false,
   "paidOnly": false,
   "title": "Open the Lock",
   "titleSlug": "open-the-lock",
   "topicTags": "['Array', 'Hash Table', 'String', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.632755229751474",
   "difficulty": "Hard",
   "frontendQuestionId": 753,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cracking the Safe",
   "titleSlug": "cracking-the-safe",
   "topicTags": "['Depth-First Search', 'Graph', 'Eulerian Circuit']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.742325627612836",
   "difficulty": "Medium",
   "frontendQuestionId": 754,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reach a Number",
   "titleSlug": "reach-a-number",
   "topicTags": "['Math', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.69748090732931",
   "difficulty": "Medium",
   "frontendQuestionId": 755,
   "isFavor": false,
   "paidOnly": true,
   "title": "Pour Water",
   "titleSlug": "pour-water",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.82553520985388",
   "difficulty": "Medium",
   "frontendQuestionId": 756,
   "isFavor": false,
   "paidOnly": false,
   "title": "Pyramid Transition Matrix",
   "titleSlug": "pyramid-transition-matrix",
   "topicTags": "['Bit Manipulation', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.99751801578199",
   "difficulty": "Hard",
   "frontendQuestionId": 757,
   "isFavor": false,
   "paidOnly": false,
   "title": "Set Intersection Size At Least Two",
   "titleSlug": "set-intersection-size-at-least-two",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.02289477810883",
   "difficulty": "Medium",
   "frontendQuestionId": 758,
   "isFavor": false,
   "paidOnly": true,
   "title": "Bold Words in String",
   "titleSlug": "bold-words-in-string",
   "topicTags": "['Array', 'Hash Table', 'String', 'Trie', 'String Matching']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.5462670919478",
   "difficulty": "Hard",
   "frontendQuestionId": 759,
   "isFavor": false,
   "paidOnly": true,
   "title": "Employee Free Time",
   "titleSlug": "employee-free-time",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.83671617032597",
   "difficulty": "Easy",
   "frontendQuestionId": 760,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Anagram Mappings",
   "titleSlug": "find-anagram-mappings",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "63.13694713829251",
   "difficulty": "Hard",
   "frontendQuestionId": 761,
   "isFavor": false,
   "paidOnly": false,
   "title": "Special Binary String",
   "titleSlug": "special-binary-string",
   "topicTags": "['String', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.66190402236371",
   "difficulty": "Easy",
   "frontendQuestionId": 762,
   "isFavor": false,
   "paidOnly": false,
   "title": "Prime Number of Set Bits in Binary Representation",
   "titleSlug": "prime-number-of-set-bits-in-binary-representation",
   "topicTags": "['Math', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.43265850940335",
   "difficulty": "Medium",
   "frontendQuestionId": 763,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition Labels",
   "titleSlug": "partition-labels",
   "topicTags": "['Hash Table', 'Two Pointers', 'String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.46787932496543",
   "difficulty": "Medium",
   "frontendQuestionId": 764,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Plus Sign",
   "titleSlug": "largest-plus-sign",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.19218267644513",
   "difficulty": "Hard",
   "frontendQuestionId": 765,
   "isFavor": false,
   "paidOnly": false,
   "title": "Couples Holding Hands",
   "titleSlug": "couples-holding-hands",
   "topicTags": "['Greedy', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.51248417640954",
   "difficulty": "Easy",
   "frontendQuestionId": 766,
   "isFavor": false,
   "paidOnly": false,
   "title": "Toeplitz Matrix",
   "titleSlug": "toeplitz-matrix",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.9366002064432",
   "difficulty": "Medium",
   "frontendQuestionId": 767,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reorganize String",
   "titleSlug": "reorganize-string",
   "topicTags": "['Hash Table', 'String', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.007231944856414",
   "difficulty": "Hard",
   "frontendQuestionId": 768,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Chunks To Make Sorted II",
   "titleSlug": "max-chunks-to-make-sorted-ii",
   "topicTags": "['Array', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.97788563681501",
   "difficulty": "Medium",
   "frontendQuestionId": 769,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Chunks To Make Sorted",
   "titleSlug": "max-chunks-to-make-sorted",
   "topicTags": "['Array', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.62566965290595",
   "difficulty": "Hard",
   "frontendQuestionId": 770,
   "isFavor": false,
   "paidOnly": false,
   "title": "Basic Calculator IV",
   "titleSlug": "basic-calculator-iv",
   "topicTags": "['Hash Table', 'Math', 'String', 'Stack', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.13535223998895",
   "difficulty": "Easy",
   "frontendQuestionId": 771,
   "isFavor": false,
   "paidOnly": false,
   "title": "Jewels and Stones",
   "titleSlug": "jewels-and-stones",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.13299553907146",
   "difficulty": "Hard",
   "frontendQuestionId": 772,
   "isFavor": false,
   "paidOnly": true,
   "title": "Basic Calculator III",
   "titleSlug": "basic-calculator-iii",
   "topicTags": "['Math', 'String', 'Stack', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.0282944612453",
   "difficulty": "Hard",
   "frontendQuestionId": 773,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sliding Puzzle",
   "titleSlug": "sliding-puzzle",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Breadth-First Search', 'Memoization', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.867216176186496",
   "difficulty": "Hard",
   "frontendQuestionId": 774,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimize Max Distance to Gas Station",
   "titleSlug": "minimize-max-distance-to-gas-station",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.28475294018993",
   "difficulty": "Medium",
   "frontendQuestionId": 775,
   "isFavor": false,
   "paidOnly": false,
   "title": "Global and Local Inversions",
   "titleSlug": "global-and-local-inversions",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.45259674438017",
   "difficulty": "Medium",
   "frontendQuestionId": 776,
   "isFavor": false,
   "paidOnly": true,
   "title": "Split BST",
   "titleSlug": "split-bst",
   "topicTags": "['Tree', 'Binary Search Tree', 'Recursion', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.42836440287201",
   "difficulty": "Medium",
   "frontendQuestionId": 777,
   "isFavor": false,
   "paidOnly": false,
   "title": "Swap Adjacent in LR String",
   "titleSlug": "swap-adjacent-in-lr-string",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.38839087600958",
   "difficulty": "Hard",
   "frontendQuestionId": 778,
   "isFavor": false,
   "paidOnly": false,
   "title": "Swim in Rising Water",
   "titleSlug": "swim-in-rising-water",
   "topicTags": "['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.234436329308885",
   "difficulty": "Medium",
   "frontendQuestionId": 779,
   "isFavor": false,
   "paidOnly": false,
   "title": "K-th Symbol in Grammar",
   "titleSlug": "k-th-symbol-in-grammar",
   "topicTags": "['Math', 'Bit Manipulation', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.544765138653084",
   "difficulty": "Hard",
   "frontendQuestionId": 780,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reaching Points",
   "titleSlug": "reaching-points",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.64902676399027",
   "difficulty": "Medium",
   "frontendQuestionId": 781,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rabbits in Forest",
   "titleSlug": "rabbits-in-forest",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.43281603368946",
   "difficulty": "Hard",
   "frontendQuestionId": 782,
   "isFavor": false,
   "paidOnly": false,
   "title": "Transform to Chessboard",
   "titleSlug": "transform-to-chessboard",
   "topicTags": "['Array', 'Math', 'Bit Manipulation', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.15531558987149",
   "difficulty": "Easy",
   "frontendQuestionId": 783,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Distance Between BST Nodes",
   "titleSlug": "minimum-distance-between-bst-nodes",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.90863890615289",
   "difficulty": "Medium",
   "frontendQuestionId": 784,
   "isFavor": false,
   "paidOnly": false,
   "title": "Letter Case Permutation",
   "titleSlug": "letter-case-permutation",
   "topicTags": "['String', 'Backtracking', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.341464504163476",
   "difficulty": "Medium",
   "frontendQuestionId": 785,
   "isFavor": false,
   "paidOnly": false,
   "title": "Is Graph Bipartite?",
   "titleSlug": "is-graph-bipartite",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "68.43292627692202",
   "difficulty": "Medium",
   "frontendQuestionId": 786,
   "isFavor": false,
   "paidOnly": false,
   "title": "K-th Smallest Prime Fraction",
   "titleSlug": "k-th-smallest-prime-fraction",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.16093105214442",
   "difficulty": "Medium",
   "frontendQuestionId": 787,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cheapest Flights Within K Stops",
   "titleSlug": "cheapest-flights-within-k-stops",
   "topicTags": "['Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.40553173221168",
   "difficulty": "Medium",
   "frontendQuestionId": 788,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rotated Digits",
   "titleSlug": "rotated-digits",
   "topicTags": "['Math', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.4516872305634",
   "difficulty": "Medium",
   "frontendQuestionId": 789,
   "isFavor": false,
   "paidOnly": false,
   "title": "Escape The Ghosts",
   "titleSlug": "escape-the-ghosts",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.49835644537631",
   "difficulty": "Medium",
   "frontendQuestionId": 790,
   "isFavor": false,
   "paidOnly": false,
   "title": "Domino and Tromino Tiling",
   "titleSlug": "domino-and-tromino-tiling",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "71.82988961222757",
   "difficulty": "Medium",
   "frontendQuestionId": 791,
   "isFavor": false,
   "paidOnly": false,
   "title": "Custom Sort String",
   "titleSlug": "custom-sort-string",
   "topicTags": "['Hash Table', 'String', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.687434612008985",
   "difficulty": "Medium",
   "frontendQuestionId": 792,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Matching Subsequences",
   "titleSlug": "number-of-matching-subsequences",
   "topicTags": "['Array', 'Hash Table', 'String', 'Binary Search', 'Dynamic Programming', 'Trie', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.52537557573931",
   "difficulty": "Hard",
   "frontendQuestionId": 793,
   "isFavor": false,
   "paidOnly": false,
   "title": "Preimage Size of Factorial Zeroes Function",
   "titleSlug": "preimage-size-of-factorial-zeroes-function",
   "topicTags": "['Math', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.60564999226332",
   "difficulty": "Medium",
   "frontendQuestionId": 794,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Tic-Tac-Toe State",
   "titleSlug": "valid-tic-tac-toe-state",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.63222710970682",
   "difficulty": "Medium",
   "frontendQuestionId": 795,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Subarrays with Bounded Maximum",
   "titleSlug": "number-of-subarrays-with-bounded-maximum",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.68065043321861",
   "difficulty": "Easy",
   "frontendQuestionId": 796,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rotate String",
   "titleSlug": "rotate-string",
   "topicTags": "['String', 'String Matching']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.98922606865055",
   "difficulty": "Medium",
   "frontendQuestionId": 797,
   "isFavor": false,
   "paidOnly": false,
   "title": "All Paths From Source to Target",
   "titleSlug": "all-paths-from-source-to-target",
   "topicTags": "['Backtracking', 'Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.869483288703755",
   "difficulty": "Hard",
   "frontendQuestionId": 798,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Rotation with Highest Score",
   "titleSlug": "smallest-rotation-with-highest-score",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.22285233967178",
   "difficulty": "Medium",
   "frontendQuestionId": 799,
   "isFavor": false,
   "paidOnly": false,
   "title": "Champagne Tower",
   "titleSlug": "champagne-tower",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.7409615820062",
   "difficulty": "Easy",
   "frontendQuestionId": 800,
   "isFavor": false,
   "paidOnly": true,
   "title": "Similar RGB Color",
   "titleSlug": "similar-rgb-color",
   "topicTags": "['Math', 'String', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.62115181507497",
   "difficulty": "Hard",
   "frontendQuestionId": 801,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Swaps To Make Sequences Increasing",
   "titleSlug": "minimum-swaps-to-make-sequences-increasing",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.12969155688613",
   "difficulty": "Medium",
   "frontendQuestionId": 802,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Eventual Safe States",
   "titleSlug": "find-eventual-safe-states",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.37596657117626",
   "difficulty": "Hard",
   "frontendQuestionId": 803,
   "isFavor": false,
   "paidOnly": false,
   "title": "Bricks Falling When Hit",
   "titleSlug": "bricks-falling-when-hit",
   "topicTags": "['Array', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.17053656992641",
   "difficulty": "Easy",
   "frontendQuestionId": 804,
   "isFavor": false,
   "paidOnly": false,
   "title": "Unique Morse Code Words",
   "titleSlug": "unique-morse-code-words",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.884467789436105",
   "difficulty": "Hard",
   "frontendQuestionId": 805,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split Array With Same Average",
   "titleSlug": "split-array-with-same-average",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.359535161345",
   "difficulty": "Easy",
   "frontendQuestionId": 806,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Lines To Write String",
   "titleSlug": "number-of-lines-to-write-string",
   "topicTags": "['Array', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.17387842175373",
   "difficulty": "Medium",
   "frontendQuestionId": 807,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Increase to Keep City Skyline",
   "titleSlug": "max-increase-to-keep-city-skyline",
   "topicTags": "['Array', 'Greedy', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.31486542133044",
   "difficulty": "Medium",
   "frontendQuestionId": 808,
   "isFavor": false,
   "paidOnly": false,
   "title": "Soup Servings",
   "titleSlug": "soup-servings",
   "topicTags": "['Math', 'Dynamic Programming', 'Probability and Statistics']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.31948327104729",
   "difficulty": "Medium",
   "frontendQuestionId": 809,
   "isFavor": false,
   "paidOnly": false,
   "title": "Expressive Words",
   "titleSlug": "expressive-words",
   "topicTags": "['Array', 'Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.36200701329062",
   "difficulty": "Hard",
   "frontendQuestionId": 810,
   "isFavor": false,
   "paidOnly": false,
   "title": "Chalkboard XOR Game",
   "titleSlug": "chalkboard-xor-game",
   "topicTags": "['Array', 'Math', 'Bit Manipulation', 'Brainteaser', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.76082721414656",
   "difficulty": "Medium",
   "frontendQuestionId": 811,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subdomain Visit Count",
   "titleSlug": "subdomain-visit-count",
   "topicTags": "['Array', 'Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.75527611589976",
   "difficulty": "Easy",
   "frontendQuestionId": 812,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Triangle Area",
   "titleSlug": "largest-triangle-area",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.929003887578865",
   "difficulty": "Medium",
   "frontendQuestionId": 813,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Sum of Averages",
   "titleSlug": "largest-sum-of-averages",
   "topicTags": "['Array', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.31982496816119",
   "difficulty": "Medium",
   "frontendQuestionId": 814,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Pruning",
   "titleSlug": "binary-tree-pruning",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.984025355820584",
   "difficulty": "Hard",
   "frontendQuestionId": 815,
   "isFavor": false,
   "paidOnly": false,
   "title": "Bus Routes",
   "titleSlug": "bus-routes",
   "topicTags": "['Array', 'Hash Table', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.771468264304936",
   "difficulty": "Medium",
   "frontendQuestionId": 816,
   "isFavor": false,
   "paidOnly": false,
   "title": "Ambiguous Coordinates",
   "titleSlug": "ambiguous-coordinates",
   "topicTags": "['String', 'Backtracking', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.137057015254335",
   "difficulty": "Medium",
   "frontendQuestionId": 817,
   "isFavor": false,
   "paidOnly": false,
   "title": "Linked List Components",
   "titleSlug": "linked-list-components",
   "topicTags": "['Array', 'Hash Table', 'Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.005831866197184",
   "difficulty": "Hard",
   "frontendQuestionId": 818,
   "isFavor": false,
   "paidOnly": false,
   "title": "Race Car",
   "titleSlug": "race-car",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.506396445890815",
   "difficulty": "Easy",
   "frontendQuestionId": 819,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Common Word",
   "titleSlug": "most-common-word",
   "topicTags": "['Array', 'Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.52004032817961",
   "difficulty": "Medium",
   "frontendQuestionId": 820,
   "isFavor": false,
   "paidOnly": false,
   "title": "Short Encoding of Words",
   "titleSlug": "short-encoding-of-words",
   "topicTags": "['Array', 'Hash Table', 'String', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.06469504108031",
   "difficulty": "Easy",
   "frontendQuestionId": 821,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Distance to a Character",
   "titleSlug": "shortest-distance-to-a-character",
   "topicTags": "['Array', 'Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.03421041148492",
   "difficulty": "Medium",
   "frontendQuestionId": 822,
   "isFavor": false,
   "paidOnly": false,
   "title": "Card Flipping Game",
   "titleSlug": "card-flipping-game",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.90887697738267",
   "difficulty": "Medium",
   "frontendQuestionId": 823,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Trees With Factors",
   "titleSlug": "binary-trees-with-factors",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.20762417647614",
   "difficulty": "Easy",
   "frontendQuestionId": 824,
   "isFavor": false,
   "paidOnly": false,
   "title": "Goat Latin",
   "titleSlug": "goat-latin",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.84988321891146",
   "difficulty": "Medium",
   "frontendQuestionId": 825,
   "isFavor": false,
   "paidOnly": false,
   "title": "Friends Of Appropriate Ages",
   "titleSlug": "friends-of-appropriate-ages",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.855732377729375",
   "difficulty": "Medium",
   "frontendQuestionId": 826,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Profit Assigning Work",
   "titleSlug": "most-profit-assigning-work",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.35678249494747",
   "difficulty": "Hard",
   "frontendQuestionId": 827,
   "isFavor": false,
   "paidOnly": false,
   "title": "Making A Large Island",
   "titleSlug": "making-a-large-island",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.72776664742436",
   "difficulty": "Hard",
   "frontendQuestionId": 828,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Unique Characters of All Substrings of a Given String",
   "titleSlug": "count-unique-characters-of-all-substrings-of-a-given-string",
   "topicTags": "['Hash Table', 'String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.93235194965727",
   "difficulty": "Hard",
   "frontendQuestionId": 829,
   "isFavor": false,
   "paidOnly": false,
   "title": "Consecutive Numbers Sum",
   "titleSlug": "consecutive-numbers-sum",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.78749361235556",
   "difficulty": "Easy",
   "frontendQuestionId": 830,
   "isFavor": false,
   "paidOnly": false,
   "title": "Positions of Large Groups",
   "titleSlug": "positions-of-large-groups",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.254330190747645",
   "difficulty": "Medium",
   "frontendQuestionId": 831,
   "isFavor": false,
   "paidOnly": false,
   "title": "Masking Personal Information",
   "titleSlug": "masking-personal-information",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.8247895944912",
   "difficulty": "Easy",
   "frontendQuestionId": 832,
   "isFavor": false,
   "paidOnly": false,
   "title": "Flipping an Image",
   "titleSlug": "flipping-an-image",
   "topicTags": "['Array', 'Two Pointers', 'Bit Manipulation', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.43118741801842",
   "difficulty": "Medium",
   "frontendQuestionId": 833,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find And Replace in String",
   "titleSlug": "find-and-replace-in-string",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.266357020364",
   "difficulty": "Hard",
   "frontendQuestionId": 834,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Distances in Tree",
   "titleSlug": "sum-of-distances-in-tree",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.70349898449752",
   "difficulty": "Medium",
   "frontendQuestionId": 835,
   "isFavor": false,
   "paidOnly": false,
   "title": "Image Overlap",
   "titleSlug": "image-overlap",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.58019713261649",
   "difficulty": "Easy",
   "frontendQuestionId": 836,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rectangle Overlap",
   "titleSlug": "rectangle-overlap",
   "topicTags": "['Math', 'Geometry']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.79884641509014",
   "difficulty": "Medium",
   "frontendQuestionId": 837,
   "isFavor": false,
   "paidOnly": false,
   "title": "New 21 Game",
   "titleSlug": "new-21-game",
   "topicTags": "['Math', 'Dynamic Programming', 'Sliding Window', 'Probability and Statistics']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.34523527398162",
   "difficulty": "Medium",
   "frontendQuestionId": 838,
   "isFavor": false,
   "paidOnly": false,
   "title": "Push Dominoes",
   "titleSlug": "push-dominoes",
   "topicTags": "['Two Pointers', 'String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.22774834521764",
   "difficulty": "Hard",
   "frontendQuestionId": 839,
   "isFavor": false,
   "paidOnly": false,
   "title": "Similar String Groups",
   "titleSlug": "similar-string-groups",
   "topicTags": "['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.52799840099307",
   "difficulty": "Medium",
   "frontendQuestionId": 840,
   "isFavor": false,
   "paidOnly": false,
   "title": "Magic Squares In Grid",
   "titleSlug": "magic-squares-in-grid",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.38202544893322",
   "difficulty": "Medium",
   "frontendQuestionId": 841,
   "isFavor": false,
   "paidOnly": false,
   "title": "Keys and Rooms",
   "titleSlug": "keys-and-rooms",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.560793405461105",
   "difficulty": "Medium",
   "frontendQuestionId": 842,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split Array into Fibonacci Sequence",
   "titleSlug": "split-array-into-fibonacci-sequence",
   "topicTags": "['String', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.90718606946445",
   "difficulty": "Hard",
   "frontendQuestionId": 843,
   "isFavor": false,
   "paidOnly": false,
   "title": "Guess the Word",
   "titleSlug": "guess-the-word",
   "topicTags": "['Array', 'Math', 'String', 'Interactive', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.42981240576683",
   "difficulty": "Easy",
   "frontendQuestionId": 844,
   "isFavor": false,
   "paidOnly": false,
   "title": "Backspace String Compare",
   "titleSlug": "backspace-string-compare",
   "topicTags": "['Two Pointers', 'String', 'Stack', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.95551182865376",
   "difficulty": "Medium",
   "frontendQuestionId": 845,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Mountain in Array",
   "titleSlug": "longest-mountain-in-array",
   "topicTags": "['Array', 'Two Pointers', 'Dynamic Programming', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.911092380363506",
   "difficulty": "Medium",
   "frontendQuestionId": 846,
   "isFavor": false,
   "paidOnly": false,
   "title": "Hand of Straights",
   "titleSlug": "hand-of-straights",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.35199799881302",
   "difficulty": "Hard",
   "frontendQuestionId": 847,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Path Visiting All Nodes",
   "titleSlug": "shortest-path-visiting-all-nodes",
   "topicTags": "['Dynamic Programming', 'Bit Manipulation', 'Breadth-First Search', 'Graph', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.379819812777264",
   "difficulty": "Medium",
   "frontendQuestionId": 848,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shifting Letters",
   "titleSlug": "shifting-letters",
   "topicTags": "['Array', 'String', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.79006051152513",
   "difficulty": "Medium",
   "frontendQuestionId": 849,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Distance to Closest Person",
   "titleSlug": "maximize-distance-to-closest-person",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.45886329781139",
   "difficulty": "Hard",
   "frontendQuestionId": 850,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rectangle Area II",
   "titleSlug": "rectangle-area-ii",
   "topicTags": "['Array', 'Segment Tree', 'Line Sweep', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.055589291779455",
   "difficulty": "Medium",
   "frontendQuestionId": 851,
   "isFavor": false,
   "paidOnly": false,
   "title": "Loud and Rich",
   "titleSlug": "loud-and-rich",
   "topicTags": "['Array', 'Depth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.70708050032583",
   "difficulty": "Medium",
   "frontendQuestionId": 852,
   "isFavor": false,
   "paidOnly": false,
   "title": "Peak Index in a Mountain Array",
   "titleSlug": "peak-index-in-a-mountain-array",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.124879572895075",
   "difficulty": "Medium",
   "frontendQuestionId": 853,
   "isFavor": false,
   "paidOnly": false,
   "title": "Car Fleet",
   "titleSlug": "car-fleet",
   "topicTags": "['Array', 'Stack', 'Sorting', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.015461177948495",
   "difficulty": "Hard",
   "frontendQuestionId": 854,
   "isFavor": false,
   "paidOnly": false,
   "title": "K-Similar Strings",
   "titleSlug": "k-similar-strings",
   "topicTags": "['String', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.628067967275015",
   "difficulty": "Medium",
   "frontendQuestionId": 855,
   "isFavor": false,
   "paidOnly": false,
   "title": "Exam Room",
   "titleSlug": "exam-room",
   "topicTags": "['Design', 'Heap (Priority Queue)', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.756105197244835",
   "difficulty": "Medium",
   "frontendQuestionId": 856,
   "isFavor": false,
   "paidOnly": false,
   "title": "Score of Parentheses",
   "titleSlug": "score-of-parentheses",
   "topicTags": "['String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.41818709977829",
   "difficulty": "Hard",
   "frontendQuestionId": 857,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Hire K Workers",
   "titleSlug": "minimum-cost-to-hire-k-workers",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.02582758182349",
   "difficulty": "Medium",
   "frontendQuestionId": 858,
   "isFavor": false,
   "paidOnly": false,
   "title": "Mirror Reflection",
   "titleSlug": "mirror-reflection",
   "topicTags": "['Math', 'Geometry', 'Number Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.579114986999734",
   "difficulty": "Easy",
   "frontendQuestionId": 859,
   "isFavor": false,
   "paidOnly": false,
   "title": "Buddy Strings",
   "titleSlug": "buddy-strings",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.33957143878362",
   "difficulty": "Easy",
   "frontendQuestionId": 860,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lemonade Change",
   "titleSlug": "lemonade-change",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.22254090749644",
   "difficulty": "Medium",
   "frontendQuestionId": 861,
   "isFavor": false,
   "paidOnly": false,
   "title": "Score After Flipping Matrix",
   "titleSlug": "score-after-flipping-matrix",
   "topicTags": "['Array', 'Greedy', 'Bit Manipulation', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.1805679829837",
   "difficulty": "Hard",
   "frontendQuestionId": 862,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Subarray with Sum at Least K",
   "titleSlug": "shortest-subarray-with-sum-at-least-k",
   "topicTags": "['Array', 'Binary Search', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Prefix Sum', 'Monotonic Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.01983265308063",
   "difficulty": "Medium",
   "frontendQuestionId": 863,
   "isFavor": false,
   "paidOnly": false,
   "title": "All Nodes Distance K in Binary Tree",
   "titleSlug": "all-nodes-distance-k-in-binary-tree",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.623476842875675",
   "difficulty": "Hard",
   "frontendQuestionId": 864,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Path to Get All Keys",
   "titleSlug": "shortest-path-to-get-all-keys",
   "topicTags": "['Array', 'Bit Manipulation', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.30797443386395",
   "difficulty": "Medium",
   "frontendQuestionId": 865,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Subtree with all the Deepest Nodes",
   "titleSlug": "smallest-subtree-with-all-the-deepest-nodes",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.638408211521924",
   "difficulty": "Medium",
   "frontendQuestionId": 866,
   "isFavor": false,
   "paidOnly": false,
   "title": "Prime Palindrome",
   "titleSlug": "prime-palindrome",
   "topicTags": "['Math', 'Number Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.89733137090121",
   "difficulty": "Easy",
   "frontendQuestionId": 867,
   "isFavor": false,
   "paidOnly": false,
   "title": "Transpose Matrix",
   "titleSlug": "transpose-matrix",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.2286083217715",
   "difficulty": "Easy",
   "frontendQuestionId": 868,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Gap",
   "titleSlug": "binary-gap",
   "topicTags": "['Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.162760890548604",
   "difficulty": "Medium",
   "frontendQuestionId": 869,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reordered Power of 2",
   "titleSlug": "reordered-power-of-2",
   "topicTags": "['Hash Table', 'Math', 'Sorting', 'Counting', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.19371196018832",
   "difficulty": "Medium",
   "frontendQuestionId": 870,
   "isFavor": false,
   "paidOnly": false,
   "title": "Advantage Shuffle",
   "titleSlug": "advantage-shuffle",
   "topicTags": "['Array', 'Two Pointers', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.44182693218124",
   "difficulty": "Hard",
   "frontendQuestionId": 871,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Refueling Stops",
   "titleSlug": "minimum-number-of-refueling-stops",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.06251339572765",
   "difficulty": "Easy",
   "frontendQuestionId": 872,
   "isFavor": false,
   "paidOnly": false,
   "title": "Leaf-Similar Trees",
   "titleSlug": "leaf-similar-trees",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.64736291228429",
   "difficulty": "Medium",
   "frontendQuestionId": 873,
   "isFavor": false,
   "paidOnly": false,
   "title": "Length of Longest Fibonacci Subsequence",
   "titleSlug": "length-of-longest-fibonacci-subsequence",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.13973644581033",
   "difficulty": "Medium",
   "frontendQuestionId": 874,
   "isFavor": false,
   "paidOnly": false,
   "title": "Walking Robot Simulation",
   "titleSlug": "walking-robot-simulation",
   "topicTags": "['Array', 'Hash Table', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.94998162910026",
   "difficulty": "Medium",
   "frontendQuestionId": 875,
   "isFavor": false,
   "paidOnly": false,
   "title": "Koko Eating Bananas",
   "titleSlug": "koko-eating-bananas",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.26781642635602",
   "difficulty": "Easy",
   "frontendQuestionId": 876,
   "isFavor": false,
   "paidOnly": false,
   "title": "Middle of the Linked List",
   "titleSlug": "middle-of-the-linked-list",
   "topicTags": "['Linked List', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "71.4737580805442",
   "difficulty": "Medium",
   "frontendQuestionId": 877,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stone Game",
   "titleSlug": "stone-game",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.69469242006168",
   "difficulty": "Hard",
   "frontendQuestionId": 878,
   "isFavor": false,
   "paidOnly": false,
   "title": "Nth Magical Number",
   "titleSlug": "nth-magical-number",
   "topicTags": "['Math', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.01548283454971",
   "difficulty": "Hard",
   "frontendQuestionId": 879,
   "isFavor": false,
   "paidOnly": false,
   "title": "Profitable Schemes",
   "titleSlug": "profitable-schemes",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.599790252885825",
   "difficulty": "Medium",
   "frontendQuestionId": 880,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decoded String at Index",
   "titleSlug": "decoded-string-at-index",
   "topicTags": "['String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.026964913388746",
   "difficulty": "Medium",
   "frontendQuestionId": 881,
   "isFavor": false,
   "paidOnly": false,
   "title": "Boats to Save People",
   "titleSlug": "boats-to-save-people",
   "topicTags": "['Array', 'Two Pointers', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.702546333089614",
   "difficulty": "Hard",
   "frontendQuestionId": 882,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reachable Nodes In Subdivided Graph",
   "titleSlug": "reachable-nodes-in-subdivided-graph",
   "topicTags": "['Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.86464672124522",
   "difficulty": "Easy",
   "frontendQuestionId": 883,
   "isFavor": false,
   "paidOnly": false,
   "title": "Projection Area of 3D Shapes",
   "titleSlug": "projection-area-of-3d-shapes",
   "topicTags": "['Array', 'Math', 'Geometry', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.29156863077002",
   "difficulty": "Easy",
   "frontendQuestionId": 884,
   "isFavor": false,
   "paidOnly": false,
   "title": "Uncommon Words from Two Sentences",
   "titleSlug": "uncommon-words-from-two-sentences",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.46413225846054",
   "difficulty": "Medium",
   "frontendQuestionId": 885,
   "isFavor": false,
   "paidOnly": false,
   "title": "Spiral Matrix III",
   "titleSlug": "spiral-matrix-iii",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.27268569116453",
   "difficulty": "Medium",
   "frontendQuestionId": 886,
   "isFavor": false,
   "paidOnly": false,
   "title": "Possible Bipartition",
   "titleSlug": "possible-bipartition",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.491824462684473",
   "difficulty": "Hard",
   "frontendQuestionId": 887,
   "isFavor": false,
   "paidOnly": false,
   "title": "Super Egg Drop",
   "titleSlug": "super-egg-drop",
   "topicTags": "['Math', 'Binary Search', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.00751549246253",
   "difficulty": "Easy",
   "frontendQuestionId": 888,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fair Candy Swap",
   "titleSlug": "fair-candy-swap",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.94737511906736",
   "difficulty": "Medium",
   "frontendQuestionId": 889,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct Binary Tree from Preorder and Postorder Traversal",
   "titleSlug": "construct-binary-tree-from-preorder-and-postorder-traversal",
   "topicTags": "['Array', 'Hash Table', 'Divide and Conquer', 'Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.81028163987398",
   "difficulty": "Medium",
   "frontendQuestionId": 890,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find and Replace Pattern",
   "titleSlug": "find-and-replace-pattern",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.699791340636416",
   "difficulty": "Hard",
   "frontendQuestionId": 891,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Subsequence Widths",
   "titleSlug": "sum-of-subsequence-widths",
   "topicTags": "['Array', 'Math', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.6980778246601",
   "difficulty": "Easy",
   "frontendQuestionId": 892,
   "isFavor": false,
   "paidOnly": false,
   "title": "Surface Area of 3D Shapes",
   "titleSlug": "surface-area-of-3d-shapes",
   "topicTags": "['Array', 'Math', 'Geometry', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.6229926076982",
   "difficulty": "Medium",
   "frontendQuestionId": 893,
   "isFavor": false,
   "paidOnly": false,
   "title": "Groups of Special-Equivalent Strings",
   "titleSlug": "groups-of-special-equivalent-strings",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.7064281423136",
   "difficulty": "Medium",
   "frontendQuestionId": 894,
   "isFavor": false,
   "paidOnly": false,
   "title": "All Possible Full Binary Trees",
   "titleSlug": "all-possible-full-binary-trees",
   "topicTags": "['Dynamic Programming', 'Tree', 'Recursion', 'Memoization', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.74211325905274",
   "difficulty": "Hard",
   "frontendQuestionId": 895,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Frequency Stack",
   "titleSlug": "maximum-frequency-stack",
   "topicTags": "['Hash Table', 'Stack', 'Design', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.570427860058295",
   "difficulty": "Easy",
   "frontendQuestionId": 896,
   "isFavor": false,
   "paidOnly": false,
   "title": "Monotonic Array",
   "titleSlug": "monotonic-array",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.578632489489",
   "difficulty": "Easy",
   "frontendQuestionId": 897,
   "isFavor": false,
   "paidOnly": false,
   "title": "Increasing Order Search Tree",
   "titleSlug": "increasing-order-search-tree",
   "topicTags": "['Stack', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.42708663839934",
   "difficulty": "Medium",
   "frontendQuestionId": 898,
   "isFavor": false,
   "paidOnly": false,
   "title": "Bitwise ORs of Subarrays",
   "titleSlug": "bitwise-ors-of-subarrays",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.12531231981549",
   "difficulty": "Hard",
   "frontendQuestionId": 899,
   "isFavor": false,
   "paidOnly": false,
   "title": "Orderly Queue",
   "titleSlug": "orderly-queue",
   "topicTags": "['Math', 'String', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.76124333658683",
   "difficulty": "Medium",
   "frontendQuestionId": 900,
   "isFavor": false,
   "paidOnly": false,
   "title": "RLE Iterator",
   "titleSlug": "rle-iterator",
   "topicTags": "['Array', 'Design', 'Counting', 'Iterator']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.33226799483745",
   "difficulty": "Medium",
   "frontendQuestionId": 901,
   "isFavor": false,
   "paidOnly": false,
   "title": "Online Stock Span",
   "titleSlug": "online-stock-span",
   "topicTags": "['Stack', 'Design', 'Monotonic Stack', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.157941874524205",
   "difficulty": "Hard",
   "frontendQuestionId": 902,
   "isFavor": false,
   "paidOnly": false,
   "title": "Numbers At Most N Given Digit Set",
   "titleSlug": "numbers-at-most-n-given-digit-set",
   "topicTags": "['Array', 'Math', 'String', 'Binary Search', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.76083335951985",
   "difficulty": "Hard",
   "frontendQuestionId": 903,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Permutations for DI Sequence",
   "titleSlug": "valid-permutations-for-di-sequence",
   "topicTags": "['String', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.80703194914707",
   "difficulty": "Medium",
   "frontendQuestionId": 904,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fruit Into Baskets",
   "titleSlug": "fruit-into-baskets",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.27082593007681",
   "difficulty": "Easy",
   "frontendQuestionId": 905,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort Array By Parity",
   "titleSlug": "sort-array-by-parity",
   "topicTags": "['Array', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.17379343340709",
   "difficulty": "Hard",
   "frontendQuestionId": 906,
   "isFavor": false,
   "paidOnly": false,
   "title": "Super Palindromes",
   "titleSlug": "super-palindromes",
   "topicTags": "['Math', 'String', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.41173168485944",
   "difficulty": "Medium",
   "frontendQuestionId": 907,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Subarray Minimums",
   "titleSlug": "sum-of-subarray-minimums",
   "topicTags": "['Array', 'Dynamic Programming', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.58882080079792",
   "difficulty": "Easy",
   "frontendQuestionId": 908,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Range I",
   "titleSlug": "smallest-range-i",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.07756756265562",
   "difficulty": "Medium",
   "frontendQuestionId": 909,
   "isFavor": false,
   "paidOnly": false,
   "title": "Snakes and Ladders",
   "titleSlug": "snakes-and-ladders",
   "topicTags": "['Array', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.98993370979622",
   "difficulty": "Medium",
   "frontendQuestionId": 910,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Range II",
   "titleSlug": "smallest-range-ii",
   "topicTags": "['Array', 'Math', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.48118313013187",
   "difficulty": "Medium",
   "frontendQuestionId": 911,
   "isFavor": false,
   "paidOnly": false,
   "title": "Online Election",
   "titleSlug": "online-election",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Design']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.93232572722968",
   "difficulty": "Medium",
   "frontendQuestionId": 912,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort an Array",
   "titleSlug": "sort-an-array",
   "topicTags": "['Array', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Merge Sort', 'Bucket Sort', 'Radix Sort', 'Counting Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.98496467604613",
   "difficulty": "Hard",
   "frontendQuestionId": 913,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cat and Mouse",
   "titleSlug": "cat-and-mouse",
   "topicTags": "['Math', 'Dynamic Programming', 'Graph', 'Topological Sort', 'Memoization', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.82988001063115",
   "difficulty": "Easy",
   "frontendQuestionId": 914,
   "isFavor": false,
   "paidOnly": false,
   "title": "X of a Kind in a Deck of Cards",
   "titleSlug": "x-of-a-kind-in-a-deck-of-cards",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Counting', 'Number Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.949954111105114",
   "difficulty": "Medium",
   "frontendQuestionId": 915,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition Array into Disjoint Intervals",
   "titleSlug": "partition-array-into-disjoint-intervals",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.6470290616781",
   "difficulty": "Medium",
   "frontendQuestionId": 916,
   "isFavor": false,
   "paidOnly": false,
   "title": "Word Subsets",
   "titleSlug": "word-subsets",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.54752821171842",
   "difficulty": "Easy",
   "frontendQuestionId": 917,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Only Letters",
   "titleSlug": "reverse-only-letters",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.12179479798736",
   "difficulty": "Medium",
   "frontendQuestionId": 918,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum Circular Subarray",
   "titleSlug": "maximum-sum-circular-subarray",
   "topicTags": "['Array', 'Divide and Conquer', 'Dynamic Programming', 'Queue', 'Monotonic Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.28523431363993",
   "difficulty": "Medium",
   "frontendQuestionId": 919,
   "isFavor": false,
   "paidOnly": false,
   "title": "Complete Binary Tree Inserter",
   "titleSlug": "complete-binary-tree-inserter",
   "topicTags": "['Tree', 'Breadth-First Search', 'Design', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.96689332835652",
   "difficulty": "Hard",
   "frontendQuestionId": 920,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Music Playlists",
   "titleSlug": "number-of-music-playlists",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.68292983521783",
   "difficulty": "Medium",
   "frontendQuestionId": 921,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Add to Make Parentheses Valid",
   "titleSlug": "minimum-add-to-make-parentheses-valid",
   "topicTags": "['String', 'Stack', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.95307078945766",
   "difficulty": "Easy",
   "frontendQuestionId": 922,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort Array By Parity II",
   "titleSlug": "sort-array-by-parity-ii",
   "topicTags": "['Array', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "45.7215427105938",
   "difficulty": "Medium",
   "frontendQuestionId": 923,
   "isFavor": false,
   "paidOnly": false,
   "title": "3Sum With Multiplicity",
   "titleSlug": "3sum-with-multiplicity",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Sorting', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.224148204322624",
   "difficulty": "Hard",
   "frontendQuestionId": 924,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize Malware Spread",
   "titleSlug": "minimize-malware-spread",
   "topicTags": "['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.437046019095156",
   "difficulty": "Easy",
   "frontendQuestionId": 925,
   "isFavor": false,
   "paidOnly": false,
   "title": "Long Pressed Name",
   "titleSlug": "long-pressed-name",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.5596274794388",
   "difficulty": "Medium",
   "frontendQuestionId": 926,
   "isFavor": false,
   "paidOnly": false,
   "title": "Flip String to Monotone Increasing",
   "titleSlug": "flip-string-to-monotone-increasing",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.590730908549595",
   "difficulty": "Hard",
   "frontendQuestionId": 927,
   "isFavor": false,
   "paidOnly": false,
   "title": "Three Equal Parts",
   "titleSlug": "three-equal-parts",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.44274315656953",
   "difficulty": "Hard",
   "frontendQuestionId": 928,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize Malware Spread II",
   "titleSlug": "minimize-malware-spread-ii",
   "topicTags": "['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.5014611116593",
   "difficulty": "Easy",
   "frontendQuestionId": 929,
   "isFavor": false,
   "paidOnly": false,
   "title": "Unique Email Addresses",
   "titleSlug": "unique-email-addresses",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.35279189734217",
   "difficulty": "Medium",
   "frontendQuestionId": 930,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Subarrays With Sum",
   "titleSlug": "binary-subarrays-with-sum",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.81258713357505",
   "difficulty": "Medium",
   "frontendQuestionId": 931,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Falling Path Sum",
   "titleSlug": "minimum-falling-path-sum",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.82038834951456",
   "difficulty": "Medium",
   "frontendQuestionId": 932,
   "isFavor": false,
   "paidOnly": false,
   "title": "Beautiful Array",
   "titleSlug": "beautiful-array",
   "topicTags": "['Array', 'Math', 'Divide and Conquer']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.28447230368623",
   "difficulty": "Easy",
   "frontendQuestionId": 933,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Recent Calls",
   "titleSlug": "number-of-recent-calls",
   "topicTags": "['Design', 'Queue', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.40125422614345",
   "difficulty": "Medium",
   "frontendQuestionId": 934,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Bridge",
   "titleSlug": "shortest-bridge",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.99821040563056",
   "difficulty": "Medium",
   "frontendQuestionId": 935,
   "isFavor": false,
   "paidOnly": false,
   "title": "Knight Dialer",
   "titleSlug": "knight-dialer",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.87442392812649",
   "difficulty": "Hard",
   "frontendQuestionId": 936,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stamping The Sequence",
   "titleSlug": "stamping-the-sequence",
   "topicTags": "['String', 'Stack', 'Greedy', 'Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.70681096324507",
   "difficulty": "Medium",
   "frontendQuestionId": 937,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reorder Data in Log Files",
   "titleSlug": "reorder-data-in-log-files",
   "topicTags": "['Array', 'String', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.38042149433699",
   "difficulty": "Easy",
   "frontendQuestionId": 938,
   "isFavor": false,
   "paidOnly": false,
   "title": "Range Sum of BST",
   "titleSlug": "range-sum-of-bst",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "54.86899047657063",
   "difficulty": "Medium",
   "frontendQuestionId": 939,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Area Rectangle",
   "titleSlug": "minimum-area-rectangle",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Geometry', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.43729788692286",
   "difficulty": "Hard",
   "frontendQuestionId": 940,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distinct Subsequences II",
   "titleSlug": "distinct-subsequences-ii",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "33.91260996736589",
   "difficulty": "Easy",
   "frontendQuestionId": 941,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Mountain Array",
   "titleSlug": "valid-mountain-array",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.79284918571959",
   "difficulty": "Easy",
   "frontendQuestionId": 942,
   "isFavor": false,
   "paidOnly": false,
   "title": "DI String Match",
   "titleSlug": "di-string-match",
   "topicTags": "['Array', 'Two Pointers', 'String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.16177248309071",
   "difficulty": "Hard",
   "frontendQuestionId": 943,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Shortest Superstring",
   "titleSlug": "find-the-shortest-superstring",
   "topicTags": "['Array', 'String', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.71573721321634",
   "difficulty": "Easy",
   "frontendQuestionId": 944,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Columns to Make Sorted",
   "titleSlug": "delete-columns-to-make-sorted",
   "topicTags": "['Array', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.265955933264415",
   "difficulty": "Medium",
   "frontendQuestionId": 945,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Increment to Make Array Unique",
   "titleSlug": "minimum-increment-to-make-array-unique",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.60058238492417",
   "difficulty": "Medium",
   "frontendQuestionId": 946,
   "isFavor": false,
   "paidOnly": false,
   "title": "Validate Stack Sequences",
   "titleSlug": "validate-stack-sequences",
   "topicTags": "['Array', 'Stack', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.10919680412314",
   "difficulty": "Medium",
   "frontendQuestionId": 947,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Stones Removed with Same Row or Column",
   "titleSlug": "most-stones-removed-with-same-row-or-column",
   "topicTags": "['Hash Table', 'Depth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.093551943681135",
   "difficulty": "Medium",
   "frontendQuestionId": 948,
   "isFavor": false,
   "paidOnly": false,
   "title": "Bag of Tokens",
   "titleSlug": "bag-of-tokens",
   "topicTags": "['Array', 'Two Pointers', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.463833265222725",
   "difficulty": "Medium",
   "frontendQuestionId": 949,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Time for Given Digits",
   "titleSlug": "largest-time-for-given-digits",
   "topicTags": "['Array', 'String', 'Backtracking', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.17545513324868",
   "difficulty": "Medium",
   "frontendQuestionId": 950,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reveal Cards In Increasing Order",
   "titleSlug": "reveal-cards-in-increasing-order",
   "topicTags": "['Array', 'Queue', 'Sorting', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.70901722613628",
   "difficulty": "Medium",
   "frontendQuestionId": 951,
   "isFavor": false,
   "paidOnly": false,
   "title": "Flip Equivalent Binary Trees",
   "titleSlug": "flip-equivalent-binary-trees",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.01365671537047",
   "difficulty": "Hard",
   "frontendQuestionId": 952,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Component Size by Common Factor",
   "titleSlug": "largest-component-size-by-common-factor",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Union Find', 'Number Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.48548672422747",
   "difficulty": "Easy",
   "frontendQuestionId": 953,
   "isFavor": false,
   "paidOnly": false,
   "title": "Verifying an Alien Dictionary",
   "titleSlug": "verifying-an-alien-dictionary",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.32984361923828",
   "difficulty": "Medium",
   "frontendQuestionId": 954,
   "isFavor": false,
   "paidOnly": false,
   "title": "Array of Doubled Pairs",
   "titleSlug": "array-of-doubled-pairs",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.47470879208553",
   "difficulty": "Medium",
   "frontendQuestionId": 955,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Columns to Make Sorted II",
   "titleSlug": "delete-columns-to-make-sorted-ii",
   "topicTags": "['Array', 'String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.91275085758053",
   "difficulty": "Hard",
   "frontendQuestionId": 956,
   "isFavor": false,
   "paidOnly": false,
   "title": "Tallest Billboard",
   "titleSlug": "tallest-billboard",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.9429621877923",
   "difficulty": "Medium",
   "frontendQuestionId": 957,
   "isFavor": false,
   "paidOnly": false,
   "title": "Prison Cells After N Days",
   "titleSlug": "prison-cells-after-n-days",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.13539757470946",
   "difficulty": "Medium",
   "frontendQuestionId": 958,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check Completeness of a Binary Tree",
   "titleSlug": "check-completeness-of-a-binary-tree",
   "topicTags": "['Tree', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.64480820860643",
   "difficulty": "Medium",
   "frontendQuestionId": 959,
   "isFavor": false,
   "paidOnly": false,
   "title": "Regions Cut By Slashes",
   "titleSlug": "regions-cut-by-slashes",
   "topicTags": "['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.39348903043171",
   "difficulty": "Hard",
   "frontendQuestionId": 960,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Columns to Make Sorted III",
   "titleSlug": "delete-columns-to-make-sorted-iii",
   "topicTags": "['Array', 'String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.32879206691304",
   "difficulty": "Easy",
   "frontendQuestionId": 961,
   "isFavor": false,
   "paidOnly": false,
   "title": "N-Repeated Element in Size 2N Array",
   "titleSlug": "n-repeated-element-in-size-2n-array",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.6321164455922",
   "difficulty": "Medium",
   "frontendQuestionId": 962,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Width Ramp",
   "titleSlug": "maximum-width-ramp",
   "topicTags": "['Array', 'Two Pointers', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.424733847126575",
   "difficulty": "Medium",
   "frontendQuestionId": 963,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Area Rectangle II",
   "titleSlug": "minimum-area-rectangle-ii",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.43354905070073",
   "difficulty": "Hard",
   "frontendQuestionId": 964,
   "isFavor": false,
   "paidOnly": false,
   "title": "Least Operators to Express Number",
   "titleSlug": "least-operators-to-express-number",
   "topicTags": "['Math', 'Dynamic Programming', 'Memoization']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.90097923275339",
   "difficulty": "Easy",
   "frontendQuestionId": 965,
   "isFavor": false,
   "paidOnly": false,
   "title": "Univalued Binary Tree",
   "titleSlug": "univalued-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.50235170555734",
   "difficulty": "Medium",
   "frontendQuestionId": 966,
   "isFavor": false,
   "paidOnly": false,
   "title": "Vowel Spellchecker",
   "titleSlug": "vowel-spellchecker",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.60490268228521",
   "difficulty": "Medium",
   "frontendQuestionId": 967,
   "isFavor": false,
   "paidOnly": false,
   "title": "Numbers With Same Consecutive Differences",
   "titleSlug": "numbers-with-same-consecutive-differences",
   "topicTags": "['Backtracking', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.024390823090094",
   "difficulty": "Hard",
   "frontendQuestionId": 968,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Cameras",
   "titleSlug": "binary-tree-cameras",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.0446864028197",
   "difficulty": "Medium",
   "frontendQuestionId": 969,
   "isFavor": false,
   "paidOnly": false,
   "title": "Pancake Sorting",
   "titleSlug": "pancake-sorting",
   "topicTags": "['Array', 'Two Pointers', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.91787161074378",
   "difficulty": "Medium",
   "frontendQuestionId": 970,
   "isFavor": false,
   "paidOnly": false,
   "title": "Powerful Integers",
   "titleSlug": "powerful-integers",
   "topicTags": "['Hash Table', 'Math', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.92912146590973",
   "difficulty": "Medium",
   "frontendQuestionId": 971,
   "isFavor": false,
   "paidOnly": false,
   "title": "Flip Binary Tree To Match Preorder Traversal",
   "titleSlug": "flip-binary-tree-to-match-preorder-traversal",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.47035655058043",
   "difficulty": "Hard",
   "frontendQuestionId": 972,
   "isFavor": false,
   "paidOnly": false,
   "title": "Equal Rational Numbers",
   "titleSlug": "equal-rational-numbers",
   "topicTags": "['Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.68111842080934",
   "difficulty": "Medium",
   "frontendQuestionId": 973,
   "isFavor": false,
   "paidOnly": false,
   "title": "K Closest Points to Origin",
   "titleSlug": "k-closest-points-to-origin",
   "topicTags": "['Array', 'Math', 'Divide and Conquer', 'Geometry', 'Sorting', 'Heap (Priority Queue)', 'Quickselect']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "55.55922230569929",
   "difficulty": "Medium",
   "frontendQuestionId": 974,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subarray Sums Divisible by K",
   "titleSlug": "subarray-sums-divisible-by-k",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.62147925497315",
   "difficulty": "Hard",
   "frontendQuestionId": 975,
   "isFavor": false,
   "paidOnly": false,
   "title": "Odd Even Jump",
   "titleSlug": "odd-even-jump",
   "topicTags": "['Array', 'Dynamic Programming', 'Stack', 'Monotonic Stack', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.1253927594543",
   "difficulty": "Easy",
   "frontendQuestionId": 976,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Perimeter Triangle",
   "titleSlug": "largest-perimeter-triangle",
   "topicTags": "['Array', 'Math', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.12936396248637",
   "difficulty": "Easy",
   "frontendQuestionId": 977,
   "isFavor": false,
   "paidOnly": false,
   "title": "Squares of a Sorted Array",
   "titleSlug": "squares-of-a-sorted-array",
   "topicTags": "['Array', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "47.852458348608906",
   "difficulty": "Medium",
   "frontendQuestionId": 978,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Turbulent Subarray",
   "titleSlug": "longest-turbulent-subarray",
   "topicTags": "['Array', 'Dynamic Programming', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.11490992152673",
   "difficulty": "Medium",
   "frontendQuestionId": 979,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distribute Coins in Binary Tree",
   "titleSlug": "distribute-coins-in-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.24329388775875",
   "difficulty": "Hard",
   "frontendQuestionId": 980,
   "isFavor": false,
   "paidOnly": false,
   "title": "Unique Paths III",
   "titleSlug": "unique-paths-iii",
   "topicTags": "['Array', 'Backtracking', 'Bit Manipulation', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.393764434180135",
   "difficulty": "Medium",
   "frontendQuestionId": 981,
   "isFavor": false,
   "paidOnly": false,
   "title": "Time Based Key-Value Store",
   "titleSlug": "time-based-key-value-store",
   "topicTags": "['Hash Table', 'String', 'Binary Search', 'Design']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.12236987818383",
   "difficulty": "Hard",
   "frontendQuestionId": 982,
   "isFavor": false,
   "paidOnly": false,
   "title": "Triples with Bitwise AND Equal To Zero",
   "titleSlug": "triples-with-bitwise-and-equal-to-zero",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.3995038799135",
   "difficulty": "Medium",
   "frontendQuestionId": 983,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost For Tickets",
   "titleSlug": "minimum-cost-for-tickets",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.38709783295452",
   "difficulty": "Medium",
   "frontendQuestionId": 984,
   "isFavor": false,
   "paidOnly": false,
   "title": "String Without AAA or BBB",
   "titleSlug": "string-without-aaa-or-bbb",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.42519611679431",
   "difficulty": "Medium",
   "frontendQuestionId": 985,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Even Numbers After Queries",
   "titleSlug": "sum-of-even-numbers-after-queries",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.52939395174674",
   "difficulty": "Medium",
   "frontendQuestionId": 986,
   "isFavor": false,
   "paidOnly": false,
   "title": "Interval List Intersections",
   "titleSlug": "interval-list-intersections",
   "topicTags": "['Array', 'Two Pointers', 'Line Sweep']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.68134261376449",
   "difficulty": "Hard",
   "frontendQuestionId": 987,
   "isFavor": false,
   "paidOnly": false,
   "title": "Vertical Order Traversal of a Binary Tree",
   "titleSlug": "vertical-order-traversal-of-a-binary-tree",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Sorting', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "60.70967531330589",
   "difficulty": "Medium",
   "frontendQuestionId": 988,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest String Starting From Leaf",
   "titleSlug": "smallest-string-starting-from-leaf",
   "topicTags": "['String', 'Backtracking', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.99370478649624",
   "difficulty": "Easy",
   "frontendQuestionId": 989,
   "isFavor": false,
   "paidOnly": false,
   "title": "Add to Array-Form of Integer",
   "titleSlug": "add-to-array-form-of-integer",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.90506186409628",
   "difficulty": "Medium",
   "frontendQuestionId": 990,
   "isFavor": false,
   "paidOnly": false,
   "title": "Satisfiability of Equality Equations",
   "titleSlug": "satisfiability-of-equality-equations",
   "topicTags": "['Array', 'String', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.00351546805946",
   "difficulty": "Medium",
   "frontendQuestionId": 991,
   "isFavor": false,
   "paidOnly": false,
   "title": "Broken Calculator",
   "titleSlug": "broken-calculator",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.35153188789789",
   "difficulty": "Hard",
   "frontendQuestionId": 992,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subarrays with K Different Integers",
   "titleSlug": "subarrays-with-k-different-integers",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.85490581460494",
   "difficulty": "Easy",
   "frontendQuestionId": 993,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cousins in Binary Tree",
   "titleSlug": "cousins-in-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.16852824480861",
   "difficulty": "Medium",
   "frontendQuestionId": 994,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rotting Oranges",
   "titleSlug": "rotting-oranges",
   "topicTags": "['Array', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.14162413689582",
   "difficulty": "Hard",
   "frontendQuestionId": 995,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of K Consecutive Bit Flips",
   "titleSlug": "minimum-number-of-k-consecutive-bit-flips",
   "topicTags": "['Array', 'Bit Manipulation', 'Queue', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.395917246429875",
   "difficulty": "Hard",
   "frontendQuestionId": 996,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Squareful Arrays",
   "titleSlug": "number-of-squareful-arrays",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.90866713231498",
   "difficulty": "Easy",
   "frontendQuestionId": 997,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Town Judge",
   "titleSlug": "find-the-town-judge",
   "topicTags": "['Array', 'Hash Table', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.92288384240965",
   "difficulty": "Medium",
   "frontendQuestionId": 998,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Binary Tree II",
   "titleSlug": "maximum-binary-tree-ii",
   "topicTags": "['Tree', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.13095774933049",
   "difficulty": "Easy",
   "frontendQuestionId": 999,
   "isFavor": false,
   "paidOnly": false,
   "title": "Available Captures for Rook",
   "titleSlug": "available-captures-for-rook",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.1002133881293",
   "difficulty": "Hard",
   "frontendQuestionId": 1000,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Merge Stones",
   "titleSlug": "minimum-cost-to-merge-stones",
   "topicTags": "['Array', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.80133627461872",
   "difficulty": "Hard",
   "frontendQuestionId": 1001,
   "isFavor": false,
   "paidOnly": false,
   "title": "Grid Illumination",
   "titleSlug": "grid-illumination",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.51012173541616",
   "difficulty": "Easy",
   "frontendQuestionId": 1002,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Common Characters",
   "titleSlug": "find-common-characters",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.955714529041046",
   "difficulty": "Medium",
   "frontendQuestionId": 1003,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If Word Is Valid After Substitutions",
   "titleSlug": "check-if-word-is-valid-after-substitutions",
   "topicTags": "['String', 'Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.47932987301294",
   "difficulty": "Medium",
   "frontendQuestionId": 1004,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Consecutive Ones III",
   "titleSlug": "max-consecutive-ones-iii",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.08906798338961",
   "difficulty": "Easy",
   "frontendQuestionId": 1005,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Sum Of Array After K Negations",
   "titleSlug": "maximize-sum-of-array-after-k-negations",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.86273660769517",
   "difficulty": "Medium",
   "frontendQuestionId": 1006,
   "isFavor": false,
   "paidOnly": false,
   "title": "Clumsy Factorial",
   "titleSlug": "clumsy-factorial",
   "topicTags": "['Math', 'Stack', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.28514095536414",
   "difficulty": "Medium",
   "frontendQuestionId": 1007,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Domino Rotations For Equal Row",
   "titleSlug": "minimum-domino-rotations-for-equal-row",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.05029553311446",
   "difficulty": "Medium",
   "frontendQuestionId": 1008,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct Binary Search Tree from Preorder Traversal",
   "titleSlug": "construct-binary-search-tree-from-preorder-traversal",
   "topicTags": "['Array', 'Stack', 'Tree', 'Binary Search Tree', 'Monotonic Stack', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.749958786505644",
   "difficulty": "Easy",
   "frontendQuestionId": 1009,
   "isFavor": false,
   "paidOnly": false,
   "title": "Complement of Base 10 Integer",
   "titleSlug": "complement-of-base-10-integer",
   "topicTags": "['Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.18496452953998",
   "difficulty": "Medium",
   "frontendQuestionId": 1010,
   "isFavor": false,
   "paidOnly": false,
   "title": "Pairs of Songs With Total Durations Divisible by 60",
   "titleSlug": "pairs-of-songs-with-total-durations-divisible-by-60",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "71.61172284276653",
   "difficulty": "Medium",
   "frontendQuestionId": 1011,
   "isFavor": false,
   "paidOnly": false,
   "title": "Capacity To Ship Packages Within D Days",
   "titleSlug": "capacity-to-ship-packages-within-d-days",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.90261807315014",
   "difficulty": "Hard",
   "frontendQuestionId": 1012,
   "isFavor": false,
   "paidOnly": false,
   "title": "Numbers With Repeated Digits",
   "titleSlug": "numbers-with-repeated-digits",
   "topicTags": "['Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.99001376607014",
   "difficulty": "Easy",
   "frontendQuestionId": 1013,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition Array Into Three Parts With Equal Sum",
   "titleSlug": "partition-array-into-three-parts-with-equal-sum",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.60449121694541",
   "difficulty": "Medium",
   "frontendQuestionId": 1014,
   "isFavor": false,
   "paidOnly": false,
   "title": "Best Sightseeing Pair",
   "titleSlug": "best-sightseeing-pair",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.512538089513846",
   "difficulty": "Medium",
   "frontendQuestionId": 1015,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Integer Divisible by K",
   "titleSlug": "smallest-integer-divisible-by-k",
   "topicTags": "['Hash Table', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.88780401689322",
   "difficulty": "Medium",
   "frontendQuestionId": 1016,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary String With Substrings Representing 1 To N",
   "titleSlug": "binary-string-with-substrings-representing-1-to-n",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.11429882946982",
   "difficulty": "Medium",
   "frontendQuestionId": 1017,
   "isFavor": false,
   "paidOnly": false,
   "title": "Convert to Base -2",
   "titleSlug": "convert-to-base-2",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.903260965622884",
   "difficulty": "Easy",
   "frontendQuestionId": 1018,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Prefix Divisible By 5",
   "titleSlug": "binary-prefix-divisible-by-5",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.985471336481545",
   "difficulty": "Medium",
   "frontendQuestionId": 1019,
   "isFavor": false,
   "paidOnly": false,
   "title": "Next Greater Node In Linked List",
   "titleSlug": "next-greater-node-in-linked-list",
   "topicTags": "['Array', 'Linked List', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.15443243433975",
   "difficulty": "Medium",
   "frontendQuestionId": 1020,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Enclaves",
   "titleSlug": "number-of-enclaves",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.14958201323608",
   "difficulty": "Easy",
   "frontendQuestionId": 1021,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Outermost Parentheses",
   "titleSlug": "remove-outermost-parentheses",
   "topicTags": "['String', 'Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.32069976407445",
   "difficulty": "Easy",
   "frontendQuestionId": 1022,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Root To Leaf Binary Numbers",
   "titleSlug": "sum-of-root-to-leaf-binary-numbers",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.44247385175079",
   "difficulty": "Medium",
   "frontendQuestionId": 1023,
   "isFavor": false,
   "paidOnly": false,
   "title": "Camelcase Matching",
   "titleSlug": "camelcase-matching",
   "topicTags": "['Array', 'Two Pointers', 'String', 'Trie', 'String Matching']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.83946940071188",
   "difficulty": "Medium",
   "frontendQuestionId": 1024,
   "isFavor": false,
   "paidOnly": false,
   "title": "Video Stitching",
   "titleSlug": "video-stitching",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.04297073100051",
   "difficulty": "Easy",
   "frontendQuestionId": 1025,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divisor Game",
   "titleSlug": "divisor-game",
   "topicTags": "['Math', 'Dynamic Programming', 'Brainteaser', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.04519001100198",
   "difficulty": "Medium",
   "frontendQuestionId": 1026,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Difference Between Node and Ancestor",
   "titleSlug": "maximum-difference-between-node-and-ancestor",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.3924595847983",
   "difficulty": "Medium",
   "frontendQuestionId": 1027,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Arithmetic Subsequence",
   "titleSlug": "longest-arithmetic-subsequence",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.26151360086183",
   "difficulty": "Hard",
   "frontendQuestionId": 1028,
   "isFavor": false,
   "paidOnly": false,
   "title": "Recover a Tree From Preorder Traversal",
   "titleSlug": "recover-a-tree-from-preorder-traversal",
   "topicTags": "['String', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.51447810930364",
   "difficulty": "Medium",
   "frontendQuestionId": 1029,
   "isFavor": false,
   "paidOnly": false,
   "title": "Two City Scheduling",
   "titleSlug": "two-city-scheduling",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.46260598090473",
   "difficulty": "Easy",
   "frontendQuestionId": 1030,
   "isFavor": false,
   "paidOnly": false,
   "title": "Matrix Cells in Distance Order",
   "titleSlug": "matrix-cells-in-distance-order",
   "topicTags": "['Array', 'Math', 'Geometry', 'Sorting', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.11836341607382",
   "difficulty": "Medium",
   "frontendQuestionId": 1031,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum of Two Non-Overlapping Subarrays",
   "titleSlug": "maximum-sum-of-two-non-overlapping-subarrays",
   "topicTags": "['Array', 'Dynamic Programming', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.34679259876573",
   "difficulty": "Hard",
   "frontendQuestionId": 1032,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stream of Characters",
   "titleSlug": "stream-of-characters",
   "topicTags": "['Array', 'String', 'Design', 'Trie', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.1949817943364",
   "difficulty": "Medium",
   "frontendQuestionId": 1033,
   "isFavor": false,
   "paidOnly": false,
   "title": "Moving Stones Until Consecutive",
   "titleSlug": "moving-stones-until-consecutive",
   "topicTags": "['Math', 'Brainteaser']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.59372874682321",
   "difficulty": "Medium",
   "frontendQuestionId": 1034,
   "isFavor": false,
   "paidOnly": false,
   "title": "Coloring A Border",
   "titleSlug": "coloring-a-border",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.07579923367165",
   "difficulty": "Medium",
   "frontendQuestionId": 1035,
   "isFavor": false,
   "paidOnly": false,
   "title": "Uncrossed Lines",
   "titleSlug": "uncrossed-lines",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.182855345552284",
   "difficulty": "Hard",
   "frontendQuestionId": 1036,
   "isFavor": false,
   "paidOnly": false,
   "title": "Escape a Large Maze",
   "titleSlug": "escape-a-large-maze",
   "topicTags": "['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.72612308804047",
   "difficulty": "Easy",
   "frontendQuestionId": 1037,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Boomerang",
   "titleSlug": "valid-boomerang",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.22514832579391",
   "difficulty": "Medium",
   "frontendQuestionId": 1038,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Search Tree to Greater Sum Tree",
   "titleSlug": "binary-search-tree-to-greater-sum-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.94804781193706",
   "difficulty": "Medium",
   "frontendQuestionId": 1039,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Score Triangulation of Polygon",
   "titleSlug": "minimum-score-triangulation-of-polygon",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.957405525270254",
   "difficulty": "Medium",
   "frontendQuestionId": 1040,
   "isFavor": false,
   "paidOnly": false,
   "title": "Moving Stones Until Consecutive II",
   "titleSlug": "moving-stones-until-consecutive-ii",
   "topicTags": "['Array', 'Math', 'Two Pointers', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.15856298739072",
   "difficulty": "Medium",
   "frontendQuestionId": 1041,
   "isFavor": false,
   "paidOnly": false,
   "title": "Robot Bounded In Circle",
   "titleSlug": "robot-bounded-in-circle",
   "topicTags": "['Math', 'String', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.10960429693391",
   "difficulty": "Medium",
   "frontendQuestionId": 1042,
   "isFavor": false,
   "paidOnly": false,
   "title": "Flower Planting With No Adjacent",
   "titleSlug": "flower-planting-with-no-adjacent",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.86804148702232",
   "difficulty": "Medium",
   "frontendQuestionId": 1043,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition Array for Maximum Sum",
   "titleSlug": "partition-array-for-maximum-sum",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.68275754822763",
   "difficulty": "Hard",
   "frontendQuestionId": 1044,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Duplicate Substring",
   "titleSlug": "longest-duplicate-substring",
   "topicTags": "['String', 'Binary Search', 'Sliding Window', 'Rolling Hash', 'Suffix Array', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.95505786863069",
   "difficulty": "Medium",
   "frontendQuestionId": 1045,
   "isFavor": false,
   "paidOnly": false,
   "title": "Customers Who Bought All Products",
   "titleSlug": "customers-who-bought-all-products",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.82500539976715",
   "difficulty": "Easy",
   "frontendQuestionId": 1046,
   "isFavor": false,
   "paidOnly": false,
   "title": "Last Stone Weight",
   "titleSlug": "last-stone-weight",
   "topicTags": "['Array', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.22258662368239",
   "difficulty": "Easy",
   "frontendQuestionId": 1047,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove All Adjacent Duplicates In String",
   "titleSlug": "remove-all-adjacent-duplicates-in-string",
   "topicTags": "['String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.786982424743705",
   "difficulty": "Medium",
   "frontendQuestionId": 1048,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest String Chain",
   "titleSlug": "longest-string-chain",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'String', 'Dynamic Programming', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.128321024811626",
   "difficulty": "Medium",
   "frontendQuestionId": 1049,
   "isFavor": false,
   "paidOnly": false,
   "title": "Last Stone Weight II",
   "titleSlug": "last-stone-weight-ii",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.51212237472309",
   "difficulty": "Easy",
   "frontendQuestionId": 1050,
   "isFavor": false,
   "paidOnly": false,
   "title": "Actors and Directors Who Cooperated At Least Three Times",
   "titleSlug": "actors-and-directors-who-cooperated-at-least-three-times",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.05377523252508",
   "difficulty": "Easy",
   "frontendQuestionId": 1051,
   "isFavor": false,
   "paidOnly": false,
   "title": "Height Checker",
   "titleSlug": "height-checker",
   "topicTags": "['Array', 'Sorting', 'Counting Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.08517340528793",
   "difficulty": "Medium",
   "frontendQuestionId": 1052,
   "isFavor": false,
   "paidOnly": false,
   "title": "Grumpy Bookstore Owner",
   "titleSlug": "grumpy-bookstore-owner",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.40936726718993",
   "difficulty": "Medium",
   "frontendQuestionId": 1053,
   "isFavor": false,
   "paidOnly": false,
   "title": "Previous Permutation With One Swap",
   "titleSlug": "previous-permutation-with-one-swap",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.24302834754552",
   "difficulty": "Medium",
   "frontendQuestionId": 1054,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distant Barcodes",
   "titleSlug": "distant-barcodes",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.23077107322711",
   "difficulty": "Medium",
   "frontendQuestionId": 1055,
   "isFavor": false,
   "paidOnly": true,
   "title": "Shortest Way to Form String",
   "titleSlug": "shortest-way-to-form-string",
   "topicTags": "['Two Pointers', 'String', 'Binary Search', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.180753725814675",
   "difficulty": "Easy",
   "frontendQuestionId": 1056,
   "isFavor": false,
   "paidOnly": true,
   "title": "Confusing Number",
   "titleSlug": "confusing-number",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "58.89638403012001",
   "difficulty": "Medium",
   "frontendQuestionId": 1057,
   "isFavor": false,
   "paidOnly": true,
   "title": "Campus Bikes",
   "titleSlug": "campus-bikes",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.362885701868755",
   "difficulty": "Medium",
   "frontendQuestionId": 1058,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimize Rounding Error to Meet Target",
   "titleSlug": "minimize-rounding-error-to-meet-target",
   "topicTags": "['Array', 'Math', 'String', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.0888763704121",
   "difficulty": "Medium",
   "frontendQuestionId": 1059,
   "isFavor": false,
   "paidOnly": true,
   "title": "All Paths from Source Lead to Destination",
   "titleSlug": "all-paths-from-source-lead-to-destination",
   "topicTags": "['Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "58.34719593108855",
   "difficulty": "Medium",
   "frontendQuestionId": 1060,
   "isFavor": false,
   "paidOnly": true,
   "title": "Missing Element in Sorted Array",
   "titleSlug": "missing-element-in-sorted-array",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.55980605806005",
   "difficulty": "Medium",
   "frontendQuestionId": 1061,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lexicographically Smallest Equivalent String",
   "titleSlug": "lexicographically-smallest-equivalent-string",
   "topicTags": "['String', 'Union Find']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.909150850091834",
   "difficulty": "Medium",
   "frontendQuestionId": 1062,
   "isFavor": false,
   "paidOnly": true,
   "title": "Longest Repeating Substring",
   "titleSlug": "longest-repeating-substring",
   "topicTags": "['String', 'Binary Search', 'Dynamic Programming', 'Rolling Hash', 'Suffix Array', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.1319596668128",
   "difficulty": "Hard",
   "frontendQuestionId": 1063,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Valid Subarrays",
   "titleSlug": "number-of-valid-subarrays",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.93234100135318",
   "difficulty": "Easy",
   "frontendQuestionId": 1064,
   "isFavor": false,
   "paidOnly": true,
   "title": "Fixed Point",
   "titleSlug": "fixed-point",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.10929763432972",
   "difficulty": "Easy",
   "frontendQuestionId": 1065,
   "isFavor": false,
   "paidOnly": true,
   "title": "Index Pairs of a String",
   "titleSlug": "index-pairs-of-a-string",
   "topicTags": "['Array', 'String', 'Trie', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.26035577083681",
   "difficulty": "Medium",
   "frontendQuestionId": 1066,
   "isFavor": false,
   "paidOnly": true,
   "title": "Campus Bikes II",
   "titleSlug": "campus-bikes-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.99559147685525",
   "difficulty": "Hard",
   "frontendQuestionId": 1067,
   "isFavor": false,
   "paidOnly": true,
   "title": "Digit Count in Range",
   "titleSlug": "digit-count-in-range",
   "topicTags": "['Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.2356770208351",
   "difficulty": "Easy",
   "frontendQuestionId": 1068,
   "isFavor": false,
   "paidOnly": false,
   "title": "Product Sales Analysis I",
   "titleSlug": "product-sales-analysis-i",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.1077634350832",
   "difficulty": "Easy",
   "frontendQuestionId": 1069,
   "isFavor": false,
   "paidOnly": true,
   "title": "Product Sales Analysis II",
   "titleSlug": "product-sales-analysis-ii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.06854593823094",
   "difficulty": "Medium",
   "frontendQuestionId": 1070,
   "isFavor": false,
   "paidOnly": false,
   "title": "Product Sales Analysis III",
   "titleSlug": "product-sales-analysis-iii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.69900452411475",
   "difficulty": "Easy",
   "frontendQuestionId": 1071,
   "isFavor": false,
   "paidOnly": false,
   "title": "Greatest Common Divisor of Strings",
   "titleSlug": "greatest-common-divisor-of-strings",
   "topicTags": "['Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.48408056731321",
   "difficulty": "Medium",
   "frontendQuestionId": 1072,
   "isFavor": false,
   "paidOnly": false,
   "title": "Flip Columns For Maximum Number of Equal Rows",
   "titleSlug": "flip-columns-for-maximum-number-of-equal-rows",
   "topicTags": "['Array', 'Hash Table', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.77342157907529",
   "difficulty": "Medium",
   "frontendQuestionId": 1073,
   "isFavor": false,
   "paidOnly": false,
   "title": "Adding Two Negabinary Numbers",
   "titleSlug": "adding-two-negabinary-numbers",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.41337500401562",
   "difficulty": "Hard",
   "frontendQuestionId": 1074,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Submatrices That Sum to Target",
   "titleSlug": "number-of-submatrices-that-sum-to-target",
   "topicTags": "['Array', 'Hash Table', 'Matrix', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.27242314831814",
   "difficulty": "Easy",
   "frontendQuestionId": 1075,
   "isFavor": false,
   "paidOnly": false,
   "title": "Project Employees I",
   "titleSlug": "project-employees-i",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.22288501068075",
   "difficulty": "Easy",
   "frontendQuestionId": 1076,
   "isFavor": false,
   "paidOnly": true,
   "title": "Project Employees II",
   "titleSlug": "project-employees-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.0635423263669",
   "difficulty": "Medium",
   "frontendQuestionId": 1077,
   "isFavor": false,
   "paidOnly": true,
   "title": "Project Employees III",
   "titleSlug": "project-employees-iii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.62252781811264",
   "difficulty": "Easy",
   "frontendQuestionId": 1078,
   "isFavor": false,
   "paidOnly": false,
   "title": "Occurrences After Bigram",
   "titleSlug": "occurrences-after-bigram",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.52833774931264",
   "difficulty": "Medium",
   "frontendQuestionId": 1079,
   "isFavor": false,
   "paidOnly": false,
   "title": "Letter Tile Possibilities",
   "titleSlug": "letter-tile-possibilities",
   "topicTags": "['Hash Table', 'String', 'Backtracking', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.567455804817534",
   "difficulty": "Medium",
   "frontendQuestionId": 1080,
   "isFavor": false,
   "paidOnly": false,
   "title": "Insufficient Nodes in Root to Leaf Paths",
   "titleSlug": "insufficient-nodes-in-root-to-leaf-paths",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.727157017780684",
   "difficulty": "Medium",
   "frontendQuestionId": 1081,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Subsequence of Distinct Characters",
   "titleSlug": "smallest-subsequence-of-distinct-characters",
   "topicTags": "['String', 'Stack', 'Greedy', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.65565384705634",
   "difficulty": "Easy",
   "frontendQuestionId": 1082,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sales Analysis I",
   "titleSlug": "sales-analysis-i",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.88316271380428",
   "difficulty": "Easy",
   "frontendQuestionId": 1083,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sales Analysis II",
   "titleSlug": "sales-analysis-ii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.655884178102",
   "difficulty": "Easy",
   "frontendQuestionId": 1084,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sales Analysis III",
   "titleSlug": "sales-analysis-iii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.57430730478589",
   "difficulty": "Easy",
   "frontendQuestionId": 1085,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sum of Digits in the Minimum Number",
   "titleSlug": "sum-of-digits-in-the-minimum-number",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.39961045284856",
   "difficulty": "Easy",
   "frontendQuestionId": 1086,
   "isFavor": false,
   "paidOnly": true,
   "title": "High Five",
   "titleSlug": "high-five",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.65364239171656",
   "difficulty": "Medium",
   "frontendQuestionId": 1087,
   "isFavor": false,
   "paidOnly": true,
   "title": "Brace Expansion",
   "titleSlug": "brace-expansion",
   "topicTags": "['String', 'Backtracking', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.082984898420975",
   "difficulty": "Hard",
   "frontendQuestionId": 1088,
   "isFavor": false,
   "paidOnly": true,
   "title": "Confusing Number II",
   "titleSlug": "confusing-number-ii",
   "topicTags": "['Math', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.64477290769839",
   "difficulty": "Easy",
   "frontendQuestionId": 1089,
   "isFavor": false,
   "paidOnly": false,
   "title": "Duplicate Zeros",
   "titleSlug": "duplicate-zeros",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.92325380856568",
   "difficulty": "Medium",
   "frontendQuestionId": 1090,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Values From Labels",
   "titleSlug": "largest-values-from-labels",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Sorting', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.339373145926466",
   "difficulty": "Medium",
   "frontendQuestionId": 1091,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Path in Binary Matrix",
   "titleSlug": "shortest-path-in-binary-matrix",
   "topicTags": "['Array', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.262654094211776",
   "difficulty": "Hard",
   "frontendQuestionId": 1092,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Common Supersequence ",
   "titleSlug": "shortest-common-supersequence",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.15638385811979",
   "difficulty": "Medium",
   "frontendQuestionId": 1093,
   "isFavor": false,
   "paidOnly": false,
   "title": "Statistics from a Large Sample",
   "titleSlug": "statistics-from-a-large-sample",
   "topicTags": "['Array', 'Math', 'Probability and Statistics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.97847066254913",
   "difficulty": "Medium",
   "frontendQuestionId": 1094,
   "isFavor": false,
   "paidOnly": false,
   "title": "Car Pooling",
   "titleSlug": "car-pooling",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)', 'Simulation', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.253531851991944",
   "difficulty": "Hard",
   "frontendQuestionId": 1095,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find in Mountain Array",
   "titleSlug": "find-in-mountain-array",
   "topicTags": "['Array', 'Binary Search', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.14610978857803",
   "difficulty": "Hard",
   "frontendQuestionId": 1096,
   "isFavor": false,
   "paidOnly": false,
   "title": "Brace Expansion II",
   "titleSlug": "brace-expansion-ii",
   "topicTags": "['String', 'Backtracking', 'Stack', 'Breadth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.78258174492484",
   "difficulty": "Hard",
   "frontendQuestionId": 1097,
   "isFavor": false,
   "paidOnly": true,
   "title": "Game Play Analysis V",
   "titleSlug": "game-play-analysis-v",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.30511564652666",
   "difficulty": "Medium",
   "frontendQuestionId": 1098,
   "isFavor": false,
   "paidOnly": true,
   "title": "Unpopular Books",
   "titleSlug": "unpopular-books",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.98172935408303",
   "difficulty": "Easy",
   "frontendQuestionId": 1099,
   "isFavor": false,
   "paidOnly": true,
   "title": "Two Sum Less Than K",
   "titleSlug": "two-sum-less-than-k",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "76.2208036712361",
   "difficulty": "Medium",
   "frontendQuestionId": 1100,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find K-Length Substrings With No Repeated Characters",
   "titleSlug": "find-k-length-substrings-with-no-repeated-characters",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.63275155732646",
   "difficulty": "Medium",
   "frontendQuestionId": 1101,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Earliest Moment When Everyone Become Friends",
   "titleSlug": "the-earliest-moment-when-everyone-become-friends",
   "topicTags": "['Array', 'Union Find', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.93378222109225",
   "difficulty": "Medium",
   "frontendQuestionId": 1102,
   "isFavor": false,
   "paidOnly": true,
   "title": "Path With Maximum Minimum Value",
   "titleSlug": "path-with-maximum-minimum-value",
   "topicTags": "['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.15812690872073",
   "difficulty": "Easy",
   "frontendQuestionId": 1103,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distribute Candies to People",
   "titleSlug": "distribute-candies-to-people",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.4339708908024",
   "difficulty": "Medium",
   "frontendQuestionId": 1104,
   "isFavor": false,
   "paidOnly": false,
   "title": "Path In Zigzag Labelled Binary Tree",
   "titleSlug": "path-in-zigzag-labelled-binary-tree",
   "topicTags": "['Math', 'Tree', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.7003805410804",
   "difficulty": "Medium",
   "frontendQuestionId": 1105,
   "isFavor": false,
   "paidOnly": false,
   "title": "Filling Bookcase Shelves",
   "titleSlug": "filling-bookcase-shelves",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.98985205362388",
   "difficulty": "Hard",
   "frontendQuestionId": 1106,
   "isFavor": false,
   "paidOnly": false,
   "title": "Parsing A Boolean Expression",
   "titleSlug": "parsing-a-boolean-expression",
   "topicTags": "['String', 'Stack', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.93140922857652",
   "difficulty": "Medium",
   "frontendQuestionId": 1107,
   "isFavor": false,
   "paidOnly": true,
   "title": "New Users Daily Count",
   "titleSlug": "new-users-daily-count",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.60699646421978",
   "difficulty": "Easy",
   "frontendQuestionId": 1108,
   "isFavor": false,
   "paidOnly": false,
   "title": "Defanging an IP Address",
   "titleSlug": "defanging-an-ip-address",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.799943894521704",
   "difficulty": "Medium",
   "frontendQuestionId": 1109,
   "isFavor": false,
   "paidOnly": false,
   "title": "Corporate Flight Bookings",
   "titleSlug": "corporate-flight-bookings",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.4225469894871",
   "difficulty": "Medium",
   "frontendQuestionId": 1110,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Nodes And Return Forest",
   "titleSlug": "delete-nodes-and-return-forest",
   "topicTags": "['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.3113768133375",
   "difficulty": "Medium",
   "frontendQuestionId": 1111,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Nesting Depth of Two Valid Parentheses Strings",
   "titleSlug": "maximum-nesting-depth-of-two-valid-parentheses-strings",
   "topicTags": "['String', 'Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.09009036235608",
   "difficulty": "Medium",
   "frontendQuestionId": 1112,
   "isFavor": false,
   "paidOnly": true,
   "title": "Highest Grade For Each Student",
   "titleSlug": "highest-grade-for-each-student",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.10009263071223",
   "difficulty": "Easy",
   "frontendQuestionId": 1113,
   "isFavor": false,
   "paidOnly": true,
   "title": "Reported Posts",
   "titleSlug": "reported-posts",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.84084301494823",
   "difficulty": "Easy",
   "frontendQuestionId": 1114,
   "isFavor": false,
   "paidOnly": false,
   "title": "Print in Order",
   "titleSlug": "print-in-order",
   "topicTags": "['Concurrency']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.91453323856398",
   "difficulty": "Medium",
   "frontendQuestionId": 1115,
   "isFavor": false,
   "paidOnly": false,
   "title": "Print FooBar Alternately",
   "titleSlug": "print-foobar-alternately",
   "topicTags": "['Concurrency']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.05316425072075",
   "difficulty": "Medium",
   "frontendQuestionId": 1116,
   "isFavor": false,
   "paidOnly": false,
   "title": "Print Zero Even Odd",
   "titleSlug": "print-zero-even-odd",
   "topicTags": "['Concurrency']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.49982452446128",
   "difficulty": "Medium",
   "frontendQuestionId": 1117,
   "isFavor": false,
   "paidOnly": false,
   "title": "Building H2O",
   "titleSlug": "building-h2o",
   "topicTags": "['Concurrency']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.90692154724485",
   "difficulty": "Easy",
   "frontendQuestionId": 1118,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Days in a Month",
   "titleSlug": "number-of-days-in-a-month",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "91.21501581408688",
   "difficulty": "Easy",
   "frontendQuestionId": 1119,
   "isFavor": false,
   "paidOnly": true,
   "title": "Remove Vowels from a String",
   "titleSlug": "remove-vowels-from-a-string",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.77694422440706",
   "difficulty": "Medium",
   "frontendQuestionId": 1120,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Average Subtree",
   "titleSlug": "maximum-average-subtree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.45507584597433",
   "difficulty": "Hard",
   "frontendQuestionId": 1121,
   "isFavor": false,
   "paidOnly": true,
   "title": "Divide Array Into Increasing Sequences",
   "titleSlug": "divide-array-into-increasing-sequences",
   "topicTags": "['Array', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.88886421489404",
   "difficulty": "Easy",
   "frontendQuestionId": 1122,
   "isFavor": false,
   "paidOnly": false,
   "title": "Relative Sort Array",
   "titleSlug": "relative-sort-array",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Counting Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.78147243174334",
   "difficulty": "Medium",
   "frontendQuestionId": 1123,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lowest Common Ancestor of Deepest Leaves",
   "titleSlug": "lowest-common-ancestor-of-deepest-leaves",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.68919858009504",
   "difficulty": "Medium",
   "frontendQuestionId": 1124,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Well-Performing Interval",
   "titleSlug": "longest-well-performing-interval",
   "topicTags": "['Array', 'Hash Table', 'Stack', 'Monotonic Stack', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.3290867002676",
   "difficulty": "Hard",
   "frontendQuestionId": 1125,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Sufficient Team",
   "titleSlug": "smallest-sufficient-team",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.87072038743526",
   "difficulty": "Medium",
   "frontendQuestionId": 1126,
   "isFavor": false,
   "paidOnly": true,
   "title": "Active Businesses",
   "titleSlug": "active-businesses",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.1253255995059",
   "difficulty": "Hard",
   "frontendQuestionId": 1127,
   "isFavor": false,
   "paidOnly": true,
   "title": "User Purchase Platform",
   "titleSlug": "user-purchase-platform",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.0744929503129",
   "difficulty": "Easy",
   "frontendQuestionId": 1128,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Equivalent Domino Pairs",
   "titleSlug": "number-of-equivalent-domino-pairs",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.16766805026683",
   "difficulty": "Medium",
   "frontendQuestionId": 1129,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Path with Alternating Colors",
   "titleSlug": "shortest-path-with-alternating-colors",
   "topicTags": "['Breadth-First Search', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.61703301756646",
   "difficulty": "Medium",
   "frontendQuestionId": 1130,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost Tree From Leaf Values",
   "titleSlug": "minimum-cost-tree-from-leaf-values",
   "topicTags": "['Array', 'Dynamic Programming', 'Stack', 'Greedy', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.199985826660054",
   "difficulty": "Medium",
   "frontendQuestionId": 1131,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum of Absolute Value Expression",
   "titleSlug": "maximum-of-absolute-value-expression",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.26194380671259",
   "difficulty": "Medium",
   "frontendQuestionId": 1132,
   "isFavor": false,
   "paidOnly": true,
   "title": "Reported Posts II",
   "titleSlug": "reported-posts-ii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.7315327921639",
   "difficulty": "Easy",
   "frontendQuestionId": 1133,
   "isFavor": false,
   "paidOnly": true,
   "title": "Largest Unique Number",
   "titleSlug": "largest-unique-number",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.81476177574795",
   "difficulty": "Easy",
   "frontendQuestionId": 1134,
   "isFavor": false,
   "paidOnly": true,
   "title": "Armstrong Number",
   "titleSlug": "armstrong-number",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.510280790487094",
   "difficulty": "Medium",
   "frontendQuestionId": 1135,
   "isFavor": false,
   "paidOnly": true,
   "title": "Connecting Cities With Minimum Cost",
   "titleSlug": "connecting-cities-with-minimum-cost",
   "topicTags": "['Union Find', 'Graph', 'Heap (Priority Queue)', 'Minimum Spanning Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.741030870197775",
   "difficulty": "Medium",
   "frontendQuestionId": 1136,
   "isFavor": false,
   "paidOnly": true,
   "title": "Parallel Courses",
   "titleSlug": "parallel-courses",
   "topicTags": "['Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.631861408861425",
   "difficulty": "Easy",
   "frontendQuestionId": 1137,
   "isFavor": false,
   "paidOnly": false,
   "title": "N-th Tribonacci Number",
   "titleSlug": "n-th-tribonacci-number",
   "topicTags": "['Math', 'Dynamic Programming', 'Memoization']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.57411374601815",
   "difficulty": "Medium",
   "frontendQuestionId": 1138,
   "isFavor": false,
   "paidOnly": false,
   "title": "Alphabet Board Path",
   "titleSlug": "alphabet-board-path",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.57339240460173",
   "difficulty": "Medium",
   "frontendQuestionId": 1139,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest 1-Bordered Square",
   "titleSlug": "largest-1-bordered-square",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.02022313266201",
   "difficulty": "Medium",
   "frontendQuestionId": 1140,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stone Game II",
   "titleSlug": "stone-game-ii",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Prefix Sum', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.33810044225094",
   "difficulty": "Easy",
   "frontendQuestionId": 1141,
   "isFavor": false,
   "paidOnly": false,
   "title": "User Activity for the Past 30 Days I",
   "titleSlug": "user-activity-for-the-past-30-days-i",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.72139226141434",
   "difficulty": "Easy",
   "frontendQuestionId": 1142,
   "isFavor": false,
   "paidOnly": true,
   "title": "User Activity for the Past 30 Days II",
   "titleSlug": "user-activity-for-the-past-30-days-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.07241772366793",
   "difficulty": "Medium",
   "frontendQuestionId": 1143,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Common Subsequence",
   "titleSlug": "longest-common-subsequence",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.28270042194093",
   "difficulty": "Medium",
   "frontendQuestionId": 1144,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decrease Elements To Make Array Zigzag",
   "titleSlug": "decrease-elements-to-make-array-zigzag",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.38331883877915",
   "difficulty": "Medium",
   "frontendQuestionId": 1145,
   "isFavor": false,
   "paidOnly": false,
   "title": "Binary Tree Coloring Game",
   "titleSlug": "binary-tree-coloring-game",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.73514783894652",
   "difficulty": "Medium",
   "frontendQuestionId": 1146,
   "isFavor": false,
   "paidOnly": false,
   "title": "Snapshot Array",
   "titleSlug": "snapshot-array",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Design']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.74922916622366",
   "difficulty": "Hard",
   "frontendQuestionId": 1147,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Chunked Palindrome Decomposition",
   "titleSlug": "longest-chunked-palindrome-decomposition",
   "topicTags": "['Two Pointers', 'String', 'Dynamic Programming', 'Greedy', 'Rolling Hash', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.1763891362871",
   "difficulty": "Easy",
   "frontendQuestionId": 1148,
   "isFavor": false,
   "paidOnly": false,
   "title": "Article Views I",
   "titleSlug": "article-views-i",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.206276530882235",
   "difficulty": "Medium",
   "frontendQuestionId": 1149,
   "isFavor": false,
   "paidOnly": true,
   "title": "Article Views II",
   "titleSlug": "article-views-ii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.059862104517045",
   "difficulty": "Easy",
   "frontendQuestionId": 1150,
   "isFavor": false,
   "paidOnly": true,
   "title": "Check If a Number Is Majority Element in a Sorted Array",
   "titleSlug": "check-if-a-number-is-majority-element-in-a-sorted-array",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.09148355593853",
   "difficulty": "Medium",
   "frontendQuestionId": 1151,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Swaps to Group All 1's Together",
   "titleSlug": "minimum-swaps-to-group-all-1s-together",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "43.38777571981815",
   "difficulty": "Medium",
   "frontendQuestionId": 1152,
   "isFavor": false,
   "paidOnly": true,
   "title": "Analyze User Website Visit Pattern",
   "titleSlug": "analyze-user-website-visit-pattern",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.81166344863698",
   "difficulty": "Hard",
   "frontendQuestionId": 1153,
   "isFavor": false,
   "paidOnly": true,
   "title": "String Transforms Into Another String",
   "titleSlug": "string-transforms-into-another-string",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.881664515964175",
   "difficulty": "Easy",
   "frontendQuestionId": 1154,
   "isFavor": false,
   "paidOnly": false,
   "title": "Day of the Year",
   "titleSlug": "day-of-the-year",
   "topicTags": "['Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.481266359840525",
   "difficulty": "Medium",
   "frontendQuestionId": 1155,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Dice Rolls With Target Sum",
   "titleSlug": "number-of-dice-rolls-with-target-sum",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.62333078630426",
   "difficulty": "Medium",
   "frontendQuestionId": 1156,
   "isFavor": false,
   "paidOnly": false,
   "title": "Swap For Longest Repeated Character Substring",
   "titleSlug": "swap-for-longest-repeated-character-substring",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.29262438008107",
   "difficulty": "Hard",
   "frontendQuestionId": 1157,
   "isFavor": false,
   "paidOnly": false,
   "title": "Online Majority Element In Subarray",
   "titleSlug": "online-majority-element-in-subarray",
   "topicTags": "['Array', 'Binary Search', 'Design', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.15057539575342",
   "difficulty": "Medium",
   "frontendQuestionId": 1158,
   "isFavor": false,
   "paidOnly": false,
   "title": "Market Analysis I",
   "titleSlug": "market-analysis-i",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.711010295835486",
   "difficulty": "Hard",
   "frontendQuestionId": 1159,
   "isFavor": false,
   "paidOnly": true,
   "title": "Market Analysis II",
   "titleSlug": "market-analysis-ii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.92543172632514",
   "difficulty": "Easy",
   "frontendQuestionId": 1160,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Words That Can Be Formed by Characters",
   "titleSlug": "find-words-that-can-be-formed-by-characters",
   "topicTags": "['Array', 'Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.28639095034606",
   "difficulty": "Medium",
   "frontendQuestionId": 1161,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Level Sum of a Binary Tree",
   "titleSlug": "maximum-level-sum-of-a-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.76993350320055",
   "difficulty": "Medium",
   "frontendQuestionId": 1162,
   "isFavor": false,
   "paidOnly": false,
   "title": "As Far from Land as Possible",
   "titleSlug": "as-far-from-land-as-possible",
   "topicTags": "['Array', 'Dynamic Programming', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.37285529964038",
   "difficulty": "Hard",
   "frontendQuestionId": 1163,
   "isFavor": false,
   "paidOnly": false,
   "title": "Last Substring in Lexicographical Order",
   "titleSlug": "last-substring-in-lexicographical-order",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.230351837135494",
   "difficulty": "Medium",
   "frontendQuestionId": 1164,
   "isFavor": false,
   "paidOnly": false,
   "title": "Product Price at a Given Date",
   "titleSlug": "product-price-at-a-given-date",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.65631224555233",
   "difficulty": "Easy",
   "frontendQuestionId": 1165,
   "isFavor": false,
   "paidOnly": true,
   "title": "Single-Row Keyboard",
   "titleSlug": "single-row-keyboard",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "63.89480286580033",
   "difficulty": "Medium",
   "frontendQuestionId": 1166,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design File System",
   "titleSlug": "design-file-system",
   "topicTags": "['Hash Table', 'String', 'Design', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.96294285609885",
   "difficulty": "Medium",
   "frontendQuestionId": 1167,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Cost to Connect Sticks",
   "titleSlug": "minimum-cost-to-connect-sticks",
   "topicTags": "['Array', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "65.10745891276865",
   "difficulty": "Hard",
   "frontendQuestionId": 1168,
   "isFavor": false,
   "paidOnly": true,
   "title": "Optimize Water Distribution in a Village",
   "titleSlug": "optimize-water-distribution-in-a-village",
   "topicTags": "['Union Find', 'Graph', 'Heap (Priority Queue)', 'Minimum Spanning Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.208158559959998",
   "difficulty": "Medium",
   "frontendQuestionId": 1169,
   "isFavor": false,
   "paidOnly": false,
   "title": "Invalid Transactions",
   "titleSlug": "invalid-transactions",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.56417311716618",
   "difficulty": "Medium",
   "frontendQuestionId": 1170,
   "isFavor": false,
   "paidOnly": false,
   "title": "Compare Strings by Frequency of the Smallest Character",
   "titleSlug": "compare-strings-by-frequency-of-the-smallest-character",
   "topicTags": "['Array', 'Hash Table', 'String', 'Binary Search', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.80786867814182",
   "difficulty": "Medium",
   "frontendQuestionId": 1171,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Zero Sum Consecutive Nodes from Linked List",
   "titleSlug": "remove-zero-sum-consecutive-nodes-from-linked-list",
   "topicTags": "['Hash Table', 'Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.764413172324176",
   "difficulty": "Hard",
   "frontendQuestionId": 1172,
   "isFavor": false,
   "paidOnly": false,
   "title": "Dinner Plate Stacks",
   "titleSlug": "dinner-plate-stacks",
   "topicTags": "['Hash Table', 'Stack', 'Design', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.88484661630955",
   "difficulty": "Easy",
   "frontendQuestionId": 1173,
   "isFavor": false,
   "paidOnly": true,
   "title": "Immediate Food Delivery I",
   "titleSlug": "immediate-food-delivery-i",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.924121950111314",
   "difficulty": "Medium",
   "frontendQuestionId": 1174,
   "isFavor": false,
   "paidOnly": false,
   "title": "Immediate Food Delivery II",
   "titleSlug": "immediate-food-delivery-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.161248374512354",
   "difficulty": "Easy",
   "frontendQuestionId": 1175,
   "isFavor": false,
   "paidOnly": false,
   "title": "Prime Arrangements",
   "titleSlug": "prime-arrangements",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.035197800884426",
   "difficulty": "Easy",
   "frontendQuestionId": 1176,
   "isFavor": false,
   "paidOnly": true,
   "title": "Diet Plan Performance",
   "titleSlug": "diet-plan-performance",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.961117676209355",
   "difficulty": "Medium",
   "frontendQuestionId": 1177,
   "isFavor": false,
   "paidOnly": false,
   "title": "Can Make Palindrome from Substring",
   "titleSlug": "can-make-palindrome-from-substring",
   "topicTags": "['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.99840775752012",
   "difficulty": "Hard",
   "frontendQuestionId": 1178,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Valid Words for Each Puzzle",
   "titleSlug": "number-of-valid-words-for-each-puzzle",
   "topicTags": "['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.76655629139073",
   "difficulty": "Easy",
   "frontendQuestionId": 1179,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reformat Department Table",
   "titleSlug": "reformat-department-table",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.54319639688822",
   "difficulty": "Easy",
   "frontendQuestionId": 1180,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Substrings with Only One Distinct Letter",
   "titleSlug": "count-substrings-with-only-one-distinct-letter",
   "topicTags": "['Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.459806475623374",
   "difficulty": "Medium",
   "frontendQuestionId": 1181,
   "isFavor": false,
   "paidOnly": true,
   "title": "Before and After Puzzle",
   "titleSlug": "before-and-after-puzzle",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.43758667481845",
   "difficulty": "Medium",
   "frontendQuestionId": 1182,
   "isFavor": false,
   "paidOnly": true,
   "title": "Shortest Distance to Target Color",
   "titleSlug": "shortest-distance-to-target-color",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.57991093518059",
   "difficulty": "Hard",
   "frontendQuestionId": 1183,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Number of Ones",
   "titleSlug": "maximum-number-of-ones",
   "topicTags": "['Math', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.48607850243449",
   "difficulty": "Easy",
   "frontendQuestionId": 1184,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distance Between Bus Stops",
   "titleSlug": "distance-between-bus-stops",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.348985156013335",
   "difficulty": "Easy",
   "frontendQuestionId": 1185,
   "isFavor": false,
   "paidOnly": false,
   "title": "Day of the Week",
   "titleSlug": "day-of-the-week",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.83233532934132",
   "difficulty": "Medium",
   "frontendQuestionId": 1186,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Subarray Sum with One Deletion",
   "titleSlug": "maximum-subarray-sum-with-one-deletion",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.85668801738023",
   "difficulty": "Hard",
   "frontendQuestionId": 1187,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make Array Strictly Increasing",
   "titleSlug": "make-array-strictly-increasing",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.94281904857739",
   "difficulty": "Medium",
   "frontendQuestionId": 1188,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design Bounded Blocking Queue",
   "titleSlug": "design-bounded-blocking-queue",
   "topicTags": "['Concurrency']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.71063056856083",
   "difficulty": "Easy",
   "frontendQuestionId": 1189,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Balloons",
   "titleSlug": "maximum-number-of-balloons",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.6778510944539",
   "difficulty": "Medium",
   "frontendQuestionId": 1190,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Substrings Between Each Pair of Parentheses",
   "titleSlug": "reverse-substrings-between-each-pair-of-parentheses",
   "topicTags": "['String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.125376266190376",
   "difficulty": "Medium",
   "frontendQuestionId": 1191,
   "isFavor": false,
   "paidOnly": false,
   "title": "K-Concatenation Maximum Sum",
   "titleSlug": "k-concatenation-maximum-sum",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.39078178598619",
   "difficulty": "Hard",
   "frontendQuestionId": 1192,
   "isFavor": false,
   "paidOnly": false,
   "title": "Critical Connections in a Network",
   "titleSlug": "critical-connections-in-a-network",
   "topicTags": "['Depth-First Search', 'Graph', 'Biconnected Component']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.260829785107106",
   "difficulty": "Medium",
   "frontendQuestionId": 1193,
   "isFavor": false,
   "paidOnly": false,
   "title": "Monthly Transactions I",
   "titleSlug": "monthly-transactions-i",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.69353155972874",
   "difficulty": "Hard",
   "frontendQuestionId": 1194,
   "isFavor": false,
   "paidOnly": true,
   "title": "Tournament Winners",
   "titleSlug": "tournament-winners",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.7012582533948",
   "difficulty": "Medium",
   "frontendQuestionId": 1195,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fizz Buzz Multithreaded",
   "titleSlug": "fizz-buzz-multithreaded",
   "topicTags": "['Concurrency']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.07271712851032",
   "difficulty": "Easy",
   "frontendQuestionId": 1196,
   "isFavor": false,
   "paidOnly": true,
   "title": "How Many Apples Can You Put into the Basket",
   "titleSlug": "how-many-apples-can-you-put-into-the-basket",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "41.20396357997089",
   "difficulty": "Medium",
   "frontendQuestionId": 1197,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Knight Moves",
   "titleSlug": "minimum-knight-moves",
   "topicTags": "['Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.40976104134666",
   "difficulty": "Medium",
   "frontendQuestionId": 1198,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Smallest Common Element in All Rows",
   "titleSlug": "find-smallest-common-element-in-all-rows",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Matrix', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "46.13736778685232",
   "difficulty": "Hard",
   "frontendQuestionId": 1199,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Time to Build Blocks",
   "titleSlug": "minimum-time-to-build-blocks",
   "topicTags": "['Array', 'Math', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.43357004829465",
   "difficulty": "Easy",
   "frontendQuestionId": 1200,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Absolute Difference",
   "titleSlug": "minimum-absolute-difference",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.27166462519367",
   "difficulty": "Medium",
   "frontendQuestionId": 1201,
   "isFavor": false,
   "paidOnly": false,
   "title": "Ugly Number III",
   "titleSlug": "ugly-number-iii",
   "topicTags": "['Math', 'Binary Search', 'Combinatorics', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.18000466582194",
   "difficulty": "Medium",
   "frontendQuestionId": 1202,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest String With Swaps",
   "titleSlug": "smallest-string-with-swaps",
   "topicTags": "['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.6584814001464",
   "difficulty": "Hard",
   "frontendQuestionId": 1203,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort Items by Groups Respecting Dependencies",
   "titleSlug": "sort-items-by-groups-respecting-dependencies",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.2687846450636",
   "difficulty": "Medium",
   "frontendQuestionId": 1204,
   "isFavor": false,
   "paidOnly": false,
   "title": "Last Person to Fit in the Bus",
   "titleSlug": "last-person-to-fit-in-the-bus",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.99627961621304",
   "difficulty": "Medium",
   "frontendQuestionId": 1205,
   "isFavor": false,
   "paidOnly": true,
   "title": "Monthly Transactions II",
   "titleSlug": "monthly-transactions-ii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.818992420864916",
   "difficulty": "Hard",
   "frontendQuestionId": 1206,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Skiplist",
   "titleSlug": "design-skiplist",
   "topicTags": "['Linked List', 'Design']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.13156603315117",
   "difficulty": "Easy",
   "frontendQuestionId": 1207,
   "isFavor": false,
   "paidOnly": false,
   "title": "Unique Number of Occurrences",
   "titleSlug": "unique-number-of-occurrences",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "58.7783175539859",
   "difficulty": "Medium",
   "frontendQuestionId": 1208,
   "isFavor": false,
   "paidOnly": false,
   "title": "Get Equal Substrings Within Budget",
   "titleSlug": "get-equal-substrings-within-budget",
   "topicTags": "['String', 'Binary Search', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.270729156266015",
   "difficulty": "Medium",
   "frontendQuestionId": 1209,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove All Adjacent Duplicates in String II",
   "titleSlug": "remove-all-adjacent-duplicates-in-string-ii",
   "topicTags": "['String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.383080240400055",
   "difficulty": "Hard",
   "frontendQuestionId": 1210,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Moves to Reach Target with Rotations",
   "titleSlug": "minimum-moves-to-reach-target-with-rotations",
   "topicTags": "['Array', 'Breadth-First Search', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.926850233280845",
   "difficulty": "Easy",
   "frontendQuestionId": 1211,
   "isFavor": false,
   "paidOnly": false,
   "title": "Queries Quality and Percentage",
   "titleSlug": "queries-quality-and-percentage",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.785829288074865",
   "difficulty": "Medium",
   "frontendQuestionId": 1212,
   "isFavor": false,
   "paidOnly": true,
   "title": "Team Scores in Football Tournament",
   "titleSlug": "team-scores-in-football-tournament",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.10943292376929",
   "difficulty": "Easy",
   "frontendQuestionId": 1213,
   "isFavor": false,
   "paidOnly": true,
   "title": "Intersection of Three Sorted Arrays",
   "titleSlug": "intersection-of-three-sorted-arrays",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.31425274670146",
   "difficulty": "Medium",
   "frontendQuestionId": 1214,
   "isFavor": false,
   "paidOnly": true,
   "title": "Two Sum BSTs",
   "titleSlug": "two-sum-bsts",
   "topicTags": "['Two Pointers', 'Binary Search', 'Stack', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.57517418408507",
   "difficulty": "Medium",
   "frontendQuestionId": 1215,
   "isFavor": false,
   "paidOnly": true,
   "title": "Stepping Numbers",
   "titleSlug": "stepping-numbers",
   "topicTags": "['Math', 'Backtracking', 'Breadth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.05841867833977",
   "difficulty": "Hard",
   "frontendQuestionId": 1216,
   "isFavor": false,
   "paidOnly": true,
   "title": "Valid Palindrome III",
   "titleSlug": "valid-palindrome-iii",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.10344946245016",
   "difficulty": "Easy",
   "frontendQuestionId": 1217,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Move Chips to The Same Position",
   "titleSlug": "minimum-cost-to-move-chips-to-the-same-position",
   "topicTags": "['Array', 'Math', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.48153504699511",
   "difficulty": "Medium",
   "frontendQuestionId": 1218,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Arithmetic Subsequence of Given Difference",
   "titleSlug": "longest-arithmetic-subsequence-of-given-difference",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.06990460933517",
   "difficulty": "Medium",
   "frontendQuestionId": 1219,
   "isFavor": false,
   "paidOnly": false,
   "title": "Path with Maximum Gold",
   "titleSlug": "path-with-maximum-gold",
   "topicTags": "['Array', 'Backtracking', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.5119359677035",
   "difficulty": "Hard",
   "frontendQuestionId": 1220,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Vowels Permutation",
   "titleSlug": "count-vowels-permutation",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.67806531271754",
   "difficulty": "Easy",
   "frontendQuestionId": 1221,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split a String in Balanced Strings",
   "titleSlug": "split-a-string-in-balanced-strings",
   "topicTags": "['String', 'Greedy', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.08719851576994",
   "difficulty": "Medium",
   "frontendQuestionId": 1222,
   "isFavor": false,
   "paidOnly": false,
   "title": "Queens That Can Attack the King",
   "titleSlug": "queens-that-can-attack-the-king",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.81307993625356",
   "difficulty": "Hard",
   "frontendQuestionId": 1223,
   "isFavor": false,
   "paidOnly": false,
   "title": "Dice Roll Simulation",
   "titleSlug": "dice-roll-simulation",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.340209821034996",
   "difficulty": "Hard",
   "frontendQuestionId": 1224,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Equal Frequency",
   "titleSlug": "maximum-equal-frequency",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.35112478992448",
   "difficulty": "Hard",
   "frontendQuestionId": 1225,
   "isFavor": false,
   "paidOnly": true,
   "title": "Report Contiguous Dates",
   "titleSlug": "report-contiguous-dates",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.56849163753558",
   "difficulty": "Medium",
   "frontendQuestionId": 1226,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Dining Philosophers",
   "titleSlug": "the-dining-philosophers",
   "topicTags": "['Concurrency']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.59517648849469",
   "difficulty": "Medium",
   "frontendQuestionId": 1227,
   "isFavor": false,
   "paidOnly": false,
   "title": "Airplane Seat Assignment Probability",
   "titleSlug": "airplane-seat-assignment-probability",
   "topicTags": "['Math', 'Dynamic Programming', 'Brainteaser', 'Probability and Statistics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.05930807248764",
   "difficulty": "Easy",
   "frontendQuestionId": 1228,
   "isFavor": false,
   "paidOnly": true,
   "title": "Missing Number In Arithmetic Progression",
   "titleSlug": "missing-number-in-arithmetic-progression",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "55.17577776455892",
   "difficulty": "Medium",
   "frontendQuestionId": 1229,
   "isFavor": false,
   "paidOnly": true,
   "title": "Meeting Scheduler",
   "titleSlug": "meeting-scheduler",
   "topicTags": "['Array', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.14571278274593",
   "difficulty": "Medium",
   "frontendQuestionId": 1230,
   "isFavor": false,
   "paidOnly": true,
   "title": "Toss Strange Coins",
   "titleSlug": "toss-strange-coins",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Probability and Statistics']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.760295197322634",
   "difficulty": "Hard",
   "frontendQuestionId": 1231,
   "isFavor": false,
   "paidOnly": true,
   "title": "Divide Chocolate",
   "titleSlug": "divide-chocolate",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.64442362740381",
   "difficulty": "Easy",
   "frontendQuestionId": 1232,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If It Is a Straight Line",
   "titleSlug": "check-if-it-is-a-straight-line",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.70458372656785",
   "difficulty": "Medium",
   "frontendQuestionId": 1233,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Sub-Folders from the Filesystem",
   "titleSlug": "remove-sub-folders-from-the-filesystem",
   "topicTags": "['Array', 'String', 'Depth-First Search', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.243065211174546",
   "difficulty": "Medium",
   "frontendQuestionId": 1234,
   "isFavor": false,
   "paidOnly": false,
   "title": "Replace the Substring for Balanced String",
   "titleSlug": "replace-the-substring-for-balanced-string",
   "topicTags": "['String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.338065023371804",
   "difficulty": "Hard",
   "frontendQuestionId": 1235,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Profit in Job Scheduling",
   "titleSlug": "maximum-profit-in-job-scheduling",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.59690674126941",
   "difficulty": "Medium",
   "frontendQuestionId": 1236,
   "isFavor": false,
   "paidOnly": true,
   "title": "Web Crawler",
   "titleSlug": "web-crawler",
   "topicTags": "['String', 'Depth-First Search', 'Breadth-First Search', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.39659194833797",
   "difficulty": "Medium",
   "frontendQuestionId": 1237,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Positive Integer Solution for a Given Equation",
   "titleSlug": "find-positive-integer-solution-for-a-given-equation",
   "topicTags": "['Math', 'Two Pointers', 'Binary Search', 'Interactive']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.35326913329955",
   "difficulty": "Medium",
   "frontendQuestionId": 1238,
   "isFavor": false,
   "paidOnly": false,
   "title": "Circular Permutation in Binary Representation",
   "titleSlug": "circular-permutation-in-binary-representation",
   "topicTags": "['Math', 'Backtracking', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.204658410122775",
   "difficulty": "Medium",
   "frontendQuestionId": 1239,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Length of a Concatenated String with Unique Characters",
   "titleSlug": "maximum-length-of-a-concatenated-string-with-unique-characters",
   "topicTags": "['Array', 'String', 'Backtracking', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "54.33779271327393",
   "difficulty": "Hard",
   "frontendQuestionId": 1240,
   "isFavor": false,
   "paidOnly": false,
   "title": "Tiling a Rectangle with the Fewest Squares",
   "titleSlug": "tiling-a-rectangle-with-the-fewest-squares",
   "topicTags": "['Backtracking']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.04542406684662",
   "difficulty": "Easy",
   "frontendQuestionId": 1241,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Comments per Post",
   "titleSlug": "number-of-comments-per-post",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.73323224239361",
   "difficulty": "Medium",
   "frontendQuestionId": 1242,
   "isFavor": false,
   "paidOnly": true,
   "title": "Web Crawler Multithreaded",
   "titleSlug": "web-crawler-multithreaded",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Concurrency']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.9842744817727",
   "difficulty": "Easy",
   "frontendQuestionId": 1243,
   "isFavor": false,
   "paidOnly": true,
   "title": "Array Transformation",
   "titleSlug": "array-transformation",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.88152618811426",
   "difficulty": "Medium",
   "frontendQuestionId": 1244,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design A Leaderboard",
   "titleSlug": "design-a-leaderboard",
   "topicTags": "['Hash Table', 'Design', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.026874779955406",
   "difficulty": "Medium",
   "frontendQuestionId": 1245,
   "isFavor": false,
   "paidOnly": true,
   "title": "Tree Diameter",
   "titleSlug": "tree-diameter",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.32004574415945",
   "difficulty": "Hard",
   "frontendQuestionId": 1246,
   "isFavor": false,
   "paidOnly": true,
   "title": "Palindrome Removal",
   "titleSlug": "palindrome-removal",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.49645809568071",
   "difficulty": "Medium",
   "frontendQuestionId": 1247,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Swaps to Make Strings Equal",
   "titleSlug": "minimum-swaps-to-make-strings-equal",
   "topicTags": "['Math', 'String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.620829374737",
   "difficulty": "Medium",
   "frontendQuestionId": 1248,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Nice Subarrays",
   "titleSlug": "count-number-of-nice-subarrays",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.42878607998813",
   "difficulty": "Medium",
   "frontendQuestionId": 1249,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Remove to Make Valid Parentheses",
   "titleSlug": "minimum-remove-to-make-valid-parentheses",
   "topicTags": "['String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.940158373416786",
   "difficulty": "Hard",
   "frontendQuestionId": 1250,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If It Is a Good Array",
   "titleSlug": "check-if-it-is-a-good-array",
   "topicTags": "['Array', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.869124326608215",
   "difficulty": "Easy",
   "frontendQuestionId": 1251,
   "isFavor": false,
   "paidOnly": false,
   "title": "Average Selling Price",
   "titleSlug": "average-selling-price",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.14397223560215",
   "difficulty": "Easy",
   "frontendQuestionId": 1252,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cells with Odd Values in a Matrix",
   "titleSlug": "cells-with-odd-values-in-a-matrix",
   "topicTags": "['Array', 'Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.49182031044054",
   "difficulty": "Medium",
   "frontendQuestionId": 1253,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reconstruct a 2-Row Binary Matrix",
   "titleSlug": "reconstruct-a-2-row-binary-matrix",
   "topicTags": "['Array', 'Greedy', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.67404281185763",
   "difficulty": "Medium",
   "frontendQuestionId": 1254,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Closed Islands",
   "titleSlug": "number-of-closed-islands",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.60970693333682",
   "difficulty": "Hard",
   "frontendQuestionId": 1255,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Score Words Formed by Letters",
   "titleSlug": "maximum-score-words-formed-by-letters",
   "topicTags": "['Array', 'String', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.07111644246423",
   "difficulty": "Medium",
   "frontendQuestionId": 1256,
   "isFavor": false,
   "paidOnly": true,
   "title": "Encode Number",
   "titleSlug": "encode-number",
   "topicTags": "['Math', 'String', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.88072803414673",
   "difficulty": "Medium",
   "frontendQuestionId": 1257,
   "isFavor": false,
   "paidOnly": true,
   "title": "Smallest Common Region",
   "titleSlug": "smallest-common-region",
   "topicTags": "['Array', 'Hash Table', 'String', 'Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.48189875319213",
   "difficulty": "Medium",
   "frontendQuestionId": 1258,
   "isFavor": false,
   "paidOnly": true,
   "title": "Synonymous Sentences",
   "titleSlug": "synonymous-sentences",
   "topicTags": "['Array', 'Hash Table', 'String', 'Backtracking', 'Union Find']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.952374282112345",
   "difficulty": "Hard",
   "frontendQuestionId": 1259,
   "isFavor": false,
   "paidOnly": true,
   "title": "Handshakes That Don't Cross",
   "titleSlug": "handshakes-that-dont-cross",
   "topicTags": "['Math', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.5911541087023",
   "difficulty": "Easy",
   "frontendQuestionId": 1260,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shift 2D Grid",
   "titleSlug": "shift-2d-grid",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.77613251900347",
   "difficulty": "Medium",
   "frontendQuestionId": 1261,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Elements in a Contaminated Binary Tree",
   "titleSlug": "find-elements-in-a-contaminated-binary-tree",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.732128867603",
   "difficulty": "Medium",
   "frontendQuestionId": 1262,
   "isFavor": false,
   "paidOnly": false,
   "title": "Greatest Sum Divisible by Three",
   "titleSlug": "greatest-sum-divisible-by-three",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.911900065746224",
   "difficulty": "Hard",
   "frontendQuestionId": 1263,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Moves to Move a Box to Their Target Location",
   "titleSlug": "minimum-moves-to-move-a-box-to-their-target-location",
   "topicTags": "['Array', 'Breadth-First Search', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.37037284600885",
   "difficulty": "Medium",
   "frontendQuestionId": 1264,
   "isFavor": false,
   "paidOnly": true,
   "title": "Page Recommendations",
   "titleSlug": "page-recommendations",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "94.04861693210394",
   "difficulty": "Medium",
   "frontendQuestionId": 1265,
   "isFavor": false,
   "paidOnly": true,
   "title": "Print Immutable Linked List in Reverse",
   "titleSlug": "print-immutable-linked-list-in-reverse",
   "topicTags": "['Linked List', 'Two Pointers', 'Stack', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.5036631449063",
   "difficulty": "Easy",
   "frontendQuestionId": 1266,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time Visiting All Points",
   "titleSlug": "minimum-time-visiting-all-points",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.4446905087248",
   "difficulty": "Medium",
   "frontendQuestionId": 1267,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Servers that Communicate",
   "titleSlug": "count-servers-that-communicate",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.01592024893793",
   "difficulty": "Medium",
   "frontendQuestionId": 1268,
   "isFavor": false,
   "paidOnly": false,
   "title": "Search Suggestions System",
   "titleSlug": "search-suggestions-system",
   "topicTags": "['Array', 'String', 'Binary Search', 'Trie', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.08992155119844",
   "difficulty": "Hard",
   "frontendQuestionId": 1269,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Stay in the Same Place After Some Steps",
   "titleSlug": "number-of-ways-to-stay-in-the-same-place-after-some-steps",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.48569388763798",
   "difficulty": "Medium",
   "frontendQuestionId": 1270,
   "isFavor": false,
   "paidOnly": true,
   "title": "All People Report to the Given Manager",
   "titleSlug": "all-people-report-to-the-given-manager",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.334135772749164",
   "difficulty": "Easy",
   "frontendQuestionId": 1271,
   "isFavor": false,
   "paidOnly": true,
   "title": "Hexspeak",
   "titleSlug": "hexspeak",
   "topicTags": "['Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.65030965514907",
   "difficulty": "Medium",
   "frontendQuestionId": 1272,
   "isFavor": false,
   "paidOnly": true,
   "title": "Remove Interval",
   "titleSlug": "remove-interval",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "61.20766988113927",
   "difficulty": "Medium",
   "frontendQuestionId": 1273,
   "isFavor": false,
   "paidOnly": true,
   "title": "Delete Tree Nodes",
   "titleSlug": "delete-tree-nodes",
   "topicTags": "['Array', 'Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.7791136151901",
   "difficulty": "Hard",
   "frontendQuestionId": 1274,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Ships in a Rectangle",
   "titleSlug": "number-of-ships-in-a-rectangle",
   "topicTags": "['Array', 'Divide and Conquer', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.11718548495493",
   "difficulty": "Easy",
   "frontendQuestionId": 1275,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Winner on a Tic Tac Toe Game",
   "titleSlug": "find-winner-on-a-tic-tac-toe-game",
   "topicTags": "['Array', 'Hash Table', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.31752025264314",
   "difficulty": "Medium",
   "frontendQuestionId": 1276,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Burgers with No Waste of Ingredients",
   "titleSlug": "number-of-burgers-with-no-waste-of-ingredients",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.56983650100068",
   "difficulty": "Medium",
   "frontendQuestionId": 1277,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Square Submatrices with All Ones",
   "titleSlug": "count-square-submatrices-with-all-ones",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.40761136046468",
   "difficulty": "Hard",
   "frontendQuestionId": 1278,
   "isFavor": false,
   "paidOnly": false,
   "title": "Palindrome Partitioning III",
   "titleSlug": "palindrome-partitioning-iii",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.8631380609798",
   "difficulty": "Easy",
   "frontendQuestionId": 1279,
   "isFavor": false,
   "paidOnly": true,
   "title": "Traffic Light Controlled Intersection",
   "titleSlug": "traffic-light-controlled-intersection",
   "topicTags": "['Concurrency']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.38628897291266",
   "difficulty": "Easy",
   "frontendQuestionId": 1280,
   "isFavor": false,
   "paidOnly": false,
   "title": "Students and Examinations",
   "titleSlug": "students-and-examinations",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.65590388003632",
   "difficulty": "Easy",
   "frontendQuestionId": 1281,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subtract the Product and Sum of Digits of an Integer",
   "titleSlug": "subtract-the-product-and-sum-of-digits-of-an-integer",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.34849800312554",
   "difficulty": "Medium",
   "frontendQuestionId": 1282,
   "isFavor": false,
   "paidOnly": false,
   "title": "Group the People Given the Group Size They Belong To",
   "titleSlug": "group-the-people-given-the-group-size-they-belong-to",
   "topicTags": "['Array', 'Hash Table', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.942430423630135",
   "difficulty": "Medium",
   "frontendQuestionId": 1283,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Smallest Divisor Given a Threshold",
   "titleSlug": "find-the-smallest-divisor-given-a-threshold",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.85906719304859",
   "difficulty": "Hard",
   "frontendQuestionId": 1284,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Flips to Convert Binary Matrix to Zero Matrix",
   "titleSlug": "minimum-number-of-flips-to-convert-binary-matrix-to-zero-matrix",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.0125578926172",
   "difficulty": "Medium",
   "frontendQuestionId": 1285,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Start and End Number of Continuous Ranges",
   "titleSlug": "find-the-start-and-end-number-of-continuous-ranges",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.46597036952943",
   "difficulty": "Medium",
   "frontendQuestionId": 1286,
   "isFavor": false,
   "paidOnly": false,
   "title": "Iterator for Combination",
   "titleSlug": "iterator-for-combination",
   "topicTags": "['String', 'Backtracking', 'Design', 'Iterator']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.04620691257684",
   "difficulty": "Easy",
   "frontendQuestionId": 1287,
   "isFavor": false,
   "paidOnly": false,
   "title": "Element Appearing More Than 25% In Sorted Array",
   "titleSlug": "element-appearing-more-than-25-in-sorted-array",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.16855898575709",
   "difficulty": "Medium",
   "frontendQuestionId": 1288,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Covered Intervals",
   "titleSlug": "remove-covered-intervals",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.966254332043206",
   "difficulty": "Hard",
   "frontendQuestionId": 1289,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Falling Path Sum II",
   "titleSlug": "minimum-falling-path-sum-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.15532648955003",
   "difficulty": "Easy",
   "frontendQuestionId": 1290,
   "isFavor": false,
   "paidOnly": false,
   "title": "Convert Binary Number in a Linked List to Integer",
   "titleSlug": "convert-binary-number-in-a-linked-list-to-integer",
   "topicTags": "['Linked List', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.26316092235034",
   "difficulty": "Medium",
   "frontendQuestionId": 1291,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sequential Digits",
   "titleSlug": "sequential-digits",
   "topicTags": "['Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.44344257557366",
   "difficulty": "Medium",
   "frontendQuestionId": 1292,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Side Length of a Square with Sum Less than or Equal to Threshold",
   "titleSlug": "maximum-side-length-of-a-square-with-sum-less-than-or-equal-to-threshold",
   "topicTags": "['Array', 'Binary Search', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.46688230452357",
   "difficulty": "Hard",
   "frontendQuestionId": 1293,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Path in a Grid with Obstacles Elimination",
   "titleSlug": "shortest-path-in-a-grid-with-obstacles-elimination",
   "topicTags": "['Array', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.01573963754939",
   "difficulty": "Easy",
   "frontendQuestionId": 1294,
   "isFavor": false,
   "paidOnly": true,
   "title": "Weather Type in Each Country",
   "titleSlug": "weather-type-in-each-country",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.76878511689246",
   "difficulty": "Easy",
   "frontendQuestionId": 1295,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Numbers with Even Number of Digits",
   "titleSlug": "find-numbers-with-even-number-of-digits",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.56990096668977",
   "difficulty": "Medium",
   "frontendQuestionId": 1296,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divide Array in Sets of K Consecutive Numbers",
   "titleSlug": "divide-array-in-sets-of-k-consecutive-numbers",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.055268815535186",
   "difficulty": "Medium",
   "frontendQuestionId": 1297,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Occurrences of a Substring",
   "titleSlug": "maximum-number-of-occurrences-of-a-substring",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.49432667293961",
   "difficulty": "Hard",
   "frontendQuestionId": 1298,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Candies You Can Get from Boxes",
   "titleSlug": "maximum-candies-you-can-get-from-boxes",
   "topicTags": "['Array', 'Breadth-First Search', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.35409431255727",
   "difficulty": "Easy",
   "frontendQuestionId": 1299,
   "isFavor": false,
   "paidOnly": false,
   "title": "Replace Elements with Greatest Element on Right Side",
   "titleSlug": "replace-elements-with-greatest-element-on-right-side",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.02160878164143",
   "difficulty": "Medium",
   "frontendQuestionId": 1300,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Mutated Array Closest to Target",
   "titleSlug": "sum-of-mutated-array-closest-to-target",
   "topicTags": "['Array', 'Binary Search', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.75058799468248",
   "difficulty": "Hard",
   "frontendQuestionId": 1301,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Paths with Max Score",
   "titleSlug": "number-of-paths-with-max-score",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.27408004449535",
   "difficulty": "Medium",
   "frontendQuestionId": 1302,
   "isFavor": false,
   "paidOnly": false,
   "title": "Deepest Leaves Sum",
   "titleSlug": "deepest-leaves-sum",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.6604811319646",
   "difficulty": "Easy",
   "frontendQuestionId": 1303,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Team Size",
   "titleSlug": "find-the-team-size",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.14747050716299",
   "difficulty": "Easy",
   "frontendQuestionId": 1304,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find N Unique Integers Sum up to Zero",
   "titleSlug": "find-n-unique-integers-sum-up-to-zero",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.97565285421388",
   "difficulty": "Medium",
   "frontendQuestionId": 1305,
   "isFavor": false,
   "paidOnly": false,
   "title": "All Elements in Two Binary Search Trees",
   "titleSlug": "all-elements-in-two-binary-search-trees",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Search Tree', 'Sorting', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.8506506287044",
   "difficulty": "Medium",
   "frontendQuestionId": 1306,
   "isFavor": false,
   "paidOnly": false,
   "title": "Jump Game III",
   "titleSlug": "jump-game-iii",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "34.70169071434894",
   "difficulty": "Hard",
   "frontendQuestionId": 1307,
   "isFavor": false,
   "paidOnly": false,
   "title": "Verbal Arithmetic Puzzle",
   "titleSlug": "verbal-arithmetic-puzzle",
   "topicTags": "['Array', 'Math', 'String', 'Backtracking']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.38529878993508",
   "difficulty": "Medium",
   "frontendQuestionId": 1308,
   "isFavor": false,
   "paidOnly": true,
   "title": "Running Total for Different Genders",
   "titleSlug": "running-total-for-different-genders",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.10693873253032",
   "difficulty": "Easy",
   "frontendQuestionId": 1309,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decrypt String from Alphabet to Integer Mapping",
   "titleSlug": "decrypt-string-from-alphabet-to-integer-mapping",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.44323164330265",
   "difficulty": "Medium",
   "frontendQuestionId": 1310,
   "isFavor": false,
   "paidOnly": false,
   "title": "XOR Queries of a Subarray",
   "titleSlug": "xor-queries-of-a-subarray",
   "topicTags": "['Array', 'Bit Manipulation', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.89990953734815",
   "difficulty": "Medium",
   "frontendQuestionId": 1311,
   "isFavor": false,
   "paidOnly": false,
   "title": "Get Watched Videos by Your Friends",
   "titleSlug": "get-watched-videos-by-your-friends",
   "topicTags": "['Array', 'Hash Table', 'Breadth-First Search', 'Graph', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.03855649491055",
   "difficulty": "Hard",
   "frontendQuestionId": 1312,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Insertion Steps to Make a String Palindrome",
   "titleSlug": "minimum-insertion-steps-to-make-a-string-palindrome",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.97926371149511",
   "difficulty": "Easy",
   "frontendQuestionId": 1313,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decompress Run-Length Encoded List",
   "titleSlug": "decompress-run-length-encoded-list",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.82947981378548",
   "difficulty": "Medium",
   "frontendQuestionId": 1314,
   "isFavor": false,
   "paidOnly": false,
   "title": "Matrix Block Sum",
   "titleSlug": "matrix-block-sum",
   "topicTags": "['Array', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.65964130104368",
   "difficulty": "Medium",
   "frontendQuestionId": 1315,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Nodes with Even-Valued Grandparent",
   "titleSlug": "sum-of-nodes-with-even-valued-grandparent",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.72137496327556",
   "difficulty": "Hard",
   "frontendQuestionId": 1316,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distinct Echo Substrings",
   "titleSlug": "distinct-echo-substrings",
   "topicTags": "['String', 'Trie', 'Rolling Hash', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.07235906697922",
   "difficulty": "Easy",
   "frontendQuestionId": 1317,
   "isFavor": false,
   "paidOnly": false,
   "title": "Convert Integer to the Sum of Two No-Zero Integers",
   "titleSlug": "convert-integer-to-the-sum-of-two-no-zero-integers",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.50470899700534",
   "difficulty": "Medium",
   "frontendQuestionId": 1318,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Flips to Make a OR b Equal to c",
   "titleSlug": "minimum-flips-to-make-a-or-b-equal-to-c",
   "topicTags": "['Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.20480161643248",
   "difficulty": "Medium",
   "frontendQuestionId": 1319,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Operations to Make Network Connected",
   "titleSlug": "number-of-operations-to-make-network-connected",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.03548711652257",
   "difficulty": "Hard",
   "frontendQuestionId": 1320,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Distance to Type a Word Using Two Fingers",
   "titleSlug": "minimum-distance-to-type-a-word-using-two-fingers",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.99026995195203",
   "difficulty": "Medium",
   "frontendQuestionId": 1321,
   "isFavor": false,
   "paidOnly": false,
   "title": "Restaurant Growth",
   "titleSlug": "restaurant-growth",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.284108038648775",
   "difficulty": "Easy",
   "frontendQuestionId": 1322,
   "isFavor": false,
   "paidOnly": true,
   "title": "Ads Performance",
   "titleSlug": "ads-performance",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.52496910178041",
   "difficulty": "Easy",
   "frontendQuestionId": 1323,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum 69 Number",
   "titleSlug": "maximum-69-number",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.91436495358842",
   "difficulty": "Medium",
   "frontendQuestionId": 1324,
   "isFavor": false,
   "paidOnly": false,
   "title": "Print Words Vertically",
   "titleSlug": "print-words-vertically",
   "topicTags": "['Array', 'String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.28276057593001",
   "difficulty": "Medium",
   "frontendQuestionId": 1325,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Leaves With a Given Value",
   "titleSlug": "delete-leaves-with-a-given-value",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.70397111913357",
   "difficulty": "Hard",
   "frontendQuestionId": 1326,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Taps to Open to Water a Garden",
   "titleSlug": "minimum-number-of-taps-to-open-to-water-a-garden",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.81897429972798",
   "difficulty": "Easy",
   "frontendQuestionId": 1327,
   "isFavor": false,
   "paidOnly": false,
   "title": "List the Products Ordered in a Period",
   "titleSlug": "list-the-products-ordered-in-a-period",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.518281229606345",
   "difficulty": "Medium",
   "frontendQuestionId": 1328,
   "isFavor": false,
   "paidOnly": false,
   "title": "Break a Palindrome",
   "titleSlug": "break-a-palindrome",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.94078565680385",
   "difficulty": "Medium",
   "frontendQuestionId": 1329,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort the Matrix Diagonally",
   "titleSlug": "sort-the-matrix-diagonally",
   "topicTags": "['Array', 'Sorting', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "42.24004753416518",
   "difficulty": "Hard",
   "frontendQuestionId": 1330,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Subarray To Maximize Array Value",
   "titleSlug": "reverse-subarray-to-maximize-array-value",
   "topicTags": "['Array', 'Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.62256527594745",
   "difficulty": "Easy",
   "frontendQuestionId": 1331,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rank Transform of an Array",
   "titleSlug": "rank-transform-of-an-array",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.5793421193614",
   "difficulty": "Easy",
   "frontendQuestionId": 1332,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Palindromic Subsequences",
   "titleSlug": "remove-palindromic-subsequences",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.97932659560759",
   "difficulty": "Medium",
   "frontendQuestionId": 1333,
   "isFavor": false,
   "paidOnly": false,
   "title": "Filter Restaurants by Vegan-Friendly, Price and Distance",
   "titleSlug": "filter-restaurants-by-vegan-friendly-price-and-distance",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.55491940156084",
   "difficulty": "Medium",
   "frontendQuestionId": 1334,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the City With the Smallest Number of Neighbors at a Threshold Distance",
   "titleSlug": "find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance",
   "topicTags": "['Dynamic Programming', 'Graph', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.633501316625804",
   "difficulty": "Hard",
   "frontendQuestionId": 1335,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Difficulty of a Job Schedule",
   "titleSlug": "minimum-difficulty-of-a-job-schedule",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.0612279454096",
   "difficulty": "Hard",
   "frontendQuestionId": 1336,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Transactions per Visit",
   "titleSlug": "number-of-transactions-per-visit",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.89150569532823",
   "difficulty": "Easy",
   "frontendQuestionId": 1337,
   "isFavor": false,
   "paidOnly": false,
   "title": "The K Weakest Rows in a Matrix",
   "titleSlug": "the-k-weakest-rows-in-a-matrix",
   "topicTags": "['Array', 'Binary Search', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.0656907188273",
   "difficulty": "Medium",
   "frontendQuestionId": 1338,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reduce Array Size to The Half",
   "titleSlug": "reduce-array-size-to-the-half",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.83125522556254",
   "difficulty": "Medium",
   "frontendQuestionId": 1339,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Product of Splitted Binary Tree",
   "titleSlug": "maximum-product-of-splitted-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.849407196838385",
   "difficulty": "Hard",
   "frontendQuestionId": 1340,
   "isFavor": false,
   "paidOnly": false,
   "title": "Jump Game V",
   "titleSlug": "jump-game-v",
   "topicTags": "['Array', 'Dynamic Programming', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.27122782025955",
   "difficulty": "Medium",
   "frontendQuestionId": 1341,
   "isFavor": false,
   "paidOnly": false,
   "title": "Movie Rating",
   "titleSlug": "movie-rating",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.55795138797583",
   "difficulty": "Easy",
   "frontendQuestionId": 1342,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Steps to Reduce a Number to Zero",
   "titleSlug": "number-of-steps-to-reduce-a-number-to-zero",
   "topicTags": "['Math', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "69.91039971938658",
   "difficulty": "Medium",
   "frontendQuestionId": 1343,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold",
   "titleSlug": "number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.1327365482722",
   "difficulty": "Medium",
   "frontendQuestionId": 1344,
   "isFavor": false,
   "paidOnly": false,
   "title": "Angle Between Hands of a Clock",
   "titleSlug": "angle-between-hands-of-a-clock",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.06522680263601",
   "difficulty": "Hard",
   "frontendQuestionId": 1345,
   "isFavor": false,
   "paidOnly": false,
   "title": "Jump Game IV",
   "titleSlug": "jump-game-iv",
   "topicTags": "['Array', 'Hash Table', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.119870865804984",
   "difficulty": "Easy",
   "frontendQuestionId": 1346,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If N and Its Double Exist",
   "titleSlug": "check-if-n-and-its-double-exist",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.1019032982622",
   "difficulty": "Medium",
   "frontendQuestionId": 1347,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Steps to Make Two Strings Anagram",
   "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.18159254381522",
   "difficulty": "Medium",
   "frontendQuestionId": 1348,
   "isFavor": false,
   "paidOnly": false,
   "title": "Tweet Counts Per Frequency",
   "titleSlug": "tweet-counts-per-frequency",
   "topicTags": "['Hash Table', 'Binary Search', 'Design', 'Sorting', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.90323442929699",
   "difficulty": "Hard",
   "frontendQuestionId": 1349,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Students Taking Exam",
   "titleSlug": "maximum-students-taking-exam",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Matrix', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.8953488372093",
   "difficulty": "Easy",
   "frontendQuestionId": 1350,
   "isFavor": false,
   "paidOnly": true,
   "title": "Students With Invalid Departments",
   "titleSlug": "students-with-invalid-departments",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.61902604463315",
   "difficulty": "Easy",
   "frontendQuestionId": 1351,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Negative Numbers in a Sorted Matrix",
   "titleSlug": "count-negative-numbers-in-a-sorted-matrix",
   "topicTags": "['Array', 'Binary Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.86754684181021",
   "difficulty": "Medium",
   "frontendQuestionId": 1352,
   "isFavor": false,
   "paidOnly": false,
   "title": "Product of the Last K Numbers",
   "titleSlug": "product-of-the-last-k-numbers",
   "topicTags": "['Array', 'Math', 'Design', 'Data Stream', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.81473144618993",
   "difficulty": "Medium",
   "frontendQuestionId": 1353,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Events That Can Be Attended",
   "titleSlug": "maximum-number-of-events-that-can-be-attended",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.235370747799045",
   "difficulty": "Hard",
   "frontendQuestionId": 1354,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct Target Array With Multiple Sums",
   "titleSlug": "construct-target-array-with-multiple-sums",
   "topicTags": "['Array', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.37542008858027",
   "difficulty": "Medium",
   "frontendQuestionId": 1355,
   "isFavor": false,
   "paidOnly": true,
   "title": "Activity Participants",
   "titleSlug": "activity-participants",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.59453784854222",
   "difficulty": "Easy",
   "frontendQuestionId": 1356,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort Integers by The Number of 1 Bits",
   "titleSlug": "sort-integers-by-the-number-of-1-bits",
   "topicTags": "['Array', 'Bit Manipulation', 'Sorting', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.55301892460199",
   "difficulty": "Medium",
   "frontendQuestionId": 1357,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Discount Every n Orders",
   "titleSlug": "apply-discount-every-n-orders",
   "topicTags": "['Array', 'Hash Table', 'Design']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.96306600820756",
   "difficulty": "Medium",
   "frontendQuestionId": 1358,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Substrings Containing All Three Characters",
   "titleSlug": "number-of-substrings-containing-all-three-characters",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.87117087734264",
   "difficulty": "Hard",
   "frontendQuestionId": 1359,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count All Valid Pickup and Delivery Options",
   "titleSlug": "count-all-valid-pickup-and-delivery-options",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.10280312801005",
   "difficulty": "Easy",
   "frontendQuestionId": 1360,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Days Between Two Dates",
   "titleSlug": "number-of-days-between-two-dates",
   "topicTags": "['Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.85955026501611",
   "difficulty": "Medium",
   "frontendQuestionId": 1361,
   "isFavor": false,
   "paidOnly": false,
   "title": "Validate Binary Tree Nodes",
   "titleSlug": "validate-binary-tree-nodes",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.16167664670659",
   "difficulty": "Medium",
   "frontendQuestionId": 1362,
   "isFavor": false,
   "paidOnly": false,
   "title": "Closest Divisors",
   "titleSlug": "closest-divisors",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.68919973250111",
   "difficulty": "Hard",
   "frontendQuestionId": 1363,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Multiple of Three",
   "titleSlug": "largest-multiple-of-three",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.22150624244865",
   "difficulty": "Medium",
   "frontendQuestionId": 1364,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Trusted Contacts of a Customer",
   "titleSlug": "number-of-trusted-contacts-of-a-customer",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.06603907388089",
   "difficulty": "Easy",
   "frontendQuestionId": 1365,
   "isFavor": false,
   "paidOnly": false,
   "title": "How Many Numbers Are Smaller Than the Current Number",
   "titleSlug": "how-many-numbers-are-smaller-than-the-current-number",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Counting Sort']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.18462396274066",
   "difficulty": "Medium",
   "frontendQuestionId": 1366,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rank Teams by Votes",
   "titleSlug": "rank-teams-by-votes",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.94580228750415",
   "difficulty": "Medium",
   "frontendQuestionId": 1367,
   "isFavor": false,
   "paidOnly": false,
   "title": "Linked List in Binary Tree",
   "titleSlug": "linked-list-in-binary-tree",
   "topicTags": "['Linked List', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.6825249863495",
   "difficulty": "Hard",
   "frontendQuestionId": 1368,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Make at Least One Valid Path in a Grid",
   "titleSlug": "minimum-cost-to-make-at-least-one-valid-path-in-a-grid",
   "topicTags": "['Array', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.5004946437152",
   "difficulty": "Hard",
   "frontendQuestionId": 1369,
   "isFavor": false,
   "paidOnly": true,
   "title": "Get the Second Most Recent Activity",
   "titleSlug": "get-the-second-most-recent-activity",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.55631678956819",
   "difficulty": "Easy",
   "frontendQuestionId": 1370,
   "isFavor": false,
   "paidOnly": false,
   "title": "Increasing Decreasing String",
   "titleSlug": "increasing-decreasing-string",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.79312997827661",
   "difficulty": "Medium",
   "frontendQuestionId": 1371,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Longest Substring Containing Vowels in Even Counts",
   "titleSlug": "find-the-longest-substring-containing-vowels-in-even-counts",
   "topicTags": "['Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.41505621545167",
   "difficulty": "Medium",
   "frontendQuestionId": 1372,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest ZigZag Path in a Binary Tree",
   "titleSlug": "longest-zigzag-path-in-a-binary-tree",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.49029829670406",
   "difficulty": "Hard",
   "frontendQuestionId": 1373,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum BST in Binary Tree",
   "titleSlug": "maximum-sum-bst-in-binary-tree",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.96960704972574",
   "difficulty": "Easy",
   "frontendQuestionId": 1374,
   "isFavor": false,
   "paidOnly": false,
   "title": "Generate a String With Characters That Have Odd Counts",
   "titleSlug": "generate-a-string-with-characters-that-have-odd-counts",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.67898077325461",
   "difficulty": "Medium",
   "frontendQuestionId": 1375,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Times Binary String Is Prefix-Aligned",
   "titleSlug": "number-of-times-binary-string-is-prefix-aligned",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.17653876716419",
   "difficulty": "Medium",
   "frontendQuestionId": 1376,
   "isFavor": false,
   "paidOnly": false,
   "title": "Time Needed to Inform All Employees",
   "titleSlug": "time-needed-to-inform-all-employees",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.692124350202384",
   "difficulty": "Hard",
   "frontendQuestionId": 1377,
   "isFavor": false,
   "paidOnly": false,
   "title": "Frog Position After T Seconds",
   "titleSlug": "frog-position-after-t-seconds",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.60829368013094",
   "difficulty": "Easy",
   "frontendQuestionId": 1378,
   "isFavor": false,
   "paidOnly": false,
   "title": "Replace Employee ID With The Unique Identifier",
   "titleSlug": "replace-employee-id-with-the-unique-identifier",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.73341687437173",
   "difficulty": "Easy",
   "frontendQuestionId": 1379,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find a Corresponding Node of a Binary Tree in a Clone of That Tree",
   "titleSlug": "find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.88002762209886",
   "difficulty": "Easy",
   "frontendQuestionId": 1380,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lucky Numbers in a Matrix",
   "titleSlug": "lucky-numbers-in-a-matrix",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.45134105826108",
   "difficulty": "Medium",
   "frontendQuestionId": 1381,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design a Stack With Increment Operation",
   "titleSlug": "design-a-stack-with-increment-operation",
   "topicTags": "['Array', 'Stack', 'Design']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.62726170249627",
   "difficulty": "Medium",
   "frontendQuestionId": 1382,
   "isFavor": false,
   "paidOnly": false,
   "title": "Balance a Binary Search Tree",
   "titleSlug": "balance-a-binary-search-tree",
   "topicTags": "['Divide and Conquer', 'Greedy', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.505864689875196",
   "difficulty": "Hard",
   "frontendQuestionId": 1383,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Performance of a Team",
   "titleSlug": "maximum-performance-of-a-team",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.43967443877381",
   "difficulty": "Hard",
   "frontendQuestionId": 1384,
   "isFavor": false,
   "paidOnly": true,
   "title": "Total Sales Amount by Year",
   "titleSlug": "total-sales-amount-by-year",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.91572004397216",
   "difficulty": "Easy",
   "frontendQuestionId": 1385,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Distance Value Between Two Arrays",
   "titleSlug": "find-the-distance-value-between-two-arrays",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.55003120778061",
   "difficulty": "Medium",
   "frontendQuestionId": 1386,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cinema Seat Allocation",
   "titleSlug": "cinema-seat-allocation",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.6345092738999",
   "difficulty": "Medium",
   "frontendQuestionId": 1387,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort Integers by The Power Value",
   "titleSlug": "sort-integers-by-the-power-value",
   "topicTags": "['Dynamic Programming', 'Memoization', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.695347387223435",
   "difficulty": "Hard",
   "frontendQuestionId": 1388,
   "isFavor": false,
   "paidOnly": false,
   "title": "Pizza With 3n Slices",
   "titleSlug": "pizza-with-3n-slices",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.17621440948444",
   "difficulty": "Easy",
   "frontendQuestionId": 1389,
   "isFavor": false,
   "paidOnly": false,
   "title": "Create Target Array in the Given Order",
   "titleSlug": "create-target-array-in-the-given-order",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.502941146692855",
   "difficulty": "Medium",
   "frontendQuestionId": 1390,
   "isFavor": false,
   "paidOnly": false,
   "title": "Four Divisors",
   "titleSlug": "four-divisors",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.69979497617889",
   "difficulty": "Medium",
   "frontendQuestionId": 1391,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if There is a Valid Path in a Grid",
   "titleSlug": "check-if-there-is-a-valid-path-in-a-grid",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.352933932639615",
   "difficulty": "Hard",
   "frontendQuestionId": 1392,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Happy Prefix",
   "titleSlug": "longest-happy-prefix",
   "topicTags": "['String', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.99085389090725",
   "difficulty": "Medium",
   "frontendQuestionId": 1393,
   "isFavor": false,
   "paidOnly": false,
   "title": "Capital Gain/Loss",
   "titleSlug": "capital-gainloss",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.96037629828345",
   "difficulty": "Easy",
   "frontendQuestionId": 1394,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Lucky Integer in an Array",
   "titleSlug": "find-lucky-integer-in-an-array",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.07411954549737",
   "difficulty": "Medium",
   "frontendQuestionId": 1395,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Teams",
   "titleSlug": "count-number-of-teams",
   "topicTags": "['Array', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.85156501118948",
   "difficulty": "Medium",
   "frontendQuestionId": 1396,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Underground System",
   "titleSlug": "design-underground-system",
   "topicTags": "['Hash Table', 'String', 'Design']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.31904947409427",
   "difficulty": "Hard",
   "frontendQuestionId": 1397,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All Good Strings",
   "titleSlug": "find-all-good-strings",
   "topicTags": "['String', 'Dynamic Programming', 'String Matching']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.07907102096296",
   "difficulty": "Medium",
   "frontendQuestionId": 1398,
   "isFavor": false,
   "paidOnly": true,
   "title": "Customers Who Bought Products A and B but Not C",
   "titleSlug": "customers-who-bought-products-a-and-b-but-not-c",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.50881674870709",
   "difficulty": "Easy",
   "frontendQuestionId": 1399,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Largest Group",
   "titleSlug": "count-largest-group",
   "topicTags": "['Hash Table', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.73353868130887",
   "difficulty": "Medium",
   "frontendQuestionId": 1400,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct K Palindrome Strings",
   "titleSlug": "construct-k-palindrome-strings",
   "topicTags": "['Hash Table', 'String', 'Greedy', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.61926208998681",
   "difficulty": "Medium",
   "frontendQuestionId": 1401,
   "isFavor": false,
   "paidOnly": false,
   "title": "Circle and Rectangle Overlapping",
   "titleSlug": "circle-and-rectangle-overlapping",
   "topicTags": "['Math', 'Geometry']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.27332814930016",
   "difficulty": "Hard",
   "frontendQuestionId": 1402,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reducing Dishes",
   "titleSlug": "reducing-dishes",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.80011472206786",
   "difficulty": "Easy",
   "frontendQuestionId": 1403,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Subsequence in Non-Increasing Order",
   "titleSlug": "minimum-subsequence-in-non-increasing-order",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.39011099899092",
   "difficulty": "Medium",
   "frontendQuestionId": 1404,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Steps to Reduce a Number in Binary Representation to One",
   "titleSlug": "number-of-steps-to-reduce-a-number-in-binary-representation-to-one",
   "topicTags": "['String', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.46616889123827",
   "difficulty": "Medium",
   "frontendQuestionId": 1405,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Happy String",
   "titleSlug": "longest-happy-string",
   "topicTags": "['String', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.215464042527394",
   "difficulty": "Hard",
   "frontendQuestionId": 1406,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stone Game III",
   "titleSlug": "stone-game-iii",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.1403385683703",
   "difficulty": "Easy",
   "frontendQuestionId": 1407,
   "isFavor": false,
   "paidOnly": false,
   "title": "Top Travellers",
   "titleSlug": "top-travellers",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.84786827107108",
   "difficulty": "Easy",
   "frontendQuestionId": 1408,
   "isFavor": false,
   "paidOnly": false,
   "title": "String Matching in an Array",
   "titleSlug": "string-matching-in-an-array",
   "topicTags": "['Array', 'String', 'String Matching']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.46119555459245",
   "difficulty": "Medium",
   "frontendQuestionId": 1409,
   "isFavor": false,
   "paidOnly": false,
   "title": "Queries on a Permutation With Key",
   "titleSlug": "queries-on-a-permutation-with-key",
   "topicTags": "['Array', 'Binary Indexed Tree', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.232061883168846",
   "difficulty": "Medium",
   "frontendQuestionId": 1410,
   "isFavor": false,
   "paidOnly": false,
   "title": "HTML Entity Parser",
   "titleSlug": "html-entity-parser",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.18278281704603",
   "difficulty": "Hard",
   "frontendQuestionId": 1411,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Paint N × 3 Grid",
   "titleSlug": "number-of-ways-to-paint-n-3-grid",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.56045635882331",
   "difficulty": "Hard",
   "frontendQuestionId": 1412,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Quiet Students in All Exams",
   "titleSlug": "find-the-quiet-students-in-all-exams",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.83611547210919",
   "difficulty": "Easy",
   "frontendQuestionId": 1413,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Value to Get Positive Step by Step Sum",
   "titleSlug": "minimum-value-to-get-positive-step-by-step-sum",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.23264814539155",
   "difficulty": "Medium",
   "frontendQuestionId": 1414,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Minimum Number of Fibonacci Numbers Whose Sum Is K",
   "titleSlug": "find-the-minimum-number-of-fibonacci-numbers-whose-sum-is-k",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.08268494658627",
   "difficulty": "Medium",
   "frontendQuestionId": 1415,
   "isFavor": false,
   "paidOnly": false,
   "title": "The k-th Lexicographical String of All Happy Strings of Length n",
   "titleSlug": "the-k-th-lexicographical-string-of-all-happy-strings-of-length-n",
   "topicTags": "['String', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.99316050415148",
   "difficulty": "Hard",
   "frontendQuestionId": 1416,
   "isFavor": false,
   "paidOnly": false,
   "title": "Restore The Array",
   "titleSlug": "restore-the-array",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.01729684629394",
   "difficulty": "Easy",
   "frontendQuestionId": 1417,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reformat The String",
   "titleSlug": "reformat-the-string",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.51335635108123",
   "difficulty": "Medium",
   "frontendQuestionId": 1418,
   "isFavor": false,
   "paidOnly": false,
   "title": "Display Table of Food Orders in a Restaurant",
   "titleSlug": "display-table-of-food-orders-in-a-restaurant",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.66663111300731",
   "difficulty": "Medium",
   "frontendQuestionId": 1419,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Frogs Croaking",
   "titleSlug": "minimum-number-of-frogs-croaking",
   "topicTags": "['String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.98828734519742",
   "difficulty": "Hard",
   "frontendQuestionId": 1420,
   "isFavor": false,
   "paidOnly": false,
   "title": "Build Array Where You Can Find The Maximum Exactly K Comparisons",
   "titleSlug": "build-array-where-you-can-find-the-maximum-exactly-k-comparisons",
   "topicTags": "['Dynamic Programming', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.98077468383144",
   "difficulty": "Easy",
   "frontendQuestionId": 1421,
   "isFavor": false,
   "paidOnly": true,
   "title": "NPV Queries",
   "titleSlug": "npv-queries",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.16158455905124",
   "difficulty": "Easy",
   "frontendQuestionId": 1422,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Score After Splitting a String",
   "titleSlug": "maximum-score-after-splitting-a-string",
   "topicTags": "['String', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.099014843658026",
   "difficulty": "Medium",
   "frontendQuestionId": 1423,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Points You Can Obtain from Cards",
   "titleSlug": "maximum-points-you-can-obtain-from-cards",
   "topicTags": "['Array', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.819090318435215",
   "difficulty": "Medium",
   "frontendQuestionId": 1424,
   "isFavor": false,
   "paidOnly": false,
   "title": "Diagonal Traverse II",
   "titleSlug": "diagonal-traverse-ii",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.40187198270363",
   "difficulty": "Hard",
   "frontendQuestionId": 1425,
   "isFavor": false,
   "paidOnly": false,
   "title": "Constrained Subsequence Sum",
   "titleSlug": "constrained-subsequence-sum",
   "topicTags": "['Array', 'Dynamic Programming', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Monotonic Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.40309580207922",
   "difficulty": "Easy",
   "frontendQuestionId": 1426,
   "isFavor": false,
   "paidOnly": true,
   "title": "Counting Elements",
   "titleSlug": "counting-elements",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.79502591309148",
   "difficulty": "Easy",
   "frontendQuestionId": 1427,
   "isFavor": false,
   "paidOnly": true,
   "title": "Perform String Shifts",
   "titleSlug": "perform-string-shifts",
   "topicTags": "['Array', 'Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.88763353270782",
   "difficulty": "Medium",
   "frontendQuestionId": 1428,
   "isFavor": false,
   "paidOnly": true,
   "title": "Leftmost Column with at Least a One",
   "titleSlug": "leftmost-column-with-at-least-a-one",
   "topicTags": "['Array', 'Binary Search', 'Matrix', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.14997528195813",
   "difficulty": "Medium",
   "frontendQuestionId": 1429,
   "isFavor": false,
   "paidOnly": true,
   "title": "First Unique Number",
   "titleSlug": "first-unique-number",
   "topicTags": "['Array', 'Hash Table', 'Design', 'Queue', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.229945636386276",
   "difficulty": "Medium",
   "frontendQuestionId": 1430,
   "isFavor": false,
   "paidOnly": true,
   "title": "Check If a String Is a Valid Sequence from Root to Leaves Path in a Binary Tree",
   "titleSlug": "check-if-a-string-is-a-valid-sequence-from-root-to-leaves-path-in-a-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.05728676631837",
   "difficulty": "Easy",
   "frontendQuestionId": 1431,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kids With the Greatest Number of Candies",
   "titleSlug": "kids-with-the-greatest-number-of-candies",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.2500146264407",
   "difficulty": "Medium",
   "frontendQuestionId": 1432,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Difference You Can Get From Changing an Integer",
   "titleSlug": "max-difference-you-can-get-from-changing-an-integer",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.12022527648895",
   "difficulty": "Medium",
   "frontendQuestionId": 1433,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If a String Can Break Another String",
   "titleSlug": "check-if-a-string-can-break-another-string",
   "topicTags": "['String', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.17207585592465",
   "difficulty": "Hard",
   "frontendQuestionId": 1434,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Wear Different Hats to Each Other",
   "titleSlug": "number-of-ways-to-wear-different-hats-to-each-other",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.00372811595932",
   "difficulty": "Easy",
   "frontendQuestionId": 1435,
   "isFavor": false,
   "paidOnly": true,
   "title": "Create a Session Bar Chart",
   "titleSlug": "create-a-session-bar-chart",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.42815069986018",
   "difficulty": "Easy",
   "frontendQuestionId": 1436,
   "isFavor": false,
   "paidOnly": false,
   "title": "Destination City",
   "titleSlug": "destination-city",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.01573748535075",
   "difficulty": "Easy",
   "frontendQuestionId": 1437,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If All 1's Are at Least Length K Places Away",
   "titleSlug": "check-if-all-1s-are-at-least-length-k-places-away",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.61745919706227",
   "difficulty": "Medium",
   "frontendQuestionId": 1438,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit",
   "titleSlug": "longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit",
   "topicTags": "['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Ordered Set', 'Monotonic Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.87447326156439",
   "difficulty": "Hard",
   "frontendQuestionId": 1439,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Kth Smallest Sum of a Matrix With Sorted Rows",
   "titleSlug": "find-the-kth-smallest-sum-of-a-matrix-with-sorted-rows",
   "topicTags": "['Array', 'Binary Search', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.28075319942191",
   "difficulty": "Medium",
   "frontendQuestionId": 1440,
   "isFavor": false,
   "paidOnly": true,
   "title": "Evaluate Boolean Expression",
   "titleSlug": "evaluate-boolean-expression",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.10155040139554",
   "difficulty": "Medium",
   "frontendQuestionId": 1441,
   "isFavor": false,
   "paidOnly": false,
   "title": "Build an Array With Stack Operations",
   "titleSlug": "build-an-array-with-stack-operations",
   "topicTags": "['Array', 'Stack', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.79619617316615",
   "difficulty": "Medium",
   "frontendQuestionId": 1442,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Triplets That Can Form Two Arrays of Equal XOR",
   "titleSlug": "count-triplets-that-can-form-two-arrays-of-equal-xor",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Bit Manipulation', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.81220924455525",
   "difficulty": "Medium",
   "frontendQuestionId": 1443,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Collect All Apples in a Tree",
   "titleSlug": "minimum-time-to-collect-all-apples-in-a-tree",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.65058931276801",
   "difficulty": "Hard",
   "frontendQuestionId": 1444,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways of Cutting a Pizza",
   "titleSlug": "number-of-ways-of-cutting-a-pizza",
   "topicTags": "['Array', 'Dynamic Programming', 'Memoization', 'Matrix', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.0676916049277",
   "difficulty": "Medium",
   "frontendQuestionId": 1445,
   "isFavor": false,
   "paidOnly": true,
   "title": "Apples & Oranges",
   "titleSlug": "apples-oranges",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.07180667720996",
   "difficulty": "Easy",
   "frontendQuestionId": 1446,
   "isFavor": false,
   "paidOnly": false,
   "title": "Consecutive Characters",
   "titleSlug": "consecutive-characters",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.00652963788593",
   "difficulty": "Medium",
   "frontendQuestionId": 1447,
   "isFavor": false,
   "paidOnly": false,
   "title": "Simplified Fractions",
   "titleSlug": "simplified-fractions",
   "topicTags": "['Math', 'String', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.36037156590622",
   "difficulty": "Medium",
   "frontendQuestionId": 1448,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Good Nodes in Binary Tree",
   "titleSlug": "count-good-nodes-in-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "48.50306404079151",
   "difficulty": "Hard",
   "frontendQuestionId": 1449,
   "isFavor": false,
   "paidOnly": false,
   "title": "Form Largest Integer With Digits That Add up to Target",
   "titleSlug": "form-largest-integer-with-digits-that-add-up-to-target",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.6368614757006",
   "difficulty": "Easy",
   "frontendQuestionId": 1450,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Students Doing Homework at a Given Time",
   "titleSlug": "number-of-students-doing-homework-at-a-given-time",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.60502321990212",
   "difficulty": "Medium",
   "frontendQuestionId": 1451,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rearrange Words in a Sentence",
   "titleSlug": "rearrange-words-in-a-sentence",
   "topicTags": "['String', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.98186533587442",
   "difficulty": "Medium",
   "frontendQuestionId": 1452,
   "isFavor": false,
   "paidOnly": false,
   "title": "People Whose List of Favorite Companies Is Not a Subset of Another List",
   "titleSlug": "people-whose-list-of-favorite-companies-is-not-a-subset-of-another-list",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.725812397956496",
   "difficulty": "Hard",
   "frontendQuestionId": 1453,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Darts Inside of a Circular Dartboard",
   "titleSlug": "maximum-number-of-darts-inside-of-a-circular-dartboard",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.63401572668113",
   "difficulty": "Medium",
   "frontendQuestionId": 1454,
   "isFavor": false,
   "paidOnly": true,
   "title": "Active Users",
   "titleSlug": "active-users",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.75662082514735",
   "difficulty": "Easy",
   "frontendQuestionId": 1455,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If a Word Occurs As a Prefix of Any Word in a Sentence",
   "titleSlug": "check-if-a-word-occurs-as-a-prefix-of-any-word-in-a-sentence",
   "topicTags": "['Two Pointers', 'String', 'String Matching']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.03241537340108",
   "difficulty": "Medium",
   "frontendQuestionId": 1456,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Vowels in a Substring of Given Length",
   "titleSlug": "maximum-number-of-vowels-in-a-substring-of-given-length",
   "topicTags": "['String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.31322366977057",
   "difficulty": "Medium",
   "frontendQuestionId": 1457,
   "isFavor": false,
   "paidOnly": false,
   "title": "Pseudo-Palindromic Paths in a Binary Tree",
   "titleSlug": "pseudo-palindromic-paths-in-a-binary-tree",
   "topicTags": "['Bit Manipulation', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.31143144485417",
   "difficulty": "Hard",
   "frontendQuestionId": 1458,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Dot Product of Two Subsequences",
   "titleSlug": "max-dot-product-of-two-subsequences",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.65573290379265",
   "difficulty": "Medium",
   "frontendQuestionId": 1459,
   "isFavor": false,
   "paidOnly": true,
   "title": "Rectangles Area",
   "titleSlug": "rectangles-area",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.80977971680282",
   "difficulty": "Easy",
   "frontendQuestionId": 1460,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make Two Arrays Equal by Reversing Subarrays",
   "titleSlug": "make-two-arrays-equal-by-reversing-subarrays",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.56935717322865",
   "difficulty": "Medium",
   "frontendQuestionId": 1461,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If a String Contains All Binary Codes of Size K",
   "titleSlug": "check-if-a-string-contains-all-binary-codes-of-size-k",
   "topicTags": "['Hash Table', 'String', 'Bit Manipulation', 'Rolling Hash', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.550477129958836",
   "difficulty": "Medium",
   "frontendQuestionId": 1462,
   "isFavor": false,
   "paidOnly": false,
   "title": "Course Schedule IV",
   "titleSlug": "course-schedule-iv",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.85263546250947",
   "difficulty": "Hard",
   "frontendQuestionId": 1463,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cherry Pickup II",
   "titleSlug": "cherry-pickup-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.12536443148689",
   "difficulty": "Easy",
   "frontendQuestionId": 1464,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Product of Two Elements in an Array",
   "titleSlug": "maximum-product-of-two-elements-in-an-array",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.180140169537474",
   "difficulty": "Medium",
   "frontendQuestionId": 1465,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts",
   "titleSlug": "maximum-area-of-a-piece-of-cake-after-horizontal-and-vertical-cuts",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.79446046029295",
   "difficulty": "Medium",
   "frontendQuestionId": 1466,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reorder Routes to Make All Paths Lead to the City Zero",
   "titleSlug": "reorder-routes-to-make-all-paths-lead-to-the-city-zero",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.922672627318306",
   "difficulty": "Hard",
   "frontendQuestionId": 1467,
   "isFavor": false,
   "paidOnly": false,
   "title": "Probability of a Two Boxes Having The Same Number of Distinct Balls",
   "titleSlug": "probability-of-a-two-boxes-having-the-same-number-of-distinct-balls",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Backtracking', 'Combinatorics', 'Probability and Statistics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.15230600081013",
   "difficulty": "Medium",
   "frontendQuestionId": 1468,
   "isFavor": false,
   "paidOnly": true,
   "title": "Calculate Salaries",
   "titleSlug": "calculate-salaries",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.96477282475053",
   "difficulty": "Easy",
   "frontendQuestionId": 1469,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find All The Lonely Nodes",
   "titleSlug": "find-all-the-lonely-nodes",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.79938735249404",
   "difficulty": "Easy",
   "frontendQuestionId": 1470,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shuffle the Array",
   "titleSlug": "shuffle-the-array",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.729825221911696",
   "difficulty": "Medium",
   "frontendQuestionId": 1471,
   "isFavor": false,
   "paidOnly": false,
   "title": "The k Strongest Values in an Array",
   "titleSlug": "the-k-strongest-values-in-an-array",
   "topicTags": "['Array', 'Two Pointers', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.99224709955993",
   "difficulty": "Medium",
   "frontendQuestionId": 1472,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Browser History",
   "titleSlug": "design-browser-history",
   "topicTags": "['Array', 'Linked List', 'Stack', 'Design', 'Doubly-Linked List', 'Data Stream']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.97425330950731",
   "difficulty": "Hard",
   "frontendQuestionId": 1473,
   "isFavor": false,
   "paidOnly": false,
   "title": "Paint House III",
   "titleSlug": "paint-house-iii",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.48921893539544",
   "difficulty": "Easy",
   "frontendQuestionId": 1474,
   "isFavor": false,
   "paidOnly": true,
   "title": "Delete N Nodes After M Nodes of a Linked List",
   "titleSlug": "delete-n-nodes-after-m-nodes-of-a-linked-list",
   "topicTags": "['Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.1919330726308",
   "difficulty": "Easy",
   "frontendQuestionId": 1475,
   "isFavor": false,
   "paidOnly": false,
   "title": "Final Prices With a Special Discount in a Shop",
   "titleSlug": "final-prices-with-a-special-discount-in-a-shop",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.31378504500653",
   "difficulty": "Medium",
   "frontendQuestionId": 1476,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subrectangle Queries",
   "titleSlug": "subrectangle-queries",
   "topicTags": "['Array', 'Design', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.440413109258024",
   "difficulty": "Medium",
   "frontendQuestionId": 1477,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Two Non-overlapping Sub-arrays Each With Target Sum",
   "titleSlug": "find-two-non-overlapping-sub-arrays-each-with-target-sum",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.68803159173754",
   "difficulty": "Hard",
   "frontendQuestionId": 1478,
   "isFavor": false,
   "paidOnly": false,
   "title": "Allocate Mailboxes",
   "titleSlug": "allocate-mailboxes",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.3265451101113",
   "difficulty": "Hard",
   "frontendQuestionId": 1479,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sales by Day of the Week",
   "titleSlug": "sales-by-day-of-the-week",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.95709435231981",
   "difficulty": "Easy",
   "frontendQuestionId": 1480,
   "isFavor": false,
   "paidOnly": false,
   "title": "Running Sum of 1d Array",
   "titleSlug": "running-sum-of-1d-array",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "63.31519254736092",
   "difficulty": "Medium",
   "frontendQuestionId": 1481,
   "isFavor": false,
   "paidOnly": false,
   "title": "Least Number of Unique Integers after K Removals",
   "titleSlug": "least-number-of-unique-integers-after-k-removals",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Sorting', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.31603083069806",
   "difficulty": "Medium",
   "frontendQuestionId": 1482,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Days to Make m Bouquets",
   "titleSlug": "minimum-number-of-days-to-make-m-bouquets",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.459700283515595",
   "difficulty": "Hard",
   "frontendQuestionId": 1483,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Ancestor of a Tree Node",
   "titleSlug": "kth-ancestor-of-a-tree-node",
   "topicTags": "['Binary Search', 'Dynamic Programming', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.61092185323373",
   "difficulty": "Easy",
   "frontendQuestionId": 1484,
   "isFavor": false,
   "paidOnly": false,
   "title": "Group Sold Products By The Date",
   "titleSlug": "group-sold-products-by-the-date",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.82713493341512",
   "difficulty": "Medium",
   "frontendQuestionId": 1485,
   "isFavor": false,
   "paidOnly": true,
   "title": "Clone Binary Tree With Random Pointer",
   "titleSlug": "clone-binary-tree-with-random-pointer",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.69244026270437",
   "difficulty": "Easy",
   "frontendQuestionId": 1486,
   "isFavor": false,
   "paidOnly": false,
   "title": "XOR Operation in an Array",
   "titleSlug": "xor-operation-in-an-array",
   "topicTags": "['Math', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.7278042823583",
   "difficulty": "Medium",
   "frontendQuestionId": 1487,
   "isFavor": false,
   "paidOnly": false,
   "title": "Making File Names Unique",
   "titleSlug": "making-file-names-unique",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.2510667349377",
   "difficulty": "Medium",
   "frontendQuestionId": 1488,
   "isFavor": false,
   "paidOnly": false,
   "title": "Avoid Flood in The City",
   "titleSlug": "avoid-flood-in-the-city",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.48642192470982",
   "difficulty": "Hard",
   "frontendQuestionId": 1489,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Critical and Pseudo-Critical Edges in Minimum Spanning Tree",
   "titleSlug": "find-critical-and-pseudo-critical-edges-in-minimum-spanning-tree",
   "topicTags": "['Union Find', 'Graph', 'Sorting', 'Minimum Spanning Tree', 'Strongly Connected Component']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.16790521228499",
   "difficulty": "Medium",
   "frontendQuestionId": 1490,
   "isFavor": false,
   "paidOnly": true,
   "title": "Clone N-ary Tree",
   "titleSlug": "clone-n-ary-tree",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.44207248116638",
   "difficulty": "Easy",
   "frontendQuestionId": 1491,
   "isFavor": false,
   "paidOnly": false,
   "title": "Average Salary Excluding the Minimum and Maximum Salary",
   "titleSlug": "average-salary-excluding-the-minimum-and-maximum-salary",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.39674229076329",
   "difficulty": "Medium",
   "frontendQuestionId": 1492,
   "isFavor": false,
   "paidOnly": false,
   "title": "The kth Factor of n",
   "titleSlug": "the-kth-factor-of-n",
   "topicTags": "['Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.93277701140823",
   "difficulty": "Medium",
   "frontendQuestionId": 1493,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Subarray of 1's After Deleting One Element",
   "titleSlug": "longest-subarray-of-1s-after-deleting-one-element",
   "topicTags": "['Array', 'Dynamic Programming', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.467250328648674",
   "difficulty": "Hard",
   "frontendQuestionId": 1494,
   "isFavor": false,
   "paidOnly": false,
   "title": "Parallel Courses II",
   "titleSlug": "parallel-courses-ii",
   "topicTags": "['Dynamic Programming', 'Bit Manipulation', 'Graph', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.966330372335435",
   "difficulty": "Easy",
   "frontendQuestionId": 1495,
   "isFavor": false,
   "paidOnly": true,
   "title": "Friendly Movies Streamed Last Month",
   "titleSlug": "friendly-movies-streamed-last-month",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.519439042294486",
   "difficulty": "Easy",
   "frontendQuestionId": 1496,
   "isFavor": false,
   "paidOnly": false,
   "title": "Path Crossing",
   "titleSlug": "path-crossing",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.20273897704322",
   "difficulty": "Medium",
   "frontendQuestionId": 1497,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If Array Pairs Are Divisible by k",
   "titleSlug": "check-if-array-pairs-are-divisible-by-k",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.788617226209915",
   "difficulty": "Medium",
   "frontendQuestionId": 1498,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Subsequences That Satisfy the Given Sum Condition",
   "titleSlug": "number-of-subsequences-that-satisfy-the-given-sum-condition",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.43163497824892",
   "difficulty": "Hard",
   "frontendQuestionId": 1499,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Value of Equation",
   "titleSlug": "max-value-of-equation",
   "topicTags": "['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Monotonic Queue']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.66867035345035",
   "difficulty": "Medium",
   "frontendQuestionId": 1500,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design a File Sharing System",
   "titleSlug": "design-a-file-sharing-system",
   "topicTags": "['Hash Table', 'Design', 'Sorting', 'Heap (Priority Queue)', 'Data Stream']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.434547968923916",
   "difficulty": "Medium",
   "frontendQuestionId": 1501,
   "isFavor": false,
   "paidOnly": true,
   "title": "Countries You Can Safely Invest In",
   "titleSlug": "countries-you-can-safely-invest-in",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.41492825459086",
   "difficulty": "Easy",
   "frontendQuestionId": 1502,
   "isFavor": false,
   "paidOnly": false,
   "title": "Can Make Arithmetic Progression From Sequence",
   "titleSlug": "can-make-arithmetic-progression-from-sequence",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.19733485376783",
   "difficulty": "Medium",
   "frontendQuestionId": 1503,
   "isFavor": false,
   "paidOnly": false,
   "title": "Last Moment Before All Ants Fall Out of a Plank",
   "titleSlug": "last-moment-before-all-ants-fall-out-of-a-plank",
   "topicTags": "['Array', 'Brainteaser', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.173353986079256",
   "difficulty": "Medium",
   "frontendQuestionId": 1504,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Submatrices With All Ones",
   "titleSlug": "count-submatrices-with-all-ones",
   "topicTags": "['Array', 'Dynamic Programming', 'Stack', 'Matrix', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.77927396404525",
   "difficulty": "Hard",
   "frontendQuestionId": 1505,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Possible Integer After at Most K Adjacent Swaps On Digits",
   "titleSlug": "minimum-possible-integer-after-at-most-k-adjacent-swaps-on-digits",
   "topicTags": "['String', 'Greedy', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.39535606924433",
   "difficulty": "Medium",
   "frontendQuestionId": 1506,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Root of N-Ary Tree",
   "titleSlug": "find-root-of-n-ary-tree",
   "topicTags": "['Hash Table', 'Bit Manipulation', 'Tree', 'Depth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.18510181111225",
   "difficulty": "Easy",
   "frontendQuestionId": 1507,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reformat Date",
   "titleSlug": "reformat-date",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.12258265420587",
   "difficulty": "Medium",
   "frontendQuestionId": 1508,
   "isFavor": false,
   "paidOnly": false,
   "title": "Range Sum of Sorted Subarray Sums",
   "titleSlug": "range-sum-of-sorted-subarray-sums",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.17458482772688",
   "difficulty": "Medium",
   "frontendQuestionId": 1509,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Difference Between Largest and Smallest Value in Three Moves",
   "titleSlug": "minimum-difference-between-largest-and-smallest-value-in-three-moves",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.45447227938552",
   "difficulty": "Hard",
   "frontendQuestionId": 1510,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stone Game IV",
   "titleSlug": "stone-game-iv",
   "topicTags": "['Math', 'Dynamic Programming', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.98347853877472",
   "difficulty": "Easy",
   "frontendQuestionId": 1511,
   "isFavor": false,
   "paidOnly": true,
   "title": "Customer Order Frequency",
   "titleSlug": "customer-order-frequency",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.52064872127812",
   "difficulty": "Easy",
   "frontendQuestionId": 1512,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Good Pairs",
   "titleSlug": "number-of-good-pairs",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.609333751776845",
   "difficulty": "Medium",
   "frontendQuestionId": 1513,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Substrings With Only 1s",
   "titleSlug": "number-of-substrings-with-only-1s",
   "topicTags": "['Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.29072837306998",
   "difficulty": "Medium",
   "frontendQuestionId": 1514,
   "isFavor": false,
   "paidOnly": false,
   "title": "Path with Maximum Probability",
   "titleSlug": "path-with-maximum-probability",
   "topicTags": "['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.75273875100576",
   "difficulty": "Hard",
   "frontendQuestionId": 1515,
   "isFavor": false,
   "paidOnly": false,
   "title": "Best Position for a Service Centre",
   "titleSlug": "best-position-for-a-service-centre",
   "topicTags": "['Array', 'Math', 'Geometry', 'Randomized']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.10794896957802",
   "difficulty": "Hard",
   "frontendQuestionId": 1516,
   "isFavor": false,
   "paidOnly": true,
   "title": "Move Sub-Tree of N-Ary Tree",
   "titleSlug": "move-sub-tree-of-n-ary-tree",
   "topicTags": "['Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.24548685208765",
   "difficulty": "Easy",
   "frontendQuestionId": 1517,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Users With Valid E-Mails",
   "titleSlug": "find-users-with-valid-e-mails",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.811170395538",
   "difficulty": "Easy",
   "frontendQuestionId": 1518,
   "isFavor": false,
   "paidOnly": false,
   "title": "Water Bottles",
   "titleSlug": "water-bottles",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.98029056624924",
   "difficulty": "Medium",
   "frontendQuestionId": 1519,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Nodes in the Sub-Tree With the Same Label",
   "titleSlug": "number-of-nodes-in-the-sub-tree-with-the-same-label",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.554744095647564",
   "difficulty": "Hard",
   "frontendQuestionId": 1520,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Non-Overlapping Substrings",
   "titleSlug": "maximum-number-of-non-overlapping-substrings",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.53688878866463",
   "difficulty": "Hard",
   "frontendQuestionId": 1521,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find a Value of a Mysterious Function Closest to Target",
   "titleSlug": "find-a-value-of-a-mysterious-function-closest-to-target",
   "topicTags": "['Array', 'Binary Search', 'Bit Manipulation', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.92134649401153",
   "difficulty": "Medium",
   "frontendQuestionId": 1522,
   "isFavor": false,
   "paidOnly": true,
   "title": "Diameter of N-Ary Tree",
   "titleSlug": "diameter-of-n-ary-tree",
   "topicTags": "['Tree', 'Depth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.302352449546476",
   "difficulty": "Easy",
   "frontendQuestionId": 1523,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Odd Numbers in an Interval Range",
   "titleSlug": "count-odd-numbers-in-an-interval-range",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.0823508122329",
   "difficulty": "Medium",
   "frontendQuestionId": 1524,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Sub-arrays With Odd Sum",
   "titleSlug": "number-of-sub-arrays-with-odd-sum",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.29386785662876",
   "difficulty": "Medium",
   "frontendQuestionId": 1525,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Good Ways to Split a String",
   "titleSlug": "number-of-good-ways-to-split-a-string",
   "topicTags": "['Hash Table', 'String', 'Dynamic Programming', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.03167172235891",
   "difficulty": "Hard",
   "frontendQuestionId": 1526,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Increments on Subarrays to Form a Target Array",
   "titleSlug": "minimum-number-of-increments-on-subarrays-to-form-a-target-array",
   "topicTags": "['Array', 'Dynamic Programming', 'Stack', 'Greedy', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.3713420971065",
   "difficulty": "Easy",
   "frontendQuestionId": 1527,
   "isFavor": false,
   "paidOnly": false,
   "title": "Patients With a Condition",
   "titleSlug": "patients-with-a-condition",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.05705077954882",
   "difficulty": "Easy",
   "frontendQuestionId": 1528,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shuffle String",
   "titleSlug": "shuffle-string",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.39333977424207",
   "difficulty": "Medium",
   "frontendQuestionId": 1529,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Suffix Flips",
   "titleSlug": "minimum-suffix-flips",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.77530594710076",
   "difficulty": "Medium",
   "frontendQuestionId": 1530,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Good Leaf Nodes Pairs",
   "titleSlug": "number-of-good-leaf-nodes-pairs",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.00560224089635",
   "difficulty": "Hard",
   "frontendQuestionId": 1531,
   "isFavor": false,
   "paidOnly": false,
   "title": "String Compression II",
   "titleSlug": "string-compression-ii",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.9265312599175",
   "difficulty": "Medium",
   "frontendQuestionId": 1532,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Most Recent Three Orders",
   "titleSlug": "the-most-recent-three-orders",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.21693585117191",
   "difficulty": "Medium",
   "frontendQuestionId": 1533,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Index of the Large Integer",
   "titleSlug": "find-the-index-of-the-large-integer",
   "topicTags": "['Array', 'Binary Search', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.81569787471638",
   "difficulty": "Easy",
   "frontendQuestionId": 1534,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Good Triplets",
   "titleSlug": "count-good-triplets",
   "topicTags": "['Array', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.74697995486526",
   "difficulty": "Medium",
   "frontendQuestionId": 1535,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Winner of an Array Game",
   "titleSlug": "find-the-winner-of-an-array-game",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.7041760368926",
   "difficulty": "Medium",
   "frontendQuestionId": 1536,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Swaps to Arrange a Binary Grid",
   "titleSlug": "minimum-swaps-to-arrange-a-binary-grid",
   "topicTags": "['Array', 'Greedy', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.83385361574779",
   "difficulty": "Hard",
   "frontendQuestionId": 1537,
   "isFavor": false,
   "paidOnly": false,
   "title": "Get the Maximum Score",
   "titleSlug": "get-the-maximum-score",
   "topicTags": "['Array', 'Two Pointers', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.4526191877575",
   "difficulty": "Medium",
   "frontendQuestionId": 1538,
   "isFavor": false,
   "paidOnly": true,
   "title": "Guess the Majority in a Hidden Array",
   "titleSlug": "guess-the-majority-in-a-hidden-array",
   "topicTags": "['Array', 'Math', 'Interactive']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.963421226864924",
   "difficulty": "Easy",
   "frontendQuestionId": 1539,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Missing Positive Number",
   "titleSlug": "kth-missing-positive-number",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.75004814172925",
   "difficulty": "Medium",
   "frontendQuestionId": 1540,
   "isFavor": false,
   "paidOnly": false,
   "title": "Can Convert String in K Moves",
   "titleSlug": "can-convert-string-in-k-moves",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.04633764592697",
   "difficulty": "Medium",
   "frontendQuestionId": 1541,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Insertions to Balance a Parentheses String",
   "titleSlug": "minimum-insertions-to-balance-a-parentheses-string",
   "topicTags": "['String', 'Stack', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.93529442336677",
   "difficulty": "Hard",
   "frontendQuestionId": 1542,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Longest Awesome Substring",
   "titleSlug": "find-longest-awesome-substring",
   "topicTags": "['Hash Table', 'String', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.97775774767371",
   "difficulty": "Easy",
   "frontendQuestionId": 1543,
   "isFavor": false,
   "paidOnly": true,
   "title": "Fix Product Name Format",
   "titleSlug": "fix-product-name-format",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.20891688487947",
   "difficulty": "Easy",
   "frontendQuestionId": 1544,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make The String Great",
   "titleSlug": "make-the-string-great",
   "topicTags": "['String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.1867619995245",
   "difficulty": "Medium",
   "frontendQuestionId": 1545,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Kth Bit in Nth Binary String",
   "titleSlug": "find-kth-bit-in-nth-binary-string",
   "topicTags": "['String', 'Recursion', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.83102602162915",
   "difficulty": "Medium",
   "frontendQuestionId": 1546,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Non-Overlapping Subarrays With Sum Equals Target",
   "titleSlug": "maximum-number-of-non-overlapping-subarrays-with-sum-equals-target",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.79400736309598",
   "difficulty": "Hard",
   "frontendQuestionId": 1547,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Cut a Stick",
   "titleSlug": "minimum-cost-to-cut-a-stick",
   "topicTags": "['Array', 'Dynamic Programming', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.27714074968149",
   "difficulty": "Hard",
   "frontendQuestionId": 1548,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Most Similar Path in a Graph",
   "titleSlug": "the-most-similar-path-in-a-graph",
   "topicTags": "['Dynamic Programming', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.81993424985056",
   "difficulty": "Medium",
   "frontendQuestionId": 1549,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Most Recent Orders for Each Product",
   "titleSlug": "the-most-recent-orders-for-each-product",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.04449349255025",
   "difficulty": "Easy",
   "frontendQuestionId": 1550,
   "isFavor": false,
   "paidOnly": false,
   "title": "Three Consecutive Odds",
   "titleSlug": "three-consecutive-odds",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.20548492107365",
   "difficulty": "Medium",
   "frontendQuestionId": 1551,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make Array Equal",
   "titleSlug": "minimum-operations-to-make-array-equal",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.16645974596506",
   "difficulty": "Medium",
   "frontendQuestionId": 1552,
   "isFavor": false,
   "paidOnly": false,
   "title": "Magnetic Force Between Two Balls",
   "titleSlug": "magnetic-force-between-two-balls",
   "topicTags": "['Array', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.56104663989763",
   "difficulty": "Hard",
   "frontendQuestionId": 1553,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Days to Eat N Oranges",
   "titleSlug": "minimum-number-of-days-to-eat-n-oranges",
   "topicTags": "['Dynamic Programming', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.195438458513564",
   "difficulty": "Medium",
   "frontendQuestionId": 1554,
   "isFavor": false,
   "paidOnly": true,
   "title": "Strings Differ by One Character",
   "titleSlug": "strings-differ-by-one-character",
   "topicTags": "['Hash Table', 'String', 'Rolling Hash', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.85062620914367",
   "difficulty": "Medium",
   "frontendQuestionId": 1555,
   "isFavor": false,
   "paidOnly": true,
   "title": "Bank Account Summary",
   "titleSlug": "bank-account-summary",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.50969702386272",
   "difficulty": "Easy",
   "frontendQuestionId": 1556,
   "isFavor": false,
   "paidOnly": false,
   "title": "Thousand Separator",
   "titleSlug": "thousand-separator",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.06463787311795",
   "difficulty": "Medium",
   "frontendQuestionId": 1557,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Vertices to Reach All Nodes",
   "titleSlug": "minimum-number-of-vertices-to-reach-all-nodes",
   "topicTags": "['Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.47497101907472",
   "difficulty": "Medium",
   "frontendQuestionId": 1558,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Numbers of Function Calls to Make Target Array",
   "titleSlug": "minimum-numbers-of-function-calls-to-make-target-array",
   "topicTags": "['Array', 'Greedy', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.786646708332924",
   "difficulty": "Medium",
   "frontendQuestionId": 1559,
   "isFavor": false,
   "paidOnly": false,
   "title": "Detect Cycles in 2D Grid",
   "titleSlug": "detect-cycles-in-2d-grid",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.95420537696292",
   "difficulty": "Easy",
   "frontendQuestionId": 1560,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Visited Sector in  a Circular Track",
   "titleSlug": "most-visited-sector-in-a-circular-track",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.40547909268923",
   "difficulty": "Medium",
   "frontendQuestionId": 1561,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Coins You Can Get",
   "titleSlug": "maximum-number-of-coins-you-can-get",
   "topicTags": "['Array', 'Math', 'Greedy', 'Sorting', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.87035642840242",
   "difficulty": "Medium",
   "frontendQuestionId": 1562,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Latest Group of Size M",
   "titleSlug": "find-latest-group-of-size-m",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.01103595585618",
   "difficulty": "Hard",
   "frontendQuestionId": 1563,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stone Game V",
   "titleSlug": "stone-game-v",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.12511788745678",
   "difficulty": "Medium",
   "frontendQuestionId": 1564,
   "isFavor": false,
   "paidOnly": true,
   "title": "Put Boxes Into the Warehouse I",
   "titleSlug": "put-boxes-into-the-warehouse-i",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.16682646212847",
   "difficulty": "Easy",
   "frontendQuestionId": 1565,
   "isFavor": false,
   "paidOnly": true,
   "title": "Unique Orders and Customers Per Month",
   "titleSlug": "unique-orders-and-customers-per-month",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.40314589238192",
   "difficulty": "Easy",
   "frontendQuestionId": 1566,
   "isFavor": false,
   "paidOnly": false,
   "title": "Detect Pattern of Length M Repeated K or More Times",
   "titleSlug": "detect-pattern-of-length-m-repeated-k-or-more-times",
   "topicTags": "['Array', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.335835600608824",
   "difficulty": "Medium",
   "frontendQuestionId": 1567,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Length of Subarray With Positive Product",
   "titleSlug": "maximum-length-of-subarray-with-positive-product",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.166530745392265",
   "difficulty": "Hard",
   "frontendQuestionId": 1568,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Days to Disconnect Island",
   "titleSlug": "minimum-number-of-days-to-disconnect-island",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix', 'Strongly Connected Component']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.48380943730414",
   "difficulty": "Hard",
   "frontendQuestionId": 1569,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Reorder Array to Get Same BST",
   "titleSlug": "number-of-ways-to-reorder-array-to-get-same-bst",
   "topicTags": "['Array', 'Math', 'Divide and Conquer', 'Dynamic Programming', 'Tree', 'Union Find', 'Binary Search Tree', 'Memoization', 'Combinatorics', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.9274072674441",
   "difficulty": "Medium",
   "frontendQuestionId": 1570,
   "isFavor": false,
   "paidOnly": true,
   "title": "Dot Product of Two Sparse Vectors",
   "titleSlug": "dot-product-of-two-sparse-vectors",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Design']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.48091041233509",
   "difficulty": "Easy",
   "frontendQuestionId": 1571,
   "isFavor": false,
   "paidOnly": true,
   "title": "Warehouse Manager",
   "titleSlug": "warehouse-manager",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.59156269803744",
   "difficulty": "Easy",
   "frontendQuestionId": 1572,
   "isFavor": false,
   "paidOnly": false,
   "title": "Matrix Diagonal Sum",
   "titleSlug": "matrix-diagonal-sum",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.71851760548913",
   "difficulty": "Medium",
   "frontendQuestionId": 1573,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Split a String",
   "titleSlug": "number-of-ways-to-split-a-string",
   "topicTags": "['Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.530491906388406",
   "difficulty": "Medium",
   "frontendQuestionId": 1574,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Subarray to be Removed to Make Array Sorted",
   "titleSlug": "shortest-subarray-to-be-removed-to-make-array-sorted",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.94913824909081",
   "difficulty": "Hard",
   "frontendQuestionId": 1575,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count All Possible Routes",
   "titleSlug": "count-all-possible-routes",
   "topicTags": "['Array', 'Dynamic Programming', 'Memoization']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.21030089308635",
   "difficulty": "Easy",
   "frontendQuestionId": 1576,
   "isFavor": false,
   "paidOnly": false,
   "title": "Replace All ?'s to Avoid Consecutive Repeating Characters",
   "titleSlug": "replace-all-s-to-avoid-consecutive-repeating-characters",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.78097992937126",
   "difficulty": "Medium",
   "frontendQuestionId": 1577,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways Where Square of Number Is Equal to Product of Two Numbers",
   "titleSlug": "number-of-ways-where-square-of-number-is-equal-to-product-of-two-numbers",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Two Pointers']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.47043630147168",
   "difficulty": "Medium",
   "frontendQuestionId": 1578,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Make Rope Colorful",
   "titleSlug": "minimum-time-to-make-rope-colorful",
   "topicTags": "['Array', 'String', 'Dynamic Programming', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.46867317098419",
   "difficulty": "Hard",
   "frontendQuestionId": 1579,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Max Number of Edges to Keep Graph Fully Traversable",
   "titleSlug": "remove-max-number-of-edges-to-keep-graph-fully-traversable",
   "topicTags": "['Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.50262269167206",
   "difficulty": "Medium",
   "frontendQuestionId": 1580,
   "isFavor": false,
   "paidOnly": true,
   "title": "Put Boxes Into the Warehouse II",
   "titleSlug": "put-boxes-into-the-warehouse-ii",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.45725991367682",
   "difficulty": "Easy",
   "frontendQuestionId": 1581,
   "isFavor": false,
   "paidOnly": false,
   "title": "Customer Who Visited but Did Not Make Any Transactions",
   "titleSlug": "customer-who-visited-but-did-not-make-any-transactions",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.66420378919995",
   "difficulty": "Easy",
   "frontendQuestionId": 1582,
   "isFavor": false,
   "paidOnly": false,
   "title": "Special Positions in a Binary Matrix",
   "titleSlug": "special-positions-in-a-binary-matrix",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.88972981451708",
   "difficulty": "Medium",
   "frontendQuestionId": 1583,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Unhappy Friends",
   "titleSlug": "count-unhappy-friends",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.55602341776795",
   "difficulty": "Medium",
   "frontendQuestionId": 1584,
   "isFavor": false,
   "paidOnly": false,
   "title": "Min Cost to Connect All Points",
   "titleSlug": "min-cost-to-connect-all-points",
   "topicTags": "['Array', 'Union Find', 'Graph', 'Minimum Spanning Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.110549834855256",
   "difficulty": "Hard",
   "frontendQuestionId": 1585,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If String Is Transformable With Substring Sort Operations",
   "titleSlug": "check-if-string-is-transformable-with-substring-sort-operations",
   "topicTags": "['String', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.142621857966354",
   "difficulty": "Medium",
   "frontendQuestionId": 1586,
   "isFavor": false,
   "paidOnly": true,
   "title": "Binary Search Tree Iterator II",
   "titleSlug": "binary-search-tree-iterator-ii",
   "topicTags": "['Stack', 'Tree', 'Design', 'Binary Search Tree', 'Binary Tree', 'Iterator']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.34388151241315",
   "difficulty": "Easy",
   "frontendQuestionId": 1587,
   "isFavor": false,
   "paidOnly": false,
   "title": "Bank Account Summary II",
   "titleSlug": "bank-account-summary-ii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.43976842906274",
   "difficulty": "Easy",
   "frontendQuestionId": 1588,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of All Odd Length Subarrays",
   "titleSlug": "sum-of-all-odd-length-subarrays",
   "topicTags": "['Array', 'Math', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.94052795784096",
   "difficulty": "Medium",
   "frontendQuestionId": 1589,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum Obtained of Any Permutation",
   "titleSlug": "maximum-sum-obtained-of-any-permutation",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.499507378005276",
   "difficulty": "Medium",
   "frontendQuestionId": 1590,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make Sum Divisible by P",
   "titleSlug": "make-sum-divisible-by-p",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.545955477187576",
   "difficulty": "Hard",
   "frontendQuestionId": 1591,
   "isFavor": false,
   "paidOnly": false,
   "title": "Strange Printer II",
   "titleSlug": "strange-printer-ii",
   "topicTags": "['Array', 'Graph', 'Topological Sort', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.89421585683268",
   "difficulty": "Easy",
   "frontendQuestionId": 1592,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rearrange Spaces Between Words",
   "titleSlug": "rearrange-spaces-between-words",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.29079247586337",
   "difficulty": "Medium",
   "frontendQuestionId": 1593,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split a String Into the Max Number of Unique Substrings",
   "titleSlug": "split-a-string-into-the-max-number-of-unique-substrings",
   "topicTags": "['Hash Table', 'String', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.43220243814182",
   "difficulty": "Medium",
   "frontendQuestionId": 1594,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Non Negative Product in a Matrix",
   "titleSlug": "maximum-non-negative-product-in-a-matrix",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.085321564841635",
   "difficulty": "Hard",
   "frontendQuestionId": 1595,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Connect Two Groups of Points",
   "titleSlug": "minimum-cost-to-connect-two-groups-of-points",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Matrix', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.95866640670695",
   "difficulty": "Medium",
   "frontendQuestionId": 1596,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Most Frequently Ordered Products for Each Customer",
   "titleSlug": "the-most-frequently-ordered-products-for-each-customer",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.413593185568395",
   "difficulty": "Hard",
   "frontendQuestionId": 1597,
   "isFavor": false,
   "paidOnly": true,
   "title": "Build Binary Expression Tree From Infix Expression",
   "titleSlug": "build-binary-expression-tree-from-infix-expression",
   "topicTags": "['String', 'Stack', 'Tree', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.60782988039472",
   "difficulty": "Easy",
   "frontendQuestionId": 1598,
   "isFavor": false,
   "paidOnly": false,
   "title": "Crawler Log Folder",
   "titleSlug": "crawler-log-folder",
   "topicTags": "['Array', 'String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.795781068251124",
   "difficulty": "Medium",
   "frontendQuestionId": 1599,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Profit of Operating a Centennial Wheel",
   "titleSlug": "maximum-profit-of-operating-a-centennial-wheel",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.61004152510381",
   "difficulty": "Medium",
   "frontendQuestionId": 1600,
   "isFavor": false,
   "paidOnly": false,
   "title": "Throne Inheritance",
   "titleSlug": "throne-inheritance",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Design']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.42108667529108",
   "difficulty": "Hard",
   "frontendQuestionId": 1601,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Achievable Transfer Requests",
   "titleSlug": "maximum-number-of-achievable-transfer-requests",
   "topicTags": "['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.01629169899147",
   "difficulty": "Medium",
   "frontendQuestionId": 1602,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Nearest Right Node in Binary Tree",
   "titleSlug": "find-nearest-right-node-in-binary-tree",
   "topicTags": "['Tree', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "88.03965712527793",
   "difficulty": "Easy",
   "frontendQuestionId": 1603,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Parking System",
   "titleSlug": "design-parking-system",
   "topicTags": "['Design', 'Simulation', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.928263799848764",
   "difficulty": "Medium",
   "frontendQuestionId": 1604,
   "isFavor": false,
   "paidOnly": false,
   "title": "Alert Using Same Key-Card Three or More Times in a One Hour Period",
   "titleSlug": "alert-using-same-key-card-three-or-more-times-in-a-one-hour-period",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.85809285289086",
   "difficulty": "Medium",
   "frontendQuestionId": 1605,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Valid Matrix Given Row and Column Sums",
   "titleSlug": "find-valid-matrix-given-row-and-column-sums",
   "topicTags": "['Array', 'Greedy', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.78077874324235",
   "difficulty": "Hard",
   "frontendQuestionId": 1606,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Servers That Handled Most Number of Requests",
   "titleSlug": "find-servers-that-handled-most-number-of-requests",
   "topicTags": "['Array', 'Greedy', 'Heap (Priority Queue)', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.46114270240996",
   "difficulty": "Easy",
   "frontendQuestionId": 1607,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sellers With No Sales",
   "titleSlug": "sellers-with-no-sales",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.58263625115323",
   "difficulty": "Easy",
   "frontendQuestionId": 1608,
   "isFavor": false,
   "paidOnly": false,
   "title": "Special Array With X Elements Greater Than or Equal X",
   "titleSlug": "special-array-with-x-elements-greater-than-or-equal-x",
   "topicTags": "['Array', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.46343509827831",
   "difficulty": "Medium",
   "frontendQuestionId": 1609,
   "isFavor": false,
   "paidOnly": false,
   "title": "Even Odd Tree",
   "titleSlug": "even-odd-tree",
   "topicTags": "['Tree', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.519005967465056",
   "difficulty": "Hard",
   "frontendQuestionId": 1610,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Visible Points",
   "titleSlug": "maximum-number-of-visible-points",
   "topicTags": "['Array', 'Math', 'Geometry', 'Sliding Window', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.2797977196638",
   "difficulty": "Hard",
   "frontendQuestionId": 1611,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum One Bit Operations to Make Integers Zero",
   "titleSlug": "minimum-one-bit-operations-to-make-integers-zero",
   "topicTags": "['Dynamic Programming', 'Bit Manipulation', 'Memoization']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.05659374723231",
   "difficulty": "Medium",
   "frontendQuestionId": 1612,
   "isFavor": false,
   "paidOnly": true,
   "title": "Check If Two Expression Trees are Equivalent",
   "titleSlug": "check-if-two-expression-trees-are-equivalent",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.11503811503812",
   "difficulty": "Medium",
   "frontendQuestionId": 1613,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Missing IDs",
   "titleSlug": "find-the-missing-ids",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.21693353154377",
   "difficulty": "Easy",
   "frontendQuestionId": 1614,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Nesting Depth of the Parentheses",
   "titleSlug": "maximum-nesting-depth-of-the-parentheses",
   "topicTags": "['String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.36764984685645",
   "difficulty": "Medium",
   "frontendQuestionId": 1615,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximal Network Rank",
   "titleSlug": "maximal-network-rank",
   "topicTags": "['Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.28213634101841",
   "difficulty": "Medium",
   "frontendQuestionId": 1616,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split Two Strings to Make Palindrome",
   "titleSlug": "split-two-strings-to-make-palindrome",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.64746845384575",
   "difficulty": "Hard",
   "frontendQuestionId": 1617,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Subtrees With Max Distance Between Cities",
   "titleSlug": "count-subtrees-with-max-distance-between-cities",
   "topicTags": "['Dynamic Programming', 'Bit Manipulation', 'Tree', 'Enumeration', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.233216454288886",
   "difficulty": "Medium",
   "frontendQuestionId": 1618,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Font to Fit a Sentence in a Screen",
   "titleSlug": "maximum-font-to-fit-a-sentence-in-a-screen",
   "topicTags": "['Array', 'String', 'Binary Search', 'Interactive']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.11036622851957",
   "difficulty": "Easy",
   "frontendQuestionId": 1619,
   "isFavor": false,
   "paidOnly": false,
   "title": "Mean of Array After Removing Some Elements",
   "titleSlug": "mean-of-array-after-removing-some-elements",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.171879744913454",
   "difficulty": "Medium",
   "frontendQuestionId": 1620,
   "isFavor": false,
   "paidOnly": false,
   "title": "Coordinate With Maximum Network Quality",
   "titleSlug": "coordinate-with-maximum-network-quality",
   "topicTags": "['Array', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.419504643962846",
   "difficulty": "Medium",
   "frontendQuestionId": 1621,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Sets of K Non-Overlapping Line Segments",
   "titleSlug": "number-of-sets-of-k-non-overlapping-line-segments",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "18.124864981637504",
   "difficulty": "Hard",
   "frontendQuestionId": 1622,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fancy Sequence",
   "titleSlug": "fancy-sequence",
   "topicTags": "['Math', 'Design', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.9352652663896",
   "difficulty": "Easy",
   "frontendQuestionId": 1623,
   "isFavor": false,
   "paidOnly": true,
   "title": "All Valid Triplets That Can Represent a Country",
   "titleSlug": "all-valid-triplets-that-can-represent-a-country",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.23498344471754",
   "difficulty": "Easy",
   "frontendQuestionId": 1624,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Substring Between Two Equal Characters",
   "titleSlug": "largest-substring-between-two-equal-characters",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.88669018951657",
   "difficulty": "Medium",
   "frontendQuestionId": 1625,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lexicographically Smallest String After Applying Operations",
   "titleSlug": "lexicographically-smallest-string-after-applying-operations",
   "topicTags": "['String', 'Depth-First Search', 'Breadth-First Search', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.35450302583685",
   "difficulty": "Medium",
   "frontendQuestionId": 1626,
   "isFavor": false,
   "paidOnly": false,
   "title": "Best Team With No Conflicts",
   "titleSlug": "best-team-with-no-conflicts",
   "topicTags": "['Array', 'Dynamic Programming', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.963478136814324",
   "difficulty": "Hard",
   "frontendQuestionId": 1627,
   "isFavor": false,
   "paidOnly": false,
   "title": "Graph Connectivity With Threshold",
   "titleSlug": "graph-connectivity-with-threshold",
   "topicTags": "['Array', 'Math', 'Union Find', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.40933477967691",
   "difficulty": "Medium",
   "frontendQuestionId": 1628,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design an Expression Tree With Evaluate Function",
   "titleSlug": "design-an-expression-tree-with-evaluate-function",
   "topicTags": "['Array', 'Math', 'Stack', 'Tree', 'Design', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.21980789568365",
   "difficulty": "Easy",
   "frontendQuestionId": 1629,
   "isFavor": false,
   "paidOnly": false,
   "title": "Slowest Key",
   "titleSlug": "slowest-key",
   "topicTags": "['Array', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.68312757201646",
   "difficulty": "Medium",
   "frontendQuestionId": 1630,
   "isFavor": false,
   "paidOnly": false,
   "title": "Arithmetic Subarrays",
   "titleSlug": "arithmetic-subarrays",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.977361367377824",
   "difficulty": "Medium",
   "frontendQuestionId": 1631,
   "isFavor": false,
   "paidOnly": false,
   "title": "Path With Minimum Effort",
   "titleSlug": "path-with-minimum-effort",
   "topicTags": "['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.34370412863386",
   "difficulty": "Hard",
   "frontendQuestionId": 1632,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rank Transform of a Matrix",
   "titleSlug": "rank-transform-of-a-matrix",
   "topicTags": "['Array', 'Union Find', 'Graph', 'Topological Sort', 'Sorting', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.49054116840707",
   "difficulty": "Easy",
   "frontendQuestionId": 1633,
   "isFavor": false,
   "paidOnly": false,
   "title": "Percentage of Users Attended a Contest",
   "titleSlug": "percentage-of-users-attended-a-contest",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.66143800950431",
   "difficulty": "Medium",
   "frontendQuestionId": 1634,
   "isFavor": false,
   "paidOnly": true,
   "title": "Add Two Polynomials Represented as Linked Lists",
   "titleSlug": "add-two-polynomials-represented-as-linked-lists",
   "topicTags": "['Linked List', 'Math', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.13176007866274",
   "difficulty": "Hard",
   "frontendQuestionId": 1635,
   "isFavor": false,
   "paidOnly": true,
   "title": "Hopper Company Queries I",
   "titleSlug": "hopper-company-queries-i",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.13334603799753",
   "difficulty": "Easy",
   "frontendQuestionId": 1636,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort Array by Increasing Frequency",
   "titleSlug": "sort-array-by-increasing-frequency",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.06177626064684",
   "difficulty": "Easy",
   "frontendQuestionId": 1637,
   "isFavor": false,
   "paidOnly": false,
   "title": "Widest Vertical Area Between Two Points Containing No Points",
   "titleSlug": "widest-vertical-area-between-two-points-containing-no-points",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.53525748906092",
   "difficulty": "Medium",
   "frontendQuestionId": 1638,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Substrings That Differ by One Character",
   "titleSlug": "count-substrings-that-differ-by-one-character",
   "topicTags": "['Hash Table', 'String', 'Dynamic Programming', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.183988195387926",
   "difficulty": "Hard",
   "frontendQuestionId": 1639,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Form a Target String Given a Dictionary",
   "titleSlug": "number-of-ways-to-form-a-target-string-given-a-dictionary",
   "topicTags": "['Array', 'String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.90488143593889",
   "difficulty": "Easy",
   "frontendQuestionId": 1640,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check Array Formation Through Concatenation",
   "titleSlug": "check-array-formation-through-concatenation",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.80081423705585",
   "difficulty": "Medium",
   "frontendQuestionId": 1641,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Sorted Vowel Strings",
   "titleSlug": "count-sorted-vowel-strings",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.22834934310324",
   "difficulty": "Medium",
   "frontendQuestionId": 1642,
   "isFavor": false,
   "paidOnly": false,
   "title": "Furthest Building You Can Reach",
   "titleSlug": "furthest-building-you-can-reach",
   "topicTags": "['Array', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.58387853351438",
   "difficulty": "Hard",
   "frontendQuestionId": 1643,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Smallest Instructions",
   "titleSlug": "kth-smallest-instructions",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.3077623319236",
   "difficulty": "Medium",
   "frontendQuestionId": 1644,
   "isFavor": false,
   "paidOnly": true,
   "title": "Lowest Common Ancestor of a Binary Tree II",
   "titleSlug": "lowest-common-ancestor-of-a-binary-tree-ii",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.41826522101751",
   "difficulty": "Hard",
   "frontendQuestionId": 1645,
   "isFavor": false,
   "paidOnly": true,
   "title": "Hopper Company Queries II",
   "titleSlug": "hopper-company-queries-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.89992453095109",
   "difficulty": "Easy",
   "frontendQuestionId": 1646,
   "isFavor": false,
   "paidOnly": false,
   "title": "Get Maximum in Generated Array",
   "titleSlug": "get-maximum-in-generated-array",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.262052715123104",
   "difficulty": "Medium",
   "frontendQuestionId": 1647,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Deletions to Make Character Frequencies Unique",
   "titleSlug": "minimum-deletions-to-make-character-frequencies-unique",
   "topicTags": "['Hash Table', 'String', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.916047302380168",
   "difficulty": "Medium",
   "frontendQuestionId": 1648,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sell Diminishing-Valued Colored Balls",
   "titleSlug": "sell-diminishing-valued-colored-balls",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.71593455849395",
   "difficulty": "Hard",
   "frontendQuestionId": 1649,
   "isFavor": false,
   "paidOnly": false,
   "title": "Create Sorted Array through Instructions",
   "titleSlug": "create-sorted-array-through-instructions",
   "topicTags": "['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.14315333524476",
   "difficulty": "Medium",
   "frontendQuestionId": 1650,
   "isFavor": false,
   "paidOnly": true,
   "title": "Lowest Common Ancestor of a Binary Tree III",
   "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iii",
   "topicTags": "['Hash Table', 'Two Pointers', 'Tree', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.78211106401017",
   "difficulty": "Hard",
   "frontendQuestionId": 1651,
   "isFavor": false,
   "paidOnly": true,
   "title": "Hopper Company Queries III",
   "titleSlug": "hopper-company-queries-iii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.25640019189673",
   "difficulty": "Easy",
   "frontendQuestionId": 1652,
   "isFavor": false,
   "paidOnly": false,
   "title": "Defuse the Bomb",
   "titleSlug": "defuse-the-bomb",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.58923231841837",
   "difficulty": "Medium",
   "frontendQuestionId": 1653,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Deletions to Make String Balanced",
   "titleSlug": "minimum-deletions-to-make-string-balanced",
   "topicTags": "['String', 'Dynamic Programming', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.998881820892553",
   "difficulty": "Medium",
   "frontendQuestionId": 1654,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Jumps to Reach Home",
   "titleSlug": "minimum-jumps-to-reach-home",
   "topicTags": "['Array', 'Dynamic Programming', 'Breadth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.58774592222198",
   "difficulty": "Hard",
   "frontendQuestionId": 1655,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distribute Repeating Integers",
   "titleSlug": "distribute-repeating-integers",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.4597101999603",
   "difficulty": "Easy",
   "frontendQuestionId": 1656,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design an Ordered Stream",
   "titleSlug": "design-an-ordered-stream",
   "topicTags": "['Array', 'Hash Table', 'Design', 'Data Stream']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.08104956268222",
   "difficulty": "Medium",
   "frontendQuestionId": 1657,
   "isFavor": false,
   "paidOnly": false,
   "title": "Determine if Two Strings Are Close",
   "titleSlug": "determine-if-two-strings-are-close",
   "topicTags": "['Hash Table', 'String', 'Sorting', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.9816241565775",
   "difficulty": "Medium",
   "frontendQuestionId": 1658,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Reduce X to Zero",
   "titleSlug": "minimum-operations-to-reduce-x-to-zero",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.625985454989916",
   "difficulty": "Hard",
   "frontendQuestionId": 1659,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Grid Happiness",
   "titleSlug": "maximize-grid-happiness",
   "topicTags": "['Dynamic Programming', 'Bit Manipulation', 'Memoization', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.35521585872334",
   "difficulty": "Medium",
   "frontendQuestionId": 1660,
   "isFavor": false,
   "paidOnly": true,
   "title": "Correct a Binary Tree",
   "titleSlug": "correct-a-binary-tree",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.86821364304294",
   "difficulty": "Easy",
   "frontendQuestionId": 1661,
   "isFavor": false,
   "paidOnly": false,
   "title": "Average Time of Process per Machine",
   "titleSlug": "average-time-of-process-per-machine",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.71070829742955",
   "difficulty": "Easy",
   "frontendQuestionId": 1662,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If Two String Arrays are Equivalent",
   "titleSlug": "check-if-two-string-arrays-are-equivalent",
   "topicTags": "['Array', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.00241197633837",
   "difficulty": "Medium",
   "frontendQuestionId": 1663,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest String With A Given Numeric Value",
   "titleSlug": "smallest-string-with-a-given-numeric-value",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.26778966800312",
   "difficulty": "Medium",
   "frontendQuestionId": 1664,
   "isFavor": false,
   "paidOnly": false,
   "title": "Ways to Make a Fair Array",
   "titleSlug": "ways-to-make-a-fair-array",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.98856431830302",
   "difficulty": "Hard",
   "frontendQuestionId": 1665,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Initial Energy to Finish Tasks",
   "titleSlug": "minimum-initial-energy-to-finish-tasks",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.47767308480131",
   "difficulty": "Medium",
   "frontendQuestionId": 1666,
   "isFavor": false,
   "paidOnly": true,
   "title": "Change the Root of a Binary Tree",
   "titleSlug": "change-the-root-of-a-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.0361953660013",
   "difficulty": "Easy",
   "frontendQuestionId": 1667,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fix Names in a Table",
   "titleSlug": "fix-names-in-a-table",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.31948239418467",
   "difficulty": "Easy",
   "frontendQuestionId": 1668,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Repeating Substring",
   "titleSlug": "maximum-repeating-substring",
   "topicTags": "['String', 'Dynamic Programming', 'String Matching']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.20075301102283",
   "difficulty": "Medium",
   "frontendQuestionId": 1669,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge In Between Linked Lists",
   "titleSlug": "merge-in-between-linked-lists",
   "topicTags": "['Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.04999585440677",
   "difficulty": "Medium",
   "frontendQuestionId": 1670,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Front Middle Back Queue",
   "titleSlug": "design-front-middle-back-queue",
   "topicTags": "['Array', 'Linked List', 'Design', 'Queue', 'Data Stream']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.98704819422403",
   "difficulty": "Hard",
   "frontendQuestionId": 1671,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Removals to Make Mountain Array",
   "titleSlug": "minimum-number-of-removals-to-make-mountain-array",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.50836956966236",
   "difficulty": "Easy",
   "frontendQuestionId": 1672,
   "isFavor": false,
   "paidOnly": false,
   "title": "Richest Customer Wealth",
   "titleSlug": "richest-customer-wealth",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "51.53364709534931",
   "difficulty": "Medium",
   "frontendQuestionId": 1673,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Most Competitive Subsequence",
   "titleSlug": "find-the-most-competitive-subsequence",
   "topicTags": "['Array', 'Stack', 'Greedy', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.39882299683115",
   "difficulty": "Medium",
   "frontendQuestionId": 1674,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Moves to Make Array Complementary",
   "titleSlug": "minimum-moves-to-make-array-complementary",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.9159970176456",
   "difficulty": "Hard",
   "frontendQuestionId": 1675,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize Deviation in Array",
   "titleSlug": "minimize-deviation-in-array",
   "topicTags": "['Array', 'Greedy', 'Heap (Priority Queue)', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.9061939280844",
   "difficulty": "Medium",
   "frontendQuestionId": 1676,
   "isFavor": false,
   "paidOnly": true,
   "title": "Lowest Common Ancestor of a Binary Tree IV",
   "titleSlug": "lowest-common-ancestor-of-a-binary-tree-iv",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.44863216909132",
   "difficulty": "Easy",
   "frontendQuestionId": 1677,
   "isFavor": false,
   "paidOnly": true,
   "title": "Product's Worth Over Invoices",
   "titleSlug": "products-worth-over-invoices",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.6214496400022",
   "difficulty": "Easy",
   "frontendQuestionId": 1678,
   "isFavor": false,
   "paidOnly": false,
   "title": "Goal Parser Interpretation",
   "titleSlug": "goal-parser-interpretation",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.009510127127385",
   "difficulty": "Medium",
   "frontendQuestionId": 1679,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Number of K-Sum Pairs",
   "titleSlug": "max-number-of-k-sum-pairs",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.63211082162747",
   "difficulty": "Medium",
   "frontendQuestionId": 1680,
   "isFavor": false,
   "paidOnly": false,
   "title": "Concatenation of Consecutive Binary Numbers",
   "titleSlug": "concatenation-of-consecutive-binary-numbers",
   "topicTags": "['Math', 'Bit Manipulation', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.66223971142811",
   "difficulty": "Hard",
   "frontendQuestionId": 1681,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Incompatibility",
   "titleSlug": "minimum-incompatibility",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.18126633504764",
   "difficulty": "Medium",
   "frontendQuestionId": 1682,
   "isFavor": false,
   "paidOnly": true,
   "title": "Longest Palindromic Subsequence II",
   "titleSlug": "longest-palindromic-subsequence-ii",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.61024340988678",
   "difficulty": "Easy",
   "frontendQuestionId": 1683,
   "isFavor": false,
   "paidOnly": false,
   "title": "Invalid Tweets",
   "titleSlug": "invalid-tweets",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.23005035612212",
   "difficulty": "Easy",
   "frontendQuestionId": 1684,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Consistent Strings",
   "titleSlug": "count-the-number-of-consistent-strings",
   "topicTags": "['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.16532935461643",
   "difficulty": "Medium",
   "frontendQuestionId": 1685,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Absolute Differences in a Sorted Array",
   "titleSlug": "sum-of-absolute-differences-in-a-sorted-array",
   "topicTags": "['Array', 'Math', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.46838258659041",
   "difficulty": "Medium",
   "frontendQuestionId": 1686,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stone Game VI",
   "titleSlug": "stone-game-vi",
   "topicTags": "['Array', 'Math', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.17752234993615",
   "difficulty": "Hard",
   "frontendQuestionId": 1687,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delivering Boxes from Storage to Ports",
   "titleSlug": "delivering-boxes-from-storage-to-ports",
   "topicTags": "['Array', 'Dynamic Programming', 'Segment Tree', 'Queue', 'Heap (Priority Queue)', 'Prefix Sum', 'Monotonic Queue']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.85937720340073",
   "difficulty": "Easy",
   "frontendQuestionId": 1688,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count of Matches in Tournament",
   "titleSlug": "count-of-matches-in-tournament",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.59834917255324",
   "difficulty": "Medium",
   "frontendQuestionId": 1689,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partitioning Into Minimum Number Of Deci-Binary Numbers",
   "titleSlug": "partitioning-into-minimum-number-of-deci-binary-numbers",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.237689744539054",
   "difficulty": "Medium",
   "frontendQuestionId": 1690,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stone Game VII",
   "titleSlug": "stone-game-vii",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.63815897385428",
   "difficulty": "Hard",
   "frontendQuestionId": 1691,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Height by Stacking Cuboids ",
   "titleSlug": "maximum-height-by-stacking-cuboids",
   "topicTags": "['Array', 'Dynamic Programming', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.03527845573552",
   "difficulty": "Hard",
   "frontendQuestionId": 1692,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Ways to Distribute Candies",
   "titleSlug": "count-ways-to-distribute-candies",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.56800679656882",
   "difficulty": "Easy",
   "frontendQuestionId": 1693,
   "isFavor": false,
   "paidOnly": false,
   "title": "Daily Leads and Partners",
   "titleSlug": "daily-leads-and-partners",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.76096181046675",
   "difficulty": "Easy",
   "frontendQuestionId": 1694,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reformat Phone Number",
   "titleSlug": "reformat-phone-number",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.13109918037476",
   "difficulty": "Medium",
   "frontendQuestionId": 1695,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Erasure Value",
   "titleSlug": "maximum-erasure-value",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.88405705330146",
   "difficulty": "Medium",
   "frontendQuestionId": 1696,
   "isFavor": false,
   "paidOnly": false,
   "title": "Jump Game VI",
   "titleSlug": "jump-game-vi",
   "topicTags": "['Array', 'Dynamic Programming', 'Queue', 'Heap (Priority Queue)', 'Monotonic Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.710760050753876",
   "difficulty": "Hard",
   "frontendQuestionId": 1697,
   "isFavor": false,
   "paidOnly": false,
   "title": "Checking Existence of Edge Length Limited Paths",
   "titleSlug": "checking-existence-of-edge-length-limited-paths",
   "topicTags": "['Array', 'Two Pointers', 'Union Find', 'Graph', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.37484084542908",
   "difficulty": "Medium",
   "frontendQuestionId": 1698,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Distinct Substrings in a String",
   "titleSlug": "number-of-distinct-substrings-in-a-string",
   "topicTags": "['String', 'Trie', 'Rolling Hash', 'Suffix Array', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.9648741686441",
   "difficulty": "Medium",
   "frontendQuestionId": 1699,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Calls Between Two Persons",
   "titleSlug": "number-of-calls-between-two-persons",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.57379714609675",
   "difficulty": "Easy",
   "frontendQuestionId": 1700,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Students Unable to Eat Lunch",
   "titleSlug": "number-of-students-unable-to-eat-lunch",
   "topicTags": "['Array', 'Stack', 'Queue', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.0592492757007",
   "difficulty": "Medium",
   "frontendQuestionId": 1701,
   "isFavor": false,
   "paidOnly": false,
   "title": "Average Waiting Time",
   "titleSlug": "average-waiting-time",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.81659606279591",
   "difficulty": "Medium",
   "frontendQuestionId": 1702,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Binary String After Change",
   "titleSlug": "maximum-binary-string-after-change",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.069901594842214",
   "difficulty": "Hard",
   "frontendQuestionId": 1703,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Adjacent Swaps for K Consecutive Ones",
   "titleSlug": "minimum-adjacent-swaps-for-k-consecutive-ones",
   "topicTags": "['Array', 'Greedy', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.62904318074317",
   "difficulty": "Easy",
   "frontendQuestionId": 1704,
   "isFavor": false,
   "paidOnly": false,
   "title": "Determine if String Halves Are Alike",
   "titleSlug": "determine-if-string-halves-are-alike",
   "topicTags": "['String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.27950167792948",
   "difficulty": "Medium",
   "frontendQuestionId": 1705,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Eaten Apples",
   "titleSlug": "maximum-number-of-eaten-apples",
   "topicTags": "['Array', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.97063519300497",
   "difficulty": "Medium",
   "frontendQuestionId": 1706,
   "isFavor": false,
   "paidOnly": false,
   "title": "Where Will the Ball Fall",
   "titleSlug": "where-will-the-ball-fall",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.03666243173231",
   "difficulty": "Hard",
   "frontendQuestionId": 1707,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum XOR With an Element From Array",
   "titleSlug": "maximum-xor-with-an-element-from-array",
   "topicTags": "['Array', 'Bit Manipulation', 'Trie']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.14254975793438",
   "difficulty": "Easy",
   "frontendQuestionId": 1708,
   "isFavor": false,
   "paidOnly": true,
   "title": "Largest Subarray Length K",
   "titleSlug": "largest-subarray-length-k",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.32199120944244",
   "difficulty": "Medium",
   "frontendQuestionId": 1709,
   "isFavor": false,
   "paidOnly": true,
   "title": "Biggest Window Between Visits",
   "titleSlug": "biggest-window-between-visits",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.11963489484513",
   "difficulty": "Easy",
   "frontendQuestionId": 1710,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Units on a Truck",
   "titleSlug": "maximum-units-on-a-truck",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.361084326638355",
   "difficulty": "Medium",
   "frontendQuestionId": 1711,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Good Meals",
   "titleSlug": "count-good-meals",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.31328211157594",
   "difficulty": "Medium",
   "frontendQuestionId": 1712,
   "isFavor": false,
   "paidOnly": false,
   "title": "Ways to Split Array Into Three Subarrays",
   "titleSlug": "ways-to-split-array-into-three-subarrays",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.28592018118802",
   "difficulty": "Hard",
   "frontendQuestionId": 1713,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make a Subsequence",
   "titleSlug": "minimum-operations-to-make-a-subsequence",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.1063029162747",
   "difficulty": "Hard",
   "frontendQuestionId": 1714,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sum Of Special Evenly-Spaced Elements In Array",
   "titleSlug": "sum-of-special-evenly-spaced-elements-in-array",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.90730214254482",
   "difficulty": "Medium",
   "frontendQuestionId": 1715,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Apples and Oranges",
   "titleSlug": "count-apples-and-oranges",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.41486832479883",
   "difficulty": "Easy",
   "frontendQuestionId": 1716,
   "isFavor": false,
   "paidOnly": false,
   "title": "Calculate Money in Leetcode Bank",
   "titleSlug": "calculate-money-in-leetcode-bank",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.79905649780972",
   "difficulty": "Medium",
   "frontendQuestionId": 1717,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Score From Removing Substrings",
   "titleSlug": "maximum-score-from-removing-substrings",
   "topicTags": "['String', 'Stack', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.2157942066109",
   "difficulty": "Medium",
   "frontendQuestionId": 1718,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct the Lexicographically Largest Valid Sequence",
   "titleSlug": "construct-the-lexicographically-largest-valid-sequence",
   "topicTags": "['Array', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.06779661016949",
   "difficulty": "Hard",
   "frontendQuestionId": 1719,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number Of Ways To Reconstruct A Tree",
   "titleSlug": "number-of-ways-to-reconstruct-a-tree",
   "topicTags": "['Tree', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.84551791214136",
   "difficulty": "Easy",
   "frontendQuestionId": 1720,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decode XORed Array",
   "titleSlug": "decode-xored-array",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.32157698082901",
   "difficulty": "Medium",
   "frontendQuestionId": 1721,
   "isFavor": false,
   "paidOnly": false,
   "title": "Swapping Nodes in a Linked List",
   "titleSlug": "swapping-nodes-in-a-linked-list",
   "topicTags": "['Linked List', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.940288573533955",
   "difficulty": "Medium",
   "frontendQuestionId": 1722,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize Hamming Distance After Swap Operations",
   "titleSlug": "minimize-hamming-distance-after-swap-operations",
   "topicTags": "['Array', 'Depth-First Search', 'Union Find']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.069010883865566",
   "difficulty": "Hard",
   "frontendQuestionId": 1723,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Minimum Time to Finish All Jobs",
   "titleSlug": "find-minimum-time-to-finish-all-jobs",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.3184881336068",
   "difficulty": "Hard",
   "frontendQuestionId": 1724,
   "isFavor": false,
   "paidOnly": true,
   "title": "Checking Existence of Edge Length Limited Paths II",
   "titleSlug": "checking-existence-of-edge-length-limited-paths-ii",
   "topicTags": "['Union Find', 'Graph', 'Minimum Spanning Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.93366459627329",
   "difficulty": "Easy",
   "frontendQuestionId": 1725,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number Of Rectangles That Can Form The Largest Square",
   "titleSlug": "number-of-rectangles-that-can-form-the-largest-square",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.20680725120236",
   "difficulty": "Medium",
   "frontendQuestionId": 1726,
   "isFavor": false,
   "paidOnly": false,
   "title": "Tuple with Same Product",
   "titleSlug": "tuple-with-same-product",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.16710071593373",
   "difficulty": "Medium",
   "frontendQuestionId": 1727,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Submatrix With Rearrangements",
   "titleSlug": "largest-submatrix-with-rearrangements",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.48300111547602",
   "difficulty": "Hard",
   "frontendQuestionId": 1728,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cat and Mouse II",
   "titleSlug": "cat-and-mouse-ii",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Graph', 'Topological Sort', 'Memoization', 'Matrix', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.49548351179004",
   "difficulty": "Easy",
   "frontendQuestionId": 1729,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Followers Count",
   "titleSlug": "find-followers-count",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.526742856310406",
   "difficulty": "Medium",
   "frontendQuestionId": 1730,
   "isFavor": false,
   "paidOnly": true,
   "title": "Shortest Path to Get Food",
   "titleSlug": "shortest-path-to-get-food",
   "topicTags": "['Array', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.76219214436274",
   "difficulty": "Easy",
   "frontendQuestionId": 1731,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Number of Employees Which Report to Each Employee",
   "titleSlug": "the-number-of-employees-which-report-to-each-employee",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.78513855803823",
   "difficulty": "Easy",
   "frontendQuestionId": 1732,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Highest Altitude",
   "titleSlug": "find-the-highest-altitude",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.33110051617479",
   "difficulty": "Medium",
   "frontendQuestionId": 1733,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of People to Teach",
   "titleSlug": "minimum-number-of-people-to-teach",
   "topicTags": "['Array', 'Hash Table', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.56374355195284",
   "difficulty": "Medium",
   "frontendQuestionId": 1734,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decode XORed Permutation",
   "titleSlug": "decode-xored-permutation",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.40789194540697",
   "difficulty": "Hard",
   "frontendQuestionId": 1735,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Ways to Make Array With Product",
   "titleSlug": "count-ways-to-make-array-with-product",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Combinatorics', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.96264429626443",
   "difficulty": "Easy",
   "frontendQuestionId": 1736,
   "isFavor": false,
   "paidOnly": false,
   "title": "Latest Time by Replacing Hidden Digits",
   "titleSlug": "latest-time-by-replacing-hidden-digits",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.97046868113032",
   "difficulty": "Medium",
   "frontendQuestionId": 1737,
   "isFavor": false,
   "paidOnly": false,
   "title": "Change Minimum Characters to Satisfy One of Three Conditions",
   "titleSlug": "change-minimum-characters-to-satisfy-one-of-three-conditions",
   "topicTags": "['Hash Table', 'String', 'Counting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.55145023468528",
   "difficulty": "Medium",
   "frontendQuestionId": 1738,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Kth Largest XOR Coordinate Value",
   "titleSlug": "find-kth-largest-xor-coordinate-value",
   "topicTags": "['Array', 'Divide and Conquer', 'Bit Manipulation', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Prefix Sum', 'Quickselect']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.69260582571308",
   "difficulty": "Hard",
   "frontendQuestionId": 1739,
   "isFavor": false,
   "paidOnly": false,
   "title": "Building Boxes",
   "titleSlug": "building-boxes",
   "topicTags": "['Math', 'Binary Search', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.91313967123166",
   "difficulty": "Medium",
   "frontendQuestionId": 1740,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Distance in a Binary Tree",
   "titleSlug": "find-distance-in-a-binary-tree",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.86490844883545",
   "difficulty": "Easy",
   "frontendQuestionId": 1741,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Total Time Spent by Each Employee",
   "titleSlug": "find-total-time-spent-by-each-employee",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.11245974733714",
   "difficulty": "Easy",
   "frontendQuestionId": 1742,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Balls in a Box",
   "titleSlug": "maximum-number-of-balls-in-a-box",
   "topicTags": "['Hash Table', 'Math', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.69557899166294",
   "difficulty": "Medium",
   "frontendQuestionId": 1743,
   "isFavor": false,
   "paidOnly": false,
   "title": "Restore the Array From Adjacent Pairs",
   "titleSlug": "restore-the-array-from-adjacent-pairs",
   "topicTags": "['Array', 'Hash Table', 'Depth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.41892552243525",
   "difficulty": "Medium",
   "frontendQuestionId": 1744,
   "isFavor": false,
   "paidOnly": false,
   "title": "Can You Eat Your Favorite Candy on Your Favorite Day?",
   "titleSlug": "can-you-eat-your-favorite-candy-on-your-favorite-day",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.635300363840784",
   "difficulty": "Hard",
   "frontendQuestionId": 1745,
   "isFavor": false,
   "paidOnly": false,
   "title": "Palindrome Partitioning IV",
   "titleSlug": "palindrome-partitioning-iv",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.17967781908303",
   "difficulty": "Medium",
   "frontendQuestionId": 1746,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Subarray Sum After One Operation",
   "titleSlug": "maximum-subarray-sum-after-one-operation",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.400336692464165",
   "difficulty": "Medium",
   "frontendQuestionId": 1747,
   "isFavor": false,
   "paidOnly": true,
   "title": "Leetflex Banned Accounts",
   "titleSlug": "leetflex-banned-accounts",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.85962286740497",
   "difficulty": "Easy",
   "frontendQuestionId": 1748,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Unique Elements",
   "titleSlug": "sum-of-unique-elements",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.50926750719474",
   "difficulty": "Medium",
   "frontendQuestionId": 1749,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Absolute Sum of Any Subarray",
   "titleSlug": "maximum-absolute-sum-of-any-subarray",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.87342579308145",
   "difficulty": "Medium",
   "frontendQuestionId": 1750,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Length of String After Deleting Similar Ends",
   "titleSlug": "minimum-length-of-string-after-deleting-similar-ends",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.89308434854822",
   "difficulty": "Hard",
   "frontendQuestionId": 1751,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Events That Can Be Attended II",
   "titleSlug": "maximum-number-of-events-that-can-be-attended-ii",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.96165178364786",
   "difficulty": "Easy",
   "frontendQuestionId": 1752,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Array Is Sorted and Rotated",
   "titleSlug": "check-if-array-is-sorted-and-rotated",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.62513617338456",
   "difficulty": "Medium",
   "frontendQuestionId": 1753,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Score From Removing Stones",
   "titleSlug": "maximum-score-from-removing-stones",
   "topicTags": "['Math', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.59461223305899",
   "difficulty": "Medium",
   "frontendQuestionId": 1754,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Merge Of Two Strings",
   "titleSlug": "largest-merge-of-two-strings",
   "topicTags": "['Two Pointers', 'String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.2383004011291",
   "difficulty": "Hard",
   "frontendQuestionId": 1755,
   "isFavor": false,
   "paidOnly": false,
   "title": "Closest Subsequence Sum",
   "titleSlug": "closest-subsequence-sum",
   "topicTags": "['Array', 'Two Pointers', 'Dynamic Programming', 'Bit Manipulation', 'Sorting', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.68146993896896",
   "difficulty": "Medium",
   "frontendQuestionId": 1756,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design Most Recently Used Queue",
   "titleSlug": "design-most-recently-used-queue",
   "topicTags": "['Array', 'Hash Table', 'Stack', 'Design', 'Binary Indexed Tree', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.34276255156813",
   "difficulty": "Easy",
   "frontendQuestionId": 1757,
   "isFavor": false,
   "paidOnly": false,
   "title": "Recyclable and Low Fat Products",
   "titleSlug": "recyclable-and-low-fat-products",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.691060206770736",
   "difficulty": "Easy",
   "frontendQuestionId": 1758,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Changes To Make Alternating Binary String",
   "titleSlug": "minimum-changes-to-make-alternating-binary-string",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.45285343615464",
   "difficulty": "Medium",
   "frontendQuestionId": 1759,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Homogenous Substrings",
   "titleSlug": "count-number-of-homogenous-substrings",
   "topicTags": "['Math', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.60798957543224",
   "difficulty": "Medium",
   "frontendQuestionId": 1760,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Limit of Balls in a Bag",
   "titleSlug": "minimum-limit-of-balls-in-a-bag",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.11297483966453",
   "difficulty": "Hard",
   "frontendQuestionId": 1761,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Degree of a Connected Trio in a Graph",
   "titleSlug": "minimum-degree-of-a-connected-trio-in-a-graph",
   "topicTags": "['Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.62738413418175",
   "difficulty": "Medium",
   "frontendQuestionId": 1762,
   "isFavor": false,
   "paidOnly": true,
   "title": "Buildings With an Ocean View",
   "titleSlug": "buildings-with-an-ocean-view",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.9685412626589",
   "difficulty": "Easy",
   "frontendQuestionId": 1763,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Nice Substring",
   "titleSlug": "longest-nice-substring",
   "topicTags": "['Hash Table', 'String', 'Divide and Conquer', 'Bit Manipulation', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.61888059923312",
   "difficulty": "Medium",
   "frontendQuestionId": 1764,
   "isFavor": false,
   "paidOnly": false,
   "title": "Form Array by Concatenating Subarrays of Another Array",
   "titleSlug": "form-array-by-concatenating-subarrays-of-another-array",
   "topicTags": "['Array', 'Two Pointers', 'Greedy', 'String Matching']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.02377060564298",
   "difficulty": "Medium",
   "frontendQuestionId": 1765,
   "isFavor": false,
   "paidOnly": false,
   "title": "Map of Highest Peak",
   "titleSlug": "map-of-highest-peak",
   "topicTags": "['Array', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.820368885324775",
   "difficulty": "Hard",
   "frontendQuestionId": 1766,
   "isFavor": false,
   "paidOnly": false,
   "title": "Tree of Coprimes",
   "titleSlug": "tree-of-coprimes",
   "topicTags": "['Array', 'Math', 'Tree', 'Depth-First Search', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.06286688127248",
   "difficulty": "Hard",
   "frontendQuestionId": 1767,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Subtasks That Did Not Execute",
   "titleSlug": "find-the-subtasks-that-did-not-execute",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.04905463492408",
   "difficulty": "Easy",
   "frontendQuestionId": 1768,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge Strings Alternately",
   "titleSlug": "merge-strings-alternately",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "90.11761051490382",
   "difficulty": "Medium",
   "frontendQuestionId": 1769,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Move All Balls to Each Box",
   "titleSlug": "minimum-number-of-operations-to-move-all-balls-to-each-box",
   "topicTags": "['Array', 'String', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.934275153172315",
   "difficulty": "Hard",
   "frontendQuestionId": 1770,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Score from Performing Multiplication Operations",
   "titleSlug": "maximum-score-from-performing-multiplication-operations",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.03339313617686",
   "difficulty": "Hard",
   "frontendQuestionId": 1771,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Palindrome Length From Subsequences",
   "titleSlug": "maximize-palindrome-length-from-subsequences",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.73770491803279",
   "difficulty": "Medium",
   "frontendQuestionId": 1772,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sort Features by Popularity",
   "titleSlug": "sort-features-by-popularity",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.87020882194656",
   "difficulty": "Easy",
   "frontendQuestionId": 1773,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Items Matching a Rule",
   "titleSlug": "count-items-matching-a-rule",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.62300071946427",
   "difficulty": "Medium",
   "frontendQuestionId": 1774,
   "isFavor": false,
   "paidOnly": false,
   "title": "Closest Dessert Cost",
   "titleSlug": "closest-dessert-cost",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.826296943958695",
   "difficulty": "Medium",
   "frontendQuestionId": 1775,
   "isFavor": false,
   "paidOnly": false,
   "title": "Equal Sum Arrays With Minimum Number of Operations",
   "titleSlug": "equal-sum-arrays-with-minimum-number-of-operations",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.096761757902854",
   "difficulty": "Hard",
   "frontendQuestionId": 1776,
   "isFavor": false,
   "paidOnly": false,
   "title": "Car Fleet II",
   "titleSlug": "car-fleet-ii",
   "topicTags": "['Array', 'Math', 'Stack', 'Heap (Priority Queue)', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.47799789938793",
   "difficulty": "Easy",
   "frontendQuestionId": 1777,
   "isFavor": false,
   "paidOnly": true,
   "title": "Product's Price for Each Store",
   "titleSlug": "products-price-for-each-store",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.021675795361844",
   "difficulty": "Medium",
   "frontendQuestionId": 1778,
   "isFavor": false,
   "paidOnly": true,
   "title": "Shortest Path in a Hidden Grid",
   "titleSlug": "shortest-path-in-a-hidden-grid",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Interactive']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.22326058622889",
   "difficulty": "Easy",
   "frontendQuestionId": 1779,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Nearest Point That Has the Same X or Y Coordinate",
   "titleSlug": "find-nearest-point-that-has-the-same-x-or-y-coordinate",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.26216809313107",
   "difficulty": "Medium",
   "frontendQuestionId": 1780,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Number is a Sum of Powers of Three",
   "titleSlug": "check-if-number-is-a-sum-of-powers-of-three",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.94188556907548",
   "difficulty": "Medium",
   "frontendQuestionId": 1781,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Beauty of All Substrings",
   "titleSlug": "sum-of-beauty-of-all-substrings",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.50721732157177",
   "difficulty": "Hard",
   "frontendQuestionId": 1782,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Pairs Of Nodes",
   "titleSlug": "count-pairs-of-nodes",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Graph', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.17443745363629",
   "difficulty": "Medium",
   "frontendQuestionId": 1783,
   "isFavor": false,
   "paidOnly": true,
   "title": "Grand Slam Titles",
   "titleSlug": "grand-slam-titles",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.011097000483794",
   "difficulty": "Easy",
   "frontendQuestionId": 1784,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Binary String Has at Most One Segment of Ones",
   "titleSlug": "check-if-binary-string-has-at-most-one-segment-of-ones",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.1566908741873",
   "difficulty": "Medium",
   "frontendQuestionId": 1785,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Elements to Add to Form a Given Sum",
   "titleSlug": "minimum-elements-to-add-to-form-a-given-sum",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.754558690979685",
   "difficulty": "Medium",
   "frontendQuestionId": 1786,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Restricted Paths From First to Last Node",
   "titleSlug": "number-of-restricted-paths-from-first-to-last-node",
   "topicTags": "['Dynamic Programming', 'Graph', 'Topological Sort', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.72557556567055",
   "difficulty": "Hard",
   "frontendQuestionId": 1787,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make the XOR of All Segments Equal to Zero",
   "titleSlug": "make-the-xor-of-all-segments-equal-to-zero",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.620386643233736",
   "difficulty": "Hard",
   "frontendQuestionId": 1788,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximize the Beauty of the Garden",
   "titleSlug": "maximize-the-beauty-of-the-garden",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.74922097276792",
   "difficulty": "Easy",
   "frontendQuestionId": 1789,
   "isFavor": false,
   "paidOnly": false,
   "title": "Primary Department for Each Employee",
   "titleSlug": "primary-department-for-each-employee",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.44160102192889",
   "difficulty": "Easy",
   "frontendQuestionId": 1790,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if One String Swap Can Make Strings Equal",
   "titleSlug": "check-if-one-string-swap-can-make-strings-equal",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.60061829291058",
   "difficulty": "Easy",
   "frontendQuestionId": 1791,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Center of Star Graph",
   "titleSlug": "find-center-of-star-graph",
   "topicTags": "['Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.56060080170413",
   "difficulty": "Medium",
   "frontendQuestionId": 1792,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Average Pass Ratio",
   "titleSlug": "maximum-average-pass-ratio",
   "topicTags": "['Array', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.21977744056652",
   "difficulty": "Hard",
   "frontendQuestionId": 1793,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Score of a Good Subarray",
   "titleSlug": "maximum-score-of-a-good-subarray",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.6260301221938",
   "difficulty": "Medium",
   "frontendQuestionId": 1794,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Pairs of Equal Substrings With Minimum Difference",
   "titleSlug": "count-pairs-of-equal-substrings-with-minimum-difference",
   "topicTags": "['Hash Table', 'String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.56531757055029",
   "difficulty": "Easy",
   "frontendQuestionId": 1795,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rearrange Products Table",
   "titleSlug": "rearrange-products-table",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.63220892274211",
   "difficulty": "Easy",
   "frontendQuestionId": 1796,
   "isFavor": false,
   "paidOnly": false,
   "title": "Second Largest Digit in a String",
   "titleSlug": "second-largest-digit-in-a-string",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.01109931040672",
   "difficulty": "Medium",
   "frontendQuestionId": 1797,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Authentication Manager",
   "titleSlug": "design-authentication-manager",
   "topicTags": "['Hash Table', 'Linked List', 'Design', 'Doubly-Linked List']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.6299046774551",
   "difficulty": "Medium",
   "frontendQuestionId": 1798,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Consecutive Values You Can Make",
   "titleSlug": "maximum-number-of-consecutive-values-you-can-make",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.79728820759726",
   "difficulty": "Hard",
   "frontendQuestionId": 1799,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Score After N Operations",
   "titleSlug": "maximize-score-after-n-operations",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Number Theory', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.5505195483014",
   "difficulty": "Easy",
   "frontendQuestionId": 1800,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Ascending Subarray Sum",
   "titleSlug": "maximum-ascending-subarray-sum",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.303331385154884",
   "difficulty": "Medium",
   "frontendQuestionId": 1801,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Orders in the Backlog",
   "titleSlug": "number-of-orders-in-the-backlog",
   "topicTags": "['Array', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.810392303265786",
   "difficulty": "Medium",
   "frontendQuestionId": 1802,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Value at a Given Index in a Bounded Array",
   "titleSlug": "maximum-value-at-a-given-index-in-a-bounded-array",
   "topicTags": "['Binary Search', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.83583240510667",
   "difficulty": "Hard",
   "frontendQuestionId": 1803,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Pairs With XOR in a Range",
   "titleSlug": "count-pairs-with-xor-in-a-range",
   "topicTags": "['Array', 'Bit Manipulation', 'Trie']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.041289023162136",
   "difficulty": "Medium",
   "frontendQuestionId": 1804,
   "isFavor": false,
   "paidOnly": true,
   "title": "Implement Trie II (Prefix Tree)",
   "titleSlug": "implement-trie-ii-prefix-tree",
   "topicTags": "['Hash Table', 'String', 'Design', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.94190465545185",
   "difficulty": "Easy",
   "frontendQuestionId": 1805,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Different Integers in a String",
   "titleSlug": "number-of-different-integers-in-a-string",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.97260273972603",
   "difficulty": "Medium",
   "frontendQuestionId": 1806,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Reinitialize a Permutation",
   "titleSlug": "minimum-number-of-operations-to-reinitialize-a-permutation",
   "topicTags": "['Array', 'Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.83774479804161",
   "difficulty": "Medium",
   "frontendQuestionId": 1807,
   "isFavor": false,
   "paidOnly": false,
   "title": "Evaluate the Bracket Pairs of a String",
   "titleSlug": "evaluate-the-bracket-pairs-of-a-string",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.646034664892994",
   "difficulty": "Hard",
   "frontendQuestionId": 1808,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Number of Nice Divisors",
   "titleSlug": "maximize-number-of-nice-divisors",
   "topicTags": "['Math', 'Recursion', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.62958431165052",
   "difficulty": "Easy",
   "frontendQuestionId": 1809,
   "isFavor": false,
   "paidOnly": true,
   "title": "Ad-Free Sessions",
   "titleSlug": "ad-free-sessions",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.050795965487914",
   "difficulty": "Medium",
   "frontendQuestionId": 1810,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Path Cost in a Hidden Grid",
   "titleSlug": "minimum-path-cost-in-a-hidden-grid",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Interactive']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.66415252461764",
   "difficulty": "Medium",
   "frontendQuestionId": 1811,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Interview Candidates",
   "titleSlug": "find-interview-candidates",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.1115543840485",
   "difficulty": "Easy",
   "frontendQuestionId": 1812,
   "isFavor": false,
   "paidOnly": false,
   "title": "Determine Color of a Chessboard Square",
   "titleSlug": "determine-color-of-a-chessboard-square",
   "topicTags": "['Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.645404531989385",
   "difficulty": "Medium",
   "frontendQuestionId": 1813,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sentence Similarity III",
   "titleSlug": "sentence-similarity-iii",
   "topicTags": "['Array', 'Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.55856868681191",
   "difficulty": "Medium",
   "frontendQuestionId": 1814,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Nice Pairs in an Array",
   "titleSlug": "count-nice-pairs-in-an-array",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.21510025401287",
   "difficulty": "Hard",
   "frontendQuestionId": 1815,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Groups Getting Fresh Donuts",
   "titleSlug": "maximum-number-of-groups-getting-fresh-donuts",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Memoization', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.93454557927548",
   "difficulty": "Easy",
   "frontendQuestionId": 1816,
   "isFavor": false,
   "paidOnly": false,
   "title": "Truncate Sentence",
   "titleSlug": "truncate-sentence",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.40902164742032",
   "difficulty": "Medium",
   "frontendQuestionId": 1817,
   "isFavor": false,
   "paidOnly": false,
   "title": "Finding the Users Active Minutes",
   "titleSlug": "finding-the-users-active-minutes",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.117990602906954",
   "difficulty": "Medium",
   "frontendQuestionId": 1818,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Absolute Sum Difference",
   "titleSlug": "minimum-absolute-sum-difference",
   "topicTags": "['Array', 'Binary Search', 'Sorting', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.49359433436779",
   "difficulty": "Hard",
   "frontendQuestionId": 1819,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Different Subsequences GCDs",
   "titleSlug": "number-of-different-subsequences-gcds",
   "topicTags": "['Array', 'Math', 'Counting', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.62276455902584",
   "difficulty": "Medium",
   "frontendQuestionId": 1820,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Number of Accepted Invitations",
   "titleSlug": "maximum-number-of-accepted-invitations",
   "topicTags": "['Array', 'Depth-First Search', 'Graph', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.67172913473597",
   "difficulty": "Easy",
   "frontendQuestionId": 1821,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Customers With Positive Revenue this Year",
   "titleSlug": "find-customers-with-positive-revenue-this-year",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.1587169343299",
   "difficulty": "Easy",
   "frontendQuestionId": 1822,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sign of the Product of an Array",
   "titleSlug": "sign-of-the-product-of-an-array",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.00750213300888",
   "difficulty": "Medium",
   "frontendQuestionId": 1823,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Winner of the Circular Game",
   "titleSlug": "find-the-winner-of-the-circular-game",
   "topicTags": "['Array', 'Math', 'Recursion', 'Queue', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.59131533808793",
   "difficulty": "Medium",
   "frontendQuestionId": 1824,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Sideway Jumps",
   "titleSlug": "minimum-sideway-jumps",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.0281473506114",
   "difficulty": "Hard",
   "frontendQuestionId": 1825,
   "isFavor": false,
   "paidOnly": false,
   "title": "Finding MK Average",
   "titleSlug": "finding-mk-average",
   "topicTags": "['Design', 'Queue', 'Heap (Priority Queue)', 'Data Stream', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.3140703517588",
   "difficulty": "Easy",
   "frontendQuestionId": 1826,
   "isFavor": false,
   "paidOnly": true,
   "title": "Faulty Sensor",
   "titleSlug": "faulty-sensor",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.85617814370202",
   "difficulty": "Easy",
   "frontendQuestionId": 1827,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make the Array Increasing",
   "titleSlug": "minimum-operations-to-make-the-array-increasing",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.31375993054925",
   "difficulty": "Medium",
   "frontendQuestionId": 1828,
   "isFavor": false,
   "paidOnly": false,
   "title": "Queries on Number of Points Inside a Circle",
   "titleSlug": "queries-on-number-of-points-inside-a-circle",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.82002842301284",
   "difficulty": "Medium",
   "frontendQuestionId": 1829,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum XOR for Each Query",
   "titleSlug": "maximum-xor-for-each-query",
   "topicTags": "['Array', 'Bit Manipulation', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.79911186297314",
   "difficulty": "Hard",
   "frontendQuestionId": 1830,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Make String Sorted",
   "titleSlug": "minimum-number-of-operations-to-make-string-sorted",
   "topicTags": "['Math', 'String', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.39135637843198",
   "difficulty": "Medium",
   "frontendQuestionId": 1831,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Transaction Each Day",
   "titleSlug": "maximum-transaction-each-day",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.73857130482033",
   "difficulty": "Easy",
   "frontendQuestionId": 1832,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if the Sentence Is Pangram",
   "titleSlug": "check-if-the-sentence-is-pangram",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.83346190108854",
   "difficulty": "Medium",
   "frontendQuestionId": 1833,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Ice Cream Bars",
   "titleSlug": "maximum-ice-cream-bars",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Counting Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.155441028375094",
   "difficulty": "Medium",
   "frontendQuestionId": 1834,
   "isFavor": false,
   "paidOnly": false,
   "title": "Single-Threaded CPU",
   "titleSlug": "single-threaded-cpu",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.40129101667563",
   "difficulty": "Hard",
   "frontendQuestionId": 1835,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find XOR Sum of All Pairs Bitwise AND",
   "titleSlug": "find-xor-sum-of-all-pairs-bitwise-and",
   "topicTags": "['Array', 'Math', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.22173391929684",
   "difficulty": "Medium",
   "frontendQuestionId": 1836,
   "isFavor": false,
   "paidOnly": true,
   "title": "Remove Duplicates From an Unsorted Linked List",
   "titleSlug": "remove-duplicates-from-an-unsorted-linked-list",
   "topicTags": "['Hash Table', 'Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.74884814743713",
   "difficulty": "Easy",
   "frontendQuestionId": 1837,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Digits in Base K",
   "titleSlug": "sum-of-digits-in-base-k",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.00456590344457",
   "difficulty": "Medium",
   "frontendQuestionId": 1838,
   "isFavor": false,
   "paidOnly": false,
   "title": "Frequency of the Most Frequent Element",
   "titleSlug": "frequency-of-the-most-frequent-element",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Sliding Window', 'Sorting', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.10608481546481",
   "difficulty": "Medium",
   "frontendQuestionId": 1839,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Substring Of All Vowels in Order",
   "titleSlug": "longest-substring-of-all-vowels-in-order",
   "topicTags": "['String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.12296983758701",
   "difficulty": "Hard",
   "frontendQuestionId": 1840,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Building Height",
   "titleSlug": "maximum-building-height",
   "topicTags": "['Array', 'Math', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.44385026737968",
   "difficulty": "Medium",
   "frontendQuestionId": 1841,
   "isFavor": false,
   "paidOnly": true,
   "title": "League Statistics",
   "titleSlug": "league-statistics",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.6670646426744",
   "difficulty": "Hard",
   "frontendQuestionId": 1842,
   "isFavor": false,
   "paidOnly": true,
   "title": "Next Palindrome Using Same Digits",
   "titleSlug": "next-palindrome-using-same-digits",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.032412146025244",
   "difficulty": "Medium",
   "frontendQuestionId": 1843,
   "isFavor": false,
   "paidOnly": true,
   "title": "Suspicious Bank Accounts",
   "titleSlug": "suspicious-bank-accounts",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.96060512100787",
   "difficulty": "Easy",
   "frontendQuestionId": 1844,
   "isFavor": false,
   "paidOnly": false,
   "title": "Replace All Digits with Characters",
   "titleSlug": "replace-all-digits-with-characters",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.16239303108051",
   "difficulty": "Medium",
   "frontendQuestionId": 1845,
   "isFavor": false,
   "paidOnly": false,
   "title": "Seat Reservation Manager",
   "titleSlug": "seat-reservation-manager",
   "topicTags": "['Design', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.71997018657434",
   "difficulty": "Medium",
   "frontendQuestionId": 1846,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Element After Decreasing and Rearranging",
   "titleSlug": "maximum-element-after-decreasing-and-rearranging",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.33937211248136",
   "difficulty": "Hard",
   "frontendQuestionId": 1847,
   "isFavor": false,
   "paidOnly": false,
   "title": "Closest Room",
   "titleSlug": "closest-room",
   "topicTags": "['Array', 'Binary Search', 'Sorting', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.29511906598776",
   "difficulty": "Easy",
   "frontendQuestionId": 1848,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Distance to the Target Element",
   "titleSlug": "minimum-distance-to-the-target-element",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.66598799956884",
   "difficulty": "Medium",
   "frontendQuestionId": 1849,
   "isFavor": false,
   "paidOnly": false,
   "title": "Splitting a String Into Descending Consecutive Values",
   "titleSlug": "splitting-a-string-into-descending-consecutive-values",
   "topicTags": "['String', 'Backtracking']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.0727969348659",
   "difficulty": "Medium",
   "frontendQuestionId": 1850,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Adjacent Swaps to Reach the Kth Smallest Number",
   "titleSlug": "minimum-adjacent-swaps-to-reach-the-kth-smallest-number",
   "topicTags": "['Two Pointers', 'String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.84147776377854",
   "difficulty": "Hard",
   "frontendQuestionId": 1851,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Interval to Include Each Query",
   "titleSlug": "minimum-interval-to-include-each-query",
   "topicTags": "['Array', 'Binary Search', 'Line Sweep', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.91399330840386",
   "difficulty": "Medium",
   "frontendQuestionId": 1852,
   "isFavor": false,
   "paidOnly": true,
   "title": "Distinct Numbers in Each Subarray",
   "titleSlug": "distinct-numbers-in-each-subarray",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.59062536803674",
   "difficulty": "Easy",
   "frontendQuestionId": 1853,
   "isFavor": false,
   "paidOnly": true,
   "title": "Convert Date Format",
   "titleSlug": "convert-date-format",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.349965383218056",
   "difficulty": "Easy",
   "frontendQuestionId": 1854,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Population Year",
   "titleSlug": "maximum-population-year",
   "topicTags": "['Array', 'Counting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.591933086585264",
   "difficulty": "Medium",
   "frontendQuestionId": 1855,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Distance Between a Pair of Values",
   "titleSlug": "maximum-distance-between-a-pair-of-values",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.726129619836655",
   "difficulty": "Medium",
   "frontendQuestionId": 1856,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Subarray Min-Product",
   "titleSlug": "maximum-subarray-min-product",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.447056038418616",
   "difficulty": "Hard",
   "frontendQuestionId": 1857,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Color Value in a Directed Graph",
   "titleSlug": "largest-color-value-in-a-directed-graph",
   "topicTags": "['Hash Table', 'Dynamic Programming', 'Graph', 'Topological Sort', 'Memoization', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.3703624276217",
   "difficulty": "Medium",
   "frontendQuestionId": 1858,
   "isFavor": false,
   "paidOnly": true,
   "title": "Longest Word With All Prefixes",
   "titleSlug": "longest-word-with-all-prefixes",
   "topicTags": "['Depth-First Search', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.66608608062451",
   "difficulty": "Easy",
   "frontendQuestionId": 1859,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sorting the Sentence",
   "titleSlug": "sorting-the-sentence",
   "topicTags": "['String', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.41508608567948",
   "difficulty": "Medium",
   "frontendQuestionId": 1860,
   "isFavor": false,
   "paidOnly": false,
   "title": "Incremental Memory Leak",
   "titleSlug": "incremental-memory-leak",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.01692704881967",
   "difficulty": "Medium",
   "frontendQuestionId": 1861,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rotating the Box",
   "titleSlug": "rotating-the-box",
   "topicTags": "['Array', 'Two Pointers', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.41307681583717",
   "difficulty": "Hard",
   "frontendQuestionId": 1862,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Floored Pairs",
   "titleSlug": "sum-of-floored-pairs",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "90.05560921356864",
   "difficulty": "Easy",
   "frontendQuestionId": 1863,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of All Subset XOR Totals",
   "titleSlug": "sum-of-all-subset-xor-totals",
   "topicTags": "['Array', 'Math', 'Backtracking', 'Bit Manipulation', 'Combinatorics', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.29551458524513",
   "difficulty": "Medium",
   "frontendQuestionId": 1864,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Swaps to Make the Binary String Alternating",
   "titleSlug": "minimum-number-of-swaps-to-make-the-binary-string-alternating",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.7369623588666",
   "difficulty": "Medium",
   "frontendQuestionId": 1865,
   "isFavor": false,
   "paidOnly": false,
   "title": "Finding Pairs With a Certain Sum",
   "titleSlug": "finding-pairs-with-a-certain-sum",
   "topicTags": "['Array', 'Hash Table', 'Design']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.54430293304197",
   "difficulty": "Hard",
   "frontendQuestionId": 1866,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Rearrange Sticks With K Sticks Visible",
   "titleSlug": "number-of-ways-to-rearrange-sticks-with-k-sticks-visible",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.81143037824592",
   "difficulty": "Medium",
   "frontendQuestionId": 1867,
   "isFavor": false,
   "paidOnly": true,
   "title": "Orders With Maximum Quantity Above Average",
   "titleSlug": "orders-with-maximum-quantity-above-average",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.20339211478451",
   "difficulty": "Medium",
   "frontendQuestionId": 1868,
   "isFavor": false,
   "paidOnly": true,
   "title": "Product of Two Run-Length Encoded Arrays",
   "titleSlug": "product-of-two-run-length-encoded-arrays",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.5074566706973",
   "difficulty": "Easy",
   "frontendQuestionId": 1869,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longer Contiguous Segments of Ones than Zeros",
   "titleSlug": "longer-contiguous-segments-of-ones-than-zeros",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.12641246821814",
   "difficulty": "Medium",
   "frontendQuestionId": 1870,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Speed to Arrive on Time",
   "titleSlug": "minimum-speed-to-arrive-on-time",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.388746227381514",
   "difficulty": "Medium",
   "frontendQuestionId": 1871,
   "isFavor": false,
   "paidOnly": false,
   "title": "Jump Game VII",
   "titleSlug": "jump-game-vii",
   "topicTags": "['String', 'Dynamic Programming', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.79494248502709",
   "difficulty": "Hard",
   "frontendQuestionId": 1872,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stone Game VIII",
   "titleSlug": "stone-game-viii",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Prefix Sum', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.35866921596795",
   "difficulty": "Easy",
   "frontendQuestionId": 1873,
   "isFavor": false,
   "paidOnly": false,
   "title": "Calculate Special Bonus",
   "titleSlug": "calculate-special-bonus",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.05974287874969",
   "difficulty": "Medium",
   "frontendQuestionId": 1874,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimize Product Sum of Two Arrays",
   "titleSlug": "minimize-product-sum-of-two-arrays",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.63903247829903",
   "difficulty": "Medium",
   "frontendQuestionId": 1875,
   "isFavor": false,
   "paidOnly": true,
   "title": "Group Employees of the Same Salary",
   "titleSlug": "group-employees-of-the-same-salary",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.11303396961989",
   "difficulty": "Easy",
   "frontendQuestionId": 1876,
   "isFavor": false,
   "paidOnly": false,
   "title": "Substrings of Size Three with Distinct Characters",
   "titleSlug": "substrings-of-size-three-with-distinct-characters",
   "topicTags": "['Hash Table', 'String', 'Sliding Window', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.42529642941118",
   "difficulty": "Medium",
   "frontendQuestionId": 1877,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize Maximum Pair Sum in Array",
   "titleSlug": "minimize-maximum-pair-sum-in-array",
   "topicTags": "['Array', 'Two Pointers', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.94331476694294",
   "difficulty": "Medium",
   "frontendQuestionId": 1878,
   "isFavor": false,
   "paidOnly": false,
   "title": "Get Biggest Three Rhombus Sums in a Grid",
   "titleSlug": "get-biggest-three-rhombus-sums-in-a-grid",
   "topicTags": "['Array', 'Math', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.678676065326485",
   "difficulty": "Hard",
   "frontendQuestionId": 1879,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum XOR Sum of Two Arrays",
   "titleSlug": "minimum-xor-sum-of-two-arrays",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.60407521326684",
   "difficulty": "Easy",
   "frontendQuestionId": 1880,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Word Equals Summation of Two Words",
   "titleSlug": "check-if-word-equals-summation-of-two-words",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.3784189397066",
   "difficulty": "Medium",
   "frontendQuestionId": 1881,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Value after Insertion",
   "titleSlug": "maximum-value-after-insertion",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.82652891184802",
   "difficulty": "Medium",
   "frontendQuestionId": 1882,
   "isFavor": false,
   "paidOnly": false,
   "title": "Process Tasks Using Servers",
   "titleSlug": "process-tasks-using-servers",
   "topicTags": "['Array', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.11204234671372",
   "difficulty": "Hard",
   "frontendQuestionId": 1883,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Skips to Arrive at Meeting On Time",
   "titleSlug": "minimum-skips-to-arrive-at-meeting-on-time",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.5293728061461",
   "difficulty": "Medium",
   "frontendQuestionId": 1884,
   "isFavor": false,
   "paidOnly": false,
   "title": "Egg Drop With 2 Eggs and N Floors",
   "titleSlug": "egg-drop-with-2-eggs-and-n-floors",
   "topicTags": "['Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.084768211920526",
   "difficulty": "Medium",
   "frontendQuestionId": 1885,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Pairs in Two Arrays",
   "titleSlug": "count-pairs-in-two-arrays",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.82851621576206",
   "difficulty": "Easy",
   "frontendQuestionId": 1886,
   "isFavor": false,
   "paidOnly": false,
   "title": "Determine Whether Matrix Can Be Obtained By Rotation",
   "titleSlug": "determine-whether-matrix-can-be-obtained-by-rotation",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.3048422409185",
   "difficulty": "Medium",
   "frontendQuestionId": 1887,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reduction Operations to Make the Array Elements Equal",
   "titleSlug": "reduction-operations-to-make-the-array-elements-equal",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.348660000743415",
   "difficulty": "Medium",
   "frontendQuestionId": 1888,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Flips to Make the Binary String Alternating",
   "titleSlug": "minimum-number-of-flips-to-make-the-binary-string-alternating",
   "topicTags": "['String', 'Dynamic Programming', 'Greedy', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.378725891291644",
   "difficulty": "Hard",
   "frontendQuestionId": 1889,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Space Wasted From Packaging",
   "titleSlug": "minimum-space-wasted-from-packaging",
   "topicTags": "['Array', 'Binary Search', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.37845796641844",
   "difficulty": "Easy",
   "frontendQuestionId": 1890,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Latest Login in 2020",
   "titleSlug": "the-latest-login-in-2020",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.997261049623724",
   "difficulty": "Medium",
   "frontendQuestionId": 1891,
   "isFavor": false,
   "paidOnly": true,
   "title": "Cutting Ribbons",
   "titleSlug": "cutting-ribbons",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.41294111690547",
   "difficulty": "Hard",
   "frontendQuestionId": 1892,
   "isFavor": false,
   "paidOnly": true,
   "title": "Page Recommendations II",
   "titleSlug": "page-recommendations-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.257238519540145",
   "difficulty": "Easy",
   "frontendQuestionId": 1893,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if All the Integers in a Range Are Covered",
   "titleSlug": "check-if-all-the-integers-in-a-range-are-covered",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.168462370975824",
   "difficulty": "Medium",
   "frontendQuestionId": 1894,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Student that Will Replace the Chalk",
   "titleSlug": "find-the-student-that-will-replace-the-chalk",
   "topicTags": "['Array', 'Binary Search', 'Simulation', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.298441332383895",
   "difficulty": "Medium",
   "frontendQuestionId": 1895,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Magic Square",
   "titleSlug": "largest-magic-square",
   "topicTags": "['Array', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.60004363953742",
   "difficulty": "Hard",
   "frontendQuestionId": 1896,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Change the Final Value of Expression",
   "titleSlug": "minimum-cost-to-change-the-final-value-of-expression",
   "topicTags": "['Math', 'String', 'Dynamic Programming', 'Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.77884293088422",
   "difficulty": "Easy",
   "frontendQuestionId": 1897,
   "isFavor": false,
   "paidOnly": false,
   "title": "Redistribute Characters to Make All Strings Equal",
   "titleSlug": "redistribute-characters-to-make-all-strings-equal",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.384463088078796",
   "difficulty": "Medium",
   "frontendQuestionId": 1898,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Removable Characters",
   "titleSlug": "maximum-number-of-removable-characters",
   "topicTags": "['Array', 'Two Pointers', 'String', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.26157760015076",
   "difficulty": "Medium",
   "frontendQuestionId": 1899,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge Triplets to Form Target Triplet",
   "titleSlug": "merge-triplets-to-form-target-triplet",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.8408195429472",
   "difficulty": "Hard",
   "frontendQuestionId": 1900,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Earliest and Latest Rounds Where Players Compete",
   "titleSlug": "the-earliest-and-latest-rounds-where-players-compete",
   "topicTags": "['Dynamic Programming', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.867471703827086",
   "difficulty": "Medium",
   "frontendQuestionId": 1901,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find a Peak Element II",
   "titleSlug": "find-a-peak-element-ii",
   "topicTags": "['Array', 'Binary Search', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.38019169329073",
   "difficulty": "Medium",
   "frontendQuestionId": 1902,
   "isFavor": false,
   "paidOnly": true,
   "title": "Depth of BST Given Insertion Order",
   "titleSlug": "depth-of-bst-given-insertion-order",
   "topicTags": "['Array', 'Tree', 'Binary Search Tree', 'Binary Tree', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.69139608165501",
   "difficulty": "Easy",
   "frontendQuestionId": 1903,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Odd Number in String",
   "titleSlug": "largest-odd-number-in-string",
   "topicTags": "['Math', 'String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.38113673955323",
   "difficulty": "Medium",
   "frontendQuestionId": 1904,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Number of Full Rounds You Have Played",
   "titleSlug": "the-number-of-full-rounds-you-have-played",
   "topicTags": "['Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.81795689544212",
   "difficulty": "Medium",
   "frontendQuestionId": 1905,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Sub Islands",
   "titleSlug": "count-sub-islands",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.6301320311087",
   "difficulty": "Medium",
   "frontendQuestionId": 1906,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Absolute Difference Queries",
   "titleSlug": "minimum-absolute-difference-queries",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.83886444395982",
   "difficulty": "Medium",
   "frontendQuestionId": 1907,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Salary Categories",
   "titleSlug": "count-salary-categories",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.898212898212904",
   "difficulty": "Medium",
   "frontendQuestionId": 1908,
   "isFavor": false,
   "paidOnly": true,
   "title": "Game of Nim",
   "titleSlug": "game-of-nim",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Brainteaser', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.52781660609449",
   "difficulty": "Easy",
   "frontendQuestionId": 1909,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove One Element to Make the Array Strictly Increasing",
   "titleSlug": "remove-one-element-to-make-the-array-strictly-increasing",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.00566224764133",
   "difficulty": "Medium",
   "frontendQuestionId": 1910,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove All Occurrences of a Substring",
   "titleSlug": "remove-all-occurrences-of-a-substring",
   "topicTags": "['String', 'Stack', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.70135522323102",
   "difficulty": "Medium",
   "frontendQuestionId": 1911,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Alternating Subsequence Sum",
   "titleSlug": "maximum-alternating-subsequence-sum",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.11605664888725",
   "difficulty": "Hard",
   "frontendQuestionId": 1912,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Movie Rental System",
   "titleSlug": "design-movie-rental-system",
   "topicTags": "['Array', 'Hash Table', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.85625682171273",
   "difficulty": "Easy",
   "frontendQuestionId": 1913,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Product Difference Between Two Pairs",
   "titleSlug": "maximum-product-difference-between-two-pairs",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.05920132036884",
   "difficulty": "Medium",
   "frontendQuestionId": 1914,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cyclically Rotating a Grid",
   "titleSlug": "cyclically-rotating-a-grid",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.66383465150766",
   "difficulty": "Medium",
   "frontendQuestionId": 1915,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Wonderful Substrings",
   "titleSlug": "number-of-wonderful-substrings",
   "topicTags": "['Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.23236424665692",
   "difficulty": "Hard",
   "frontendQuestionId": 1916,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Ways to Build Rooms in an Ant Colony",
   "titleSlug": "count-ways-to-build-rooms-in-an-ant-colony",
   "topicTags": "['Math', 'Dynamic Programming', 'Tree', 'Graph', 'Topological Sort', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.722736606982025",
   "difficulty": "Hard",
   "frontendQuestionId": 1917,
   "isFavor": false,
   "paidOnly": true,
   "title": "Leetcodify Friends Recommendations",
   "titleSlug": "leetcodify-friends-recommendations",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.75894440388026",
   "difficulty": "Medium",
   "frontendQuestionId": 1918,
   "isFavor": false,
   "paidOnly": true,
   "title": "Kth Smallest Subarray Sum",
   "titleSlug": "kth-smallest-subarray-sum",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.50937519862709",
   "difficulty": "Hard",
   "frontendQuestionId": 1919,
   "isFavor": false,
   "paidOnly": true,
   "title": "Leetcodify Similar Friends",
   "titleSlug": "leetcodify-similar-friends",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "90.23716755666105",
   "difficulty": "Easy",
   "frontendQuestionId": 1920,
   "isFavor": false,
   "paidOnly": false,
   "title": "Build Array from Permutation",
   "titleSlug": "build-array-from-permutation",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.80933389154529",
   "difficulty": "Medium",
   "frontendQuestionId": 1921,
   "isFavor": false,
   "paidOnly": false,
   "title": "Eliminate Maximum Number of Monsters",
   "titleSlug": "eliminate-maximum-number-of-monsters",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.70595640334122",
   "difficulty": "Medium",
   "frontendQuestionId": 1922,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Good Numbers",
   "titleSlug": "count-good-numbers",
   "topicTags": "['Math', 'Recursion']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.87165982745808",
   "difficulty": "Hard",
   "frontendQuestionId": 1923,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Common Subpath",
   "titleSlug": "longest-common-subpath",
   "topicTags": "['Array', 'Binary Search', 'Rolling Hash', 'Suffix Array', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.6372430471584",
   "difficulty": "Hard",
   "frontendQuestionId": 1924,
   "isFavor": false,
   "paidOnly": true,
   "title": "Erect the Fence II",
   "titleSlug": "erect-the-fence-ii",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.63352848888378",
   "difficulty": "Easy",
   "frontendQuestionId": 1925,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Square Sum Triples",
   "titleSlug": "count-square-sum-triples",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.307208348732026",
   "difficulty": "Medium",
   "frontendQuestionId": 1926,
   "isFavor": false,
   "paidOnly": false,
   "title": "Nearest Exit from Entrance in Maze",
   "titleSlug": "nearest-exit-from-entrance-in-maze",
   "topicTags": "['Array', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.147373557809615",
   "difficulty": "Medium",
   "frontendQuestionId": 1927,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum Game",
   "titleSlug": "sum-game",
   "topicTags": "['Math', 'String', 'Greedy', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.29580916591782",
   "difficulty": "Hard",
   "frontendQuestionId": 1928,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Reach Destination in Time",
   "titleSlug": "minimum-cost-to-reach-destination-in-time",
   "topicTags": "['Array', 'Dynamic Programming', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "90.41430111785934",
   "difficulty": "Easy",
   "frontendQuestionId": 1929,
   "isFavor": false,
   "paidOnly": false,
   "title": "Concatenation of Array",
   "titleSlug": "concatenation-of-array",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.87241697442843",
   "difficulty": "Medium",
   "frontendQuestionId": 1930,
   "isFavor": false,
   "paidOnly": false,
   "title": "Unique Length-3 Palindromic Subsequences",
   "titleSlug": "unique-length-3-palindromic-subsequences",
   "topicTags": "['Hash Table', 'String', 'Bit Manipulation', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.784869976359346",
   "difficulty": "Hard",
   "frontendQuestionId": 1931,
   "isFavor": false,
   "paidOnly": false,
   "title": "Painting a Grid With Three Different Colors",
   "titleSlug": "painting-a-grid-with-three-different-colors",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.22193454159198",
   "difficulty": "Hard",
   "frontendQuestionId": 1932,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge BSTs to Create Single BST",
   "titleSlug": "merge-bsts-to-create-single-bst",
   "topicTags": "['Hash Table', 'Binary Search', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.658978583196046",
   "difficulty": "Easy",
   "frontendQuestionId": 1933,
   "isFavor": false,
   "paidOnly": true,
   "title": "Check if String Is Decomposable Into Value-Equal Substrings",
   "titleSlug": "check-if-string-is-decomposable-into-value-equal-substrings",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.74903843368736",
   "difficulty": "Medium",
   "frontendQuestionId": 1934,
   "isFavor": false,
   "paidOnly": false,
   "title": "Confirmation Rate",
   "titleSlug": "confirmation-rate",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.43072702331962",
   "difficulty": "Easy",
   "frontendQuestionId": 1935,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Words You Can Type",
   "titleSlug": "maximum-number-of-words-you-can-type",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.204682147962345",
   "difficulty": "Medium",
   "frontendQuestionId": 1936,
   "isFavor": false,
   "paidOnly": false,
   "title": "Add Minimum Number of Rungs",
   "titleSlug": "add-minimum-number-of-rungs",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.36314101654511",
   "difficulty": "Medium",
   "frontendQuestionId": 1937,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Points with Cost",
   "titleSlug": "maximum-number-of-points-with-cost",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.80838003736323",
   "difficulty": "Hard",
   "frontendQuestionId": 1938,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Genetic Difference Query",
   "titleSlug": "maximum-genetic-difference-query",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation', 'Depth-First Search', 'Trie']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.58045723364816",
   "difficulty": "Easy",
   "frontendQuestionId": 1939,
   "isFavor": false,
   "paidOnly": true,
   "title": "Users That Actively Request Confirmation Messages",
   "titleSlug": "users-that-actively-request-confirmation-messages",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.29189864788093",
   "difficulty": "Medium",
   "frontendQuestionId": 1940,
   "isFavor": false,
   "paidOnly": true,
   "title": "Longest Common Subsequence Between Sorted Arrays",
   "titleSlug": "longest-common-subsequence-between-sorted-arrays",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.42523422578348",
   "difficulty": "Easy",
   "frontendQuestionId": 1941,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if All Characters Have Equal Number of Occurrences",
   "titleSlug": "check-if-all-characters-have-equal-number-of-occurrences",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.50464662859631",
   "difficulty": "Medium",
   "frontendQuestionId": 1942,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Number of the Smallest Unoccupied Chair",
   "titleSlug": "the-number-of-the-smallest-unoccupied-chair",
   "topicTags": "['Array', 'Hash Table', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.77070674768148",
   "difficulty": "Medium",
   "frontendQuestionId": 1943,
   "isFavor": false,
   "paidOnly": false,
   "title": "Describe the Painting",
   "titleSlug": "describe-the-painting",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.71549274850977",
   "difficulty": "Hard",
   "frontendQuestionId": 1944,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Visible People in a Queue",
   "titleSlug": "number-of-visible-people-in-a-queue",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.70366270200213",
   "difficulty": "Easy",
   "frontendQuestionId": 1945,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Digits of String After Convert",
   "titleSlug": "sum-of-digits-of-string-after-convert",
   "topicTags": "['String', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.56477529500376",
   "difficulty": "Medium",
   "frontendQuestionId": 1946,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Number After Mutating Substring",
   "titleSlug": "largest-number-after-mutating-substring",
   "topicTags": "['Array', 'String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.96510507036823",
   "difficulty": "Medium",
   "frontendQuestionId": 1947,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Compatibility Score Sum",
   "titleSlug": "maximum-compatibility-score-sum",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.53984701350838",
   "difficulty": "Hard",
   "frontendQuestionId": 1948,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Duplicate Folders in System",
   "titleSlug": "delete-duplicate-folders-in-system",
   "topicTags": "['Array', 'Hash Table', 'String', 'Trie', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.460111885968274",
   "difficulty": "Medium",
   "frontendQuestionId": 1949,
   "isFavor": false,
   "paidOnly": true,
   "title": "Strong Friendship",
   "titleSlug": "strong-friendship",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.911264765197345",
   "difficulty": "Medium",
   "frontendQuestionId": 1950,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum of Minimum Values in All Subarrays",
   "titleSlug": "maximum-of-minimum-values-in-all-subarrays",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.14486279514996",
   "difficulty": "Medium",
   "frontendQuestionId": 1951,
   "isFavor": false,
   "paidOnly": true,
   "title": "All the Pairs With the Maximum Number of Common Followers",
   "titleSlug": "all-the-pairs-with-the-maximum-number-of-common-followers",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.315116650687116",
   "difficulty": "Easy",
   "frontendQuestionId": 1952,
   "isFavor": false,
   "paidOnly": false,
   "title": "Three Divisors",
   "titleSlug": "three-divisors",
   "topicTags": "['Math', 'Enumeration', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.10480409802022",
   "difficulty": "Medium",
   "frontendQuestionId": 1953,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Weeks for Which You Can Work",
   "titleSlug": "maximum-number-of-weeks-for-which-you-can-work",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.194178101854504",
   "difficulty": "Medium",
   "frontendQuestionId": 1954,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Garden Perimeter to Collect Enough Apples",
   "titleSlug": "minimum-garden-perimeter-to-collect-enough-apples",
   "topicTags": "['Math', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.55497822266371",
   "difficulty": "Hard",
   "frontendQuestionId": 1955,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Special Subsequences",
   "titleSlug": "count-number-of-special-subsequences",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.97348160821215",
   "difficulty": "Hard",
   "frontendQuestionId": 1956,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Time For K Virus Variants to Spread",
   "titleSlug": "minimum-time-for-k-virus-variants-to-spread",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Geometry', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.60723729785697",
   "difficulty": "Easy",
   "frontendQuestionId": 1957,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Characters to Make Fancy String",
   "titleSlug": "delete-characters-to-make-fancy-string",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.07862970998991",
   "difficulty": "Medium",
   "frontendQuestionId": 1958,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Move is Legal",
   "titleSlug": "check-if-move-is-legal",
   "topicTags": "['Array', 'Matrix', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.627452717367234",
   "difficulty": "Medium",
   "frontendQuestionId": 1959,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Total Space Wasted With K Resizing Operations",
   "titleSlug": "minimum-total-space-wasted-with-k-resizing-operations",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.34131360368535",
   "difficulty": "Hard",
   "frontendQuestionId": 1960,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Product of the Length of Two Palindromic Substrings",
   "titleSlug": "maximum-product-of-the-length-of-two-palindromic-substrings",
   "topicTags": "['String', 'Rolling Hash', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.41655422592847",
   "difficulty": "Easy",
   "frontendQuestionId": 1961,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If String Is a Prefix of Array",
   "titleSlug": "check-if-string-is-a-prefix-of-array",
   "topicTags": "['Array', 'Two Pointers', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.32475588036603",
   "difficulty": "Medium",
   "frontendQuestionId": 1962,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Stones to Minimize the Total",
   "titleSlug": "remove-stones-to-minimize-the-total",
   "topicTags": "['Array', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.90489437538034",
   "difficulty": "Medium",
   "frontendQuestionId": 1963,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Swaps to Make the String Balanced",
   "titleSlug": "minimum-number-of-swaps-to-make-the-string-balanced",
   "topicTags": "['Two Pointers', 'String', 'Stack', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.46685399928761",
   "difficulty": "Hard",
   "frontendQuestionId": 1964,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Longest Valid Obstacle Course at Each Position",
   "titleSlug": "find-the-longest-valid-obstacle-course-at-each-position",
   "topicTags": "['Array', 'Binary Search', 'Binary Indexed Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.79016799862941",
   "difficulty": "Easy",
   "frontendQuestionId": 1965,
   "isFavor": false,
   "paidOnly": false,
   "title": "Employees With Missing Information",
   "titleSlug": "employees-with-missing-information",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.44639575250153",
   "difficulty": "Medium",
   "frontendQuestionId": 1966,
   "isFavor": false,
   "paidOnly": true,
   "title": "Binary Searchable Numbers in an Unsorted Array",
   "titleSlug": "binary-searchable-numbers-in-an-unsorted-array",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.69474455227981",
   "difficulty": "Easy",
   "frontendQuestionId": 1967,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Strings That Appear as Substrings in Word",
   "titleSlug": "number-of-strings-that-appear-as-substrings-in-word",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.96741330223305",
   "difficulty": "Medium",
   "frontendQuestionId": 1968,
   "isFavor": false,
   "paidOnly": false,
   "title": "Array With Elements Not Equal to Average of Neighbors",
   "titleSlug": "array-with-elements-not-equal-to-average-of-neighbors",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.19068092653303",
   "difficulty": "Medium",
   "frontendQuestionId": 1969,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Non-Zero Product of the Array Elements",
   "titleSlug": "minimum-non-zero-product-of-the-array-elements",
   "topicTags": "['Math', 'Greedy', 'Recursion']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.13077377196018",
   "difficulty": "Hard",
   "frontendQuestionId": 1970,
   "isFavor": false,
   "paidOnly": false,
   "title": "Last Day Where You Can Still Cross",
   "titleSlug": "last-day-where-you-can-still-cross",
   "topicTags": "['Array', 'Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.89967198044418",
   "difficulty": "Easy",
   "frontendQuestionId": 1971,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find if Path Exists in Graph",
   "titleSlug": "find-if-path-exists-in-graph",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.95746167823697",
   "difficulty": "Hard",
   "frontendQuestionId": 1972,
   "isFavor": false,
   "paidOnly": true,
   "title": "First and Last Call On the Same Day",
   "titleSlug": "first-and-last-call-on-the-same-day",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.9730010384216",
   "difficulty": "Medium",
   "frontendQuestionId": 1973,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Nodes Equal to Sum of Descendants",
   "titleSlug": "count-nodes-equal-to-sum-of-descendants",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.03590041333167",
   "difficulty": "Easy",
   "frontendQuestionId": 1974,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Type Word Using Special Typewriter",
   "titleSlug": "minimum-time-to-type-word-using-special-typewriter",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.94546586027515",
   "difficulty": "Medium",
   "frontendQuestionId": 1975,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Matrix Sum",
   "titleSlug": "maximum-matrix-sum",
   "topicTags": "['Array', 'Greedy', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.83673224840763",
   "difficulty": "Medium",
   "frontendQuestionId": 1976,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Arrive at Destination",
   "titleSlug": "number-of-ways-to-arrive-at-destination",
   "topicTags": "['Dynamic Programming', 'Graph', 'Topological Sort', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.91752518640788",
   "difficulty": "Hard",
   "frontendQuestionId": 1977,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Separate Numbers",
   "titleSlug": "number-of-ways-to-separate-numbers",
   "topicTags": "['String', 'Dynamic Programming', 'Suffix Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.829022345535364",
   "difficulty": "Easy",
   "frontendQuestionId": 1978,
   "isFavor": false,
   "paidOnly": false,
   "title": "Employees Whose Manager Left the Company",
   "titleSlug": "employees-whose-manager-left-the-company",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.42926068948609",
   "difficulty": "Easy",
   "frontendQuestionId": 1979,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Greatest Common Divisor of Array",
   "titleSlug": "find-greatest-common-divisor-of-array",
   "topicTags": "['Array', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.34988283699491",
   "difficulty": "Medium",
   "frontendQuestionId": 1980,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Unique Binary String",
   "titleSlug": "find-unique-binary-string",
   "topicTags": "['Array', 'Hash Table', 'String', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.708086446870745",
   "difficulty": "Medium",
   "frontendQuestionId": 1981,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize the Difference Between Target and Chosen Elements",
   "titleSlug": "minimize-the-difference-between-target-and-chosen-elements",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.51791771125203",
   "difficulty": "Hard",
   "frontendQuestionId": 1982,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Array Given Subset Sums",
   "titleSlug": "find-array-given-subset-sums",
   "topicTags": "['Array', 'Divide and Conquer']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.973061760841",
   "difficulty": "Medium",
   "frontendQuestionId": 1983,
   "isFavor": false,
   "paidOnly": true,
   "title": "Widest Pair of Indices With Equal Range Sum",
   "titleSlug": "widest-pair-of-indices-with-equal-range-sum",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.19545071609099",
   "difficulty": "Easy",
   "frontendQuestionId": 1984,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Difference Between Highest and Lowest of K Scores",
   "titleSlug": "minimum-difference-between-highest-and-lowest-of-k-scores",
   "topicTags": "['Array', 'Sliding Window', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.60746786646921",
   "difficulty": "Medium",
   "frontendQuestionId": 1985,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Kth Largest Integer in the Array",
   "titleSlug": "find-the-kth-largest-integer-in-the-array",
   "topicTags": "['Array', 'String', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Quickselect']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.531647847406546",
   "difficulty": "Medium",
   "frontendQuestionId": 1986,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Work Sessions to Finish the Tasks",
   "titleSlug": "minimum-number-of-work-sessions-to-finish-the-tasks",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.0147690559875",
   "difficulty": "Hard",
   "frontendQuestionId": 1987,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Unique Good Subsequences",
   "titleSlug": "number-of-unique-good-subsequences",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.9126234207453",
   "difficulty": "Medium",
   "frontendQuestionId": 1988,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Cutoff Score for Each School",
   "titleSlug": "find-cutoff-score-for-each-school",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.989764585465714",
   "difficulty": "Medium",
   "frontendQuestionId": 1989,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Number of People That Can Be Caught in Tag",
   "titleSlug": "maximum-number-of-people-that-can-be-caught-in-tag",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.01754999708472",
   "difficulty": "Medium",
   "frontendQuestionId": 1990,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count the Number of Experiments",
   "titleSlug": "count-the-number-of-experiments",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.86643256600338",
   "difficulty": "Easy",
   "frontendQuestionId": 1991,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Middle Index in Array",
   "titleSlug": "find-the-middle-index-in-array",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.49192797873467",
   "difficulty": "Medium",
   "frontendQuestionId": 1992,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All Groups of Farmland",
   "titleSlug": "find-all-groups-of-farmland",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.09192358615472",
   "difficulty": "Medium",
   "frontendQuestionId": 1993,
   "isFavor": false,
   "paidOnly": false,
   "title": "Operations on Tree",
   "titleSlug": "operations-on-tree",
   "topicTags": "['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Design']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.66888562939561",
   "difficulty": "Hard",
   "frontendQuestionId": 1994,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Number of Good Subsets",
   "titleSlug": "the-number-of-good-subsets",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.46542035206113",
   "difficulty": "Easy",
   "frontendQuestionId": 1995,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Special Quadruplets",
   "titleSlug": "count-special-quadruplets",
   "topicTags": "['Array', 'Hash Table', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.13584815088905",
   "difficulty": "Medium",
   "frontendQuestionId": 1996,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Number of Weak Characters in the Game",
   "titleSlug": "the-number-of-weak-characters-in-the-game",
   "topicTags": "['Array', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.43289718406369",
   "difficulty": "Medium",
   "frontendQuestionId": 1997,
   "isFavor": false,
   "paidOnly": false,
   "title": "First Day Where You Have Been in All the Rooms",
   "titleSlug": "first-day-where-you-have-been-in-all-the-rooms",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.222391148274845",
   "difficulty": "Hard",
   "frontendQuestionId": 1998,
   "isFavor": false,
   "paidOnly": false,
   "title": "GCD Sort of an Array",
   "titleSlug": "gcd-sort-of-an-array",
   "topicTags": "['Array', 'Math', 'Union Find', 'Sorting', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.105745212323065",
   "difficulty": "Medium",
   "frontendQuestionId": 1999,
   "isFavor": false,
   "paidOnly": true,
   "title": "Smallest Greater Multiple Made of Two Digits",
   "titleSlug": "smallest-greater-multiple-made-of-two-digits",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.38520722589332",
   "difficulty": "Easy",
   "frontendQuestionId": 2000,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Prefix of Word",
   "titleSlug": "reverse-prefix-of-word",
   "topicTags": "['Two Pointers', 'String', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.34219304283369",
   "difficulty": "Medium",
   "frontendQuestionId": 2001,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Pairs of Interchangeable Rectangles",
   "titleSlug": "number-of-pairs-of-interchangeable-rectangles",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Counting', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.07381380019879",
   "difficulty": "Medium",
   "frontendQuestionId": 2002,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Product of the Length of Two Palindromic Subsequences",
   "titleSlug": "maximum-product-of-the-length-of-two-palindromic-subsequences",
   "topicTags": "['String', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.34241434767776",
   "difficulty": "Hard",
   "frontendQuestionId": 2003,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Missing Genetic Value in Each Subtree",
   "titleSlug": "smallest-missing-genetic-value-in-each-subtree",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search', 'Union Find']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.85463774803876",
   "difficulty": "Hard",
   "frontendQuestionId": 2004,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Number of Seniors and Juniors to Join the Company",
   "titleSlug": "the-number-of-seniors-and-juniors-to-join-the-company",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.056603773584904",
   "difficulty": "Hard",
   "frontendQuestionId": 2005,
   "isFavor": false,
   "paidOnly": true,
   "title": "Subtree Removal Game with Fibonacci Tree",
   "titleSlug": "subtree-removal-game-with-fibonacci-tree",
   "topicTags": "['Math', 'Dynamic Programming', 'Tree', 'Binary Tree', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.59781612807564",
   "difficulty": "Easy",
   "frontendQuestionId": 2006,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Pairs With Absolute Difference K",
   "titleSlug": "count-number-of-pairs-with-absolute-difference-k",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.44640943798428",
   "difficulty": "Medium",
   "frontendQuestionId": 2007,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Original Array From Doubled Array",
   "titleSlug": "find-original-array-from-doubled-array",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.61702561152458",
   "difficulty": "Medium",
   "frontendQuestionId": 2008,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Earnings From Taxi",
   "titleSlug": "maximum-earnings-from-taxi",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.22761701301224",
   "difficulty": "Hard",
   "frontendQuestionId": 2009,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Make Array Continuous",
   "titleSlug": "minimum-number-of-operations-to-make-array-continuous",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.22660098522167",
   "difficulty": "Hard",
   "frontendQuestionId": 2010,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Number of Seniors and Juniors to Join the Company II",
   "titleSlug": "the-number-of-seniors-and-juniors-to-join-the-company-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.51052034290797",
   "difficulty": "Easy",
   "frontendQuestionId": 2011,
   "isFavor": false,
   "paidOnly": false,
   "title": "Final Value of Variable After Performing Operations",
   "titleSlug": "final-value-of-variable-after-performing-operations",
   "topicTags": "['Array', 'String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.83802903220158",
   "difficulty": "Medium",
   "frontendQuestionId": 2012,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Beauty in the Array",
   "titleSlug": "sum-of-beauty-in-the-array",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.972535299411724",
   "difficulty": "Medium",
   "frontendQuestionId": 2013,
   "isFavor": false,
   "paidOnly": false,
   "title": "Detect Squares",
   "titleSlug": "detect-squares",
   "topicTags": "['Array', 'Hash Table', 'Design', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.99125961166122",
   "difficulty": "Hard",
   "frontendQuestionId": 2014,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Subsequence Repeated k Times",
   "titleSlug": "longest-subsequence-repeated-k-times",
   "topicTags": "['String', 'Backtracking', 'Greedy', 'Counting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.26415094339623",
   "difficulty": "Medium",
   "frontendQuestionId": 2015,
   "isFavor": false,
   "paidOnly": true,
   "title": "Average Height of Buildings in Each Segment",
   "titleSlug": "average-height-of-buildings-in-each-segment",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.88786504853353",
   "difficulty": "Easy",
   "frontendQuestionId": 2016,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Difference Between Increasing Elements",
   "titleSlug": "maximum-difference-between-increasing-elements",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.01648339065956",
   "difficulty": "Medium",
   "frontendQuestionId": 2017,
   "isFavor": false,
   "paidOnly": false,
   "title": "Grid Game",
   "titleSlug": "grid-game",
   "topicTags": "['Array', 'Matrix', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.89306268470991",
   "difficulty": "Medium",
   "frontendQuestionId": 2018,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Word Can Be Placed In Crossword",
   "titleSlug": "check-if-word-can-be-placed-in-crossword",
   "topicTags": "['Array', 'Matrix', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.99975690786808",
   "difficulty": "Hard",
   "frontendQuestionId": 2019,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Score of Students Solving Math Expression",
   "titleSlug": "the-score-of-students-solving-math-expression",
   "topicTags": "['Array', 'Math', 'String', 'Dynamic Programming', 'Stack', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.27646606308066",
   "difficulty": "Medium",
   "frontendQuestionId": 2020,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Accounts That Did Not Stream",
   "titleSlug": "number-of-accounts-that-did-not-stream",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.90341478455253",
   "difficulty": "Medium",
   "frontendQuestionId": 2021,
   "isFavor": false,
   "paidOnly": true,
   "title": "Brightest Position on Street",
   "titleSlug": "brightest-position-on-street",
   "topicTags": "['Array', 'Sorting', 'Prefix Sum', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.71614383878624",
   "difficulty": "Easy",
   "frontendQuestionId": 2022,
   "isFavor": false,
   "paidOnly": false,
   "title": "Convert 1D Array Into 2D Array",
   "titleSlug": "convert-1d-array-into-2d-array",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.7445652173913",
   "difficulty": "Medium",
   "frontendQuestionId": 2023,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Pairs of Strings With Concatenation Equal to Target",
   "titleSlug": "number-of-pairs-of-strings-with-concatenation-equal-to-target",
   "topicTags": "['Array', 'Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.28476795299295",
   "difficulty": "Medium",
   "frontendQuestionId": 2024,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize the Confusion of an Exam",
   "titleSlug": "maximize-the-confusion-of-an-exam",
   "topicTags": "['String', 'Binary Search', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.51202263083451",
   "difficulty": "Hard",
   "frontendQuestionId": 2025,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Ways to Partition an Array",
   "titleSlug": "maximum-number-of-ways-to-partition-an-array",
   "topicTags": "['Array', 'Hash Table', 'Counting', 'Enumeration', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.57608563435105",
   "difficulty": "Easy",
   "frontendQuestionId": 2026,
   "isFavor": false,
   "paidOnly": true,
   "title": "Low-Quality Problems",
   "titleSlug": "low-quality-problems",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.23691295243793",
   "difficulty": "Easy",
   "frontendQuestionId": 2027,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Moves to Convert String",
   "titleSlug": "minimum-moves-to-convert-string",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.39533351042546",
   "difficulty": "Medium",
   "frontendQuestionId": 2028,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Missing Observations",
   "titleSlug": "find-missing-observations",
   "topicTags": "['Array', 'Math', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.643465081030662",
   "difficulty": "Medium",
   "frontendQuestionId": 2029,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stone Game IX",
   "titleSlug": "stone-game-ix",
   "topicTags": "['Array', 'Math', 'Greedy', 'Counting', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.73076772501272",
   "difficulty": "Hard",
   "frontendQuestionId": 2030,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest K-Length Subsequence With Occurrences of a Letter",
   "titleSlug": "smallest-k-length-subsequence-with-occurrences-of-a-letter",
   "topicTags": "['String', 'Stack', 'Greedy', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.19294040745179",
   "difficulty": "Medium",
   "frontendQuestionId": 2031,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Subarrays With More Ones Than Zeros",
   "titleSlug": "count-subarrays-with-more-ones-than-zeros",
   "topicTags": "['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.23241299058499",
   "difficulty": "Easy",
   "frontendQuestionId": 2032,
   "isFavor": false,
   "paidOnly": false,
   "title": "Two Out of Three",
   "titleSlug": "two-out-of-three",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.43509700088836",
   "difficulty": "Medium",
   "frontendQuestionId": 2033,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make a Uni-Value Grid",
   "titleSlug": "minimum-operations-to-make-a-uni-value-grid",
   "topicTags": "['Array', 'Math', 'Sorting', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.82513195981611",
   "difficulty": "Medium",
   "frontendQuestionId": 2034,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stock Price Fluctuation ",
   "titleSlug": "stock-price-fluctuation",
   "topicTags": "['Hash Table', 'Design', 'Heap (Priority Queue)', 'Data Stream', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "21.391969364942337",
   "difficulty": "Hard",
   "frontendQuestionId": 2035,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition Array Into Two Arrays to Minimize Sum Difference",
   "titleSlug": "partition-array-into-two-arrays-to-minimize-sum-difference",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Dynamic Programming', 'Bit Manipulation', 'Ordered Set', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.6027911969941",
   "difficulty": "Medium",
   "frontendQuestionId": 2036,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Alternating Subarray Sum",
   "titleSlug": "maximum-alternating-subarray-sum",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.27371997911001",
   "difficulty": "Easy",
   "frontendQuestionId": 2037,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Moves to Seat Everyone",
   "titleSlug": "minimum-number-of-moves-to-seat-everyone",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Counting Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.762366489894184",
   "difficulty": "Medium",
   "frontendQuestionId": 2038,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Colored Pieces if Both Neighbors are the Same Color",
   "titleSlug": "remove-colored-pieces-if-both-neighbors-are-the-same-color",
   "topicTags": "['Math', 'String', 'Greedy', 'Game Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.23903002309469",
   "difficulty": "Medium",
   "frontendQuestionId": 2039,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Time When the Network Becomes Idle",
   "titleSlug": "the-time-when-the-network-becomes-idle",
   "topicTags": "['Array', 'Breadth-First Search', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.35052840849639",
   "difficulty": "Hard",
   "frontendQuestionId": 2040,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Smallest Product of Two Sorted Arrays",
   "titleSlug": "kth-smallest-product-of-two-sorted-arrays",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.67052364366255",
   "difficulty": "Medium",
   "frontendQuestionId": 2041,
   "isFavor": false,
   "paidOnly": true,
   "title": "Accepted Candidates From the Interviews",
   "titleSlug": "accepted-candidates-from-the-interviews",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.3742563334778",
   "difficulty": "Easy",
   "frontendQuestionId": 2042,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Numbers Are Ascending in a Sentence",
   "titleSlug": "check-if-numbers-are-ascending-in-a-sentence",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.3451762776715",
   "difficulty": "Medium",
   "frontendQuestionId": 2043,
   "isFavor": false,
   "paidOnly": false,
   "title": "Simple Bank System",
   "titleSlug": "simple-bank-system",
   "topicTags": "['Array', 'Hash Table', 'Design', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.94816334372463",
   "difficulty": "Medium",
   "frontendQuestionId": 2044,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Maximum Bitwise-OR Subsets",
   "titleSlug": "count-number-of-maximum-bitwise-or-subsets",
   "topicTags": "['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.64484304281179",
   "difficulty": "Hard",
   "frontendQuestionId": 2045,
   "isFavor": false,
   "paidOnly": false,
   "title": "Second Minimum Time to Reach Destination",
   "titleSlug": "second-minimum-time-to-reach-destination",
   "topicTags": "['Breadth-First Search', 'Graph', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.86485403166544",
   "difficulty": "Medium",
   "frontendQuestionId": 2046,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sort Linked List Already Sorted Using Absolute Values",
   "titleSlug": "sort-linked-list-already-sorted-using-absolute-values",
   "topicTags": "['Linked List', 'Two Pointers', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.73962068198116",
   "difficulty": "Easy",
   "frontendQuestionId": 2047,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Valid Words in a Sentence",
   "titleSlug": "number-of-valid-words-in-a-sentence",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.935568063897364",
   "difficulty": "Medium",
   "frontendQuestionId": 2048,
   "isFavor": false,
   "paidOnly": false,
   "title": "Next Greater Numerically Balanced Number",
   "titleSlug": "next-greater-numerically-balanced-number",
   "topicTags": "['Hash Table', 'Math', 'Backtracking', 'Counting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.83975647062352",
   "difficulty": "Medium",
   "frontendQuestionId": 2049,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Nodes With the Highest Score",
   "titleSlug": "count-nodes-with-the-highest-score",
   "topicTags": "['Array', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.78001342834247",
   "difficulty": "Hard",
   "frontendQuestionId": 2050,
   "isFavor": false,
   "paidOnly": false,
   "title": "Parallel Courses III",
   "titleSlug": "parallel-courses-iii",
   "topicTags": "['Array', 'Dynamic Programming', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.58204241239284",
   "difficulty": "Medium",
   "frontendQuestionId": 2051,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Category of Each Member in the Store",
   "titleSlug": "the-category-of-each-member-in-the-store",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.26261703585293",
   "difficulty": "Medium",
   "frontendQuestionId": 2052,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Cost to Separate Sentence Into Rows",
   "titleSlug": "minimum-cost-to-separate-sentence-into-rows",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.98001948034855",
   "difficulty": "Easy",
   "frontendQuestionId": 2053,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Distinct String in an Array",
   "titleSlug": "kth-distinct-string-in-an-array",
   "topicTags": "['Array', 'Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.07380585786796",
   "difficulty": "Medium",
   "frontendQuestionId": 2054,
   "isFavor": false,
   "paidOnly": false,
   "title": "Two Best Non-Overlapping Events",
   "titleSlug": "two-best-non-overlapping-events",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.40864642305713",
   "difficulty": "Medium",
   "frontendQuestionId": 2055,
   "isFavor": false,
   "paidOnly": false,
   "title": "Plates Between Candles",
   "titleSlug": "plates-between-candles",
   "topicTags": "['Array', 'String', 'Binary Search', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.485006771135616",
   "difficulty": "Hard",
   "frontendQuestionId": 2056,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Valid Move Combinations On Chessboard",
   "titleSlug": "number-of-valid-move-combinations-on-chessboard",
   "topicTags": "['Array', 'String', 'Backtracking', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.39783148597327",
   "difficulty": "Easy",
   "frontendQuestionId": 2057,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Index With Equal Value",
   "titleSlug": "smallest-index-with-equal-value",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.44753333209364",
   "difficulty": "Medium",
   "frontendQuestionId": 2058,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Minimum and Maximum Number of Nodes Between Critical Points",
   "titleSlug": "find-the-minimum-and-maximum-number-of-nodes-between-critical-points",
   "topicTags": "['Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.28800930085081",
   "difficulty": "Medium",
   "frontendQuestionId": 2059,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Convert Number",
   "titleSlug": "minimum-operations-to-convert-number",
   "topicTags": "['Array', 'Breadth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.02224314463928",
   "difficulty": "Hard",
   "frontendQuestionId": 2060,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if an Original String Exists Given Two Encoded Strings",
   "titleSlug": "check-if-an-original-string-exists-given-two-encoded-strings",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.87906976744186",
   "difficulty": "Medium",
   "frontendQuestionId": 2061,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Spaces Cleaning Robot Cleaned",
   "titleSlug": "number-of-spaces-cleaning-robot-cleaned",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.6692622344882",
   "difficulty": "Easy",
   "frontendQuestionId": 2062,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Vowel Substrings of a String",
   "titleSlug": "count-vowel-substrings-of-a-string",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.53969690115359",
   "difficulty": "Medium",
   "frontendQuestionId": 2063,
   "isFavor": false,
   "paidOnly": false,
   "title": "Vowels of All Substrings",
   "titleSlug": "vowels-of-all-substrings",
   "topicTags": "['Math', 'String', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.541394422497895",
   "difficulty": "Medium",
   "frontendQuestionId": 2064,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimized Maximum of Products Distributed to Any Store",
   "titleSlug": "minimized-maximum-of-products-distributed-to-any-store",
   "topicTags": "['Array', 'Binary Search', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.39557773618909",
   "difficulty": "Hard",
   "frontendQuestionId": 2065,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Path Quality of a Graph",
   "titleSlug": "maximum-path-quality-of-a-graph",
   "topicTags": "['Array', 'Backtracking', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.24278475435118",
   "difficulty": "Medium",
   "frontendQuestionId": 2066,
   "isFavor": false,
   "paidOnly": true,
   "title": "Account Balance",
   "titleSlug": "account-balance",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.62610560171536",
   "difficulty": "Medium",
   "frontendQuestionId": 2067,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Equal Count Substrings",
   "titleSlug": "number-of-equal-count-substrings",
   "topicTags": "['Hash Table', 'String', 'Sliding Window', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.631719256527674",
   "difficulty": "Easy",
   "frontendQuestionId": 2068,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check Whether Two Strings are Almost Equivalent",
   "titleSlug": "check-whether-two-strings-are-almost-equivalent",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.678712341900514",
   "difficulty": "Medium",
   "frontendQuestionId": 2069,
   "isFavor": false,
   "paidOnly": false,
   "title": "Walking Robot Simulation II",
   "titleSlug": "walking-robot-simulation-ii",
   "topicTags": "['Design', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.04805929864846",
   "difficulty": "Medium",
   "frontendQuestionId": 2070,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Beautiful Item for Each Query",
   "titleSlug": "most-beautiful-item-for-each-query",
   "topicTags": "['Array', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.46208007637687",
   "difficulty": "Hard",
   "frontendQuestionId": 2071,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Tasks You Can Assign",
   "titleSlug": "maximum-number-of-tasks-you-can-assign",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Queue', 'Sorting', 'Monotonic Queue']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.31794901306324",
   "difficulty": "Easy",
   "frontendQuestionId": 2072,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Winner University",
   "titleSlug": "the-winner-university",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.46336583715984",
   "difficulty": "Easy",
   "frontendQuestionId": 2073,
   "isFavor": false,
   "paidOnly": false,
   "title": "Time Needed to Buy Tickets",
   "titleSlug": "time-needed-to-buy-tickets",
   "topicTags": "['Array', 'Queue', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.27862306731632",
   "difficulty": "Medium",
   "frontendQuestionId": 2074,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Nodes in Even Length Groups",
   "titleSlug": "reverse-nodes-in-even-length-groups",
   "topicTags": "['Linked List']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.957438979516745",
   "difficulty": "Medium",
   "frontendQuestionId": 2075,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decode the Slanted Ciphertext",
   "titleSlug": "decode-the-slanted-ciphertext",
   "topicTags": "['String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.67599840027424",
   "difficulty": "Hard",
   "frontendQuestionId": 2076,
   "isFavor": false,
   "paidOnly": false,
   "title": "Process Restricted Friend Requests",
   "titleSlug": "process-restricted-friend-requests",
   "topicTags": "['Union Find', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.844808523469695",
   "difficulty": "Medium",
   "frontendQuestionId": 2077,
   "isFavor": false,
   "paidOnly": true,
   "title": "Paths in Maze That Lead to Same Room",
   "titleSlug": "paths-in-maze-that-lead-to-same-room",
   "topicTags": "['Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.48494801704715",
   "difficulty": "Easy",
   "frontendQuestionId": 2078,
   "isFavor": false,
   "paidOnly": false,
   "title": "Two Furthest Houses With Different Colors",
   "titleSlug": "two-furthest-houses-with-different-colors",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.934241302343",
   "difficulty": "Medium",
   "frontendQuestionId": 2079,
   "isFavor": false,
   "paidOnly": false,
   "title": "Watering Plants",
   "titleSlug": "watering-plants",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.4439793947199",
   "difficulty": "Medium",
   "frontendQuestionId": 2080,
   "isFavor": false,
   "paidOnly": false,
   "title": "Range Frequency Queries",
   "titleSlug": "range-frequency-queries",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Design', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.407511590352655",
   "difficulty": "Hard",
   "frontendQuestionId": 2081,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of k-Mirror Numbers",
   "titleSlug": "sum-of-k-mirror-numbers",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.51854857407837",
   "difficulty": "Easy",
   "frontendQuestionId": 2082,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Number of Rich Customers",
   "titleSlug": "the-number-of-rich-customers",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.18193898455236",
   "difficulty": "Medium",
   "frontendQuestionId": 2083,
   "isFavor": false,
   "paidOnly": true,
   "title": "Substrings That Begin and End With the Same Letter",
   "titleSlug": "substrings-that-begin-and-end-with-the-same-letter",
   "topicTags": "['Hash Table', 'Math', 'String', 'Counting', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.19749130820097",
   "difficulty": "Medium",
   "frontendQuestionId": 2084,
   "isFavor": false,
   "paidOnly": true,
   "title": "Drop Type 1 Orders for Customers With Type 0 Orders",
   "titleSlug": "drop-type-1-orders-for-customers-with-type-0-orders",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.09448373852905",
   "difficulty": "Easy",
   "frontendQuestionId": 2085,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Common Words With One Occurrence",
   "titleSlug": "count-common-words-with-one-occurrence",
   "topicTags": "['Array', 'Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.81952103951046",
   "difficulty": "Medium",
   "frontendQuestionId": 2086,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Food Buckets to Feed the Hamsters",
   "titleSlug": "minimum-number-of-food-buckets-to-feed-the-hamsters",
   "topicTags": "['String', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.993300455941196",
   "difficulty": "Medium",
   "frontendQuestionId": 2087,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost Homecoming of a Robot in a Grid",
   "titleSlug": "minimum-cost-homecoming-of-a-robot-in-a-grid",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.16",
   "difficulty": "Hard",
   "frontendQuestionId": 2088,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Fertile Pyramids in a Land",
   "titleSlug": "count-fertile-pyramids-in-a-land",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.10495291101759",
   "difficulty": "Easy",
   "frontendQuestionId": 2089,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Target Indices After Sorting Array",
   "titleSlug": "find-target-indices-after-sorting-array",
   "topicTags": "['Array', 'Binary Search', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.96699742784317",
   "difficulty": "Medium",
   "frontendQuestionId": 2090,
   "isFavor": false,
   "paidOnly": false,
   "title": "K Radius Subarray Averages",
   "titleSlug": "k-radius-subarray-averages",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.01422706835509",
   "difficulty": "Medium",
   "frontendQuestionId": 2091,
   "isFavor": false,
   "paidOnly": false,
   "title": "Removing Minimum and Maximum From Array",
   "titleSlug": "removing-minimum-and-maximum-from-array",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.346111478299186",
   "difficulty": "Hard",
   "frontendQuestionId": 2092,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All People With Secret",
   "titleSlug": "find-all-people-with-secret",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.85873403966313",
   "difficulty": "Medium",
   "frontendQuestionId": 2093,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Cost to Reach City With Discounts",
   "titleSlug": "minimum-cost-to-reach-city-with-discounts",
   "topicTags": "['Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.640386346643886",
   "difficulty": "Easy",
   "frontendQuestionId": 2094,
   "isFavor": false,
   "paidOnly": false,
   "title": "Finding 3-Digit Even Numbers",
   "titleSlug": "finding-3-digit-even-numbers",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.6057204562572",
   "difficulty": "Medium",
   "frontendQuestionId": 2095,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete the Middle Node of a Linked List",
   "titleSlug": "delete-the-middle-node-of-a-linked-list",
   "topicTags": "['Linked List', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.25753417462214",
   "difficulty": "Medium",
   "frontendQuestionId": 2096,
   "isFavor": false,
   "paidOnly": false,
   "title": "Step-By-Step Directions From a Binary Tree Node to Another",
   "titleSlug": "step-by-step-directions-from-a-binary-tree-node-to-another",
   "topicTags": "['String', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.35823399243344",
   "difficulty": "Hard",
   "frontendQuestionId": 2097,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Arrangement of Pairs",
   "titleSlug": "valid-arrangement-of-pairs",
   "topicTags": "['Depth-First Search', 'Graph', 'Eulerian Circuit']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.597047329570124",
   "difficulty": "Medium",
   "frontendQuestionId": 2098,
   "isFavor": false,
   "paidOnly": true,
   "title": "Subsequence of Size K With the Largest Even Sum",
   "titleSlug": "subsequence-of-size-k-with-the-largest-even-sum",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.10410705327935",
   "difficulty": "Easy",
   "frontendQuestionId": 2099,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Subsequence of Length K With the Largest Sum",
   "titleSlug": "find-subsequence-of-length-k-with-the-largest-sum",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.04530092759042",
   "difficulty": "Medium",
   "frontendQuestionId": 2100,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Good Days to Rob the Bank",
   "titleSlug": "find-good-days-to-rob-the-bank",
   "topicTags": "['Array', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.04010947401985",
   "difficulty": "Medium",
   "frontendQuestionId": 2101,
   "isFavor": false,
   "paidOnly": false,
   "title": "Detonate the Maximum Bombs",
   "titleSlug": "detonate-the-maximum-bombs",
   "topicTags": "['Array', 'Math', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Geometry']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.38310731132076",
   "difficulty": "Hard",
   "frontendQuestionId": 2102,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sequentially Ordinal Rank Tracker",
   "titleSlug": "sequentially-ordinal-rank-tracker",
   "topicTags": "['Design', 'Heap (Priority Queue)', 'Data Stream', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.02002882937562",
   "difficulty": "Easy",
   "frontendQuestionId": 2103,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rings and Rods",
   "titleSlug": "rings-and-rods",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.1071108285511",
   "difficulty": "Medium",
   "frontendQuestionId": 2104,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Subarray Ranges",
   "titleSlug": "sum-of-subarray-ranges",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.09399583409169",
   "difficulty": "Medium",
   "frontendQuestionId": 2105,
   "isFavor": false,
   "paidOnly": false,
   "title": "Watering Plants II",
   "titleSlug": "watering-plants-ii",
   "topicTags": "['Array', 'Two Pointers', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.126032461156356",
   "difficulty": "Hard",
   "frontendQuestionId": 2106,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Fruits Harvested After at Most K Steps",
   "titleSlug": "maximum-fruits-harvested-after-at-most-k-steps",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.74145891043398",
   "difficulty": "Medium",
   "frontendQuestionId": 2107,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Unique Flavors After Sharing K Candies",
   "titleSlug": "number-of-unique-flavors-after-sharing-k-candies",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.85149319685685",
   "difficulty": "Easy",
   "frontendQuestionId": 2108,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find First Palindromic String in the Array",
   "titleSlug": "find-first-palindromic-string-in-the-array",
   "topicTags": "['Array', 'Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.72974820232596",
   "difficulty": "Medium",
   "frontendQuestionId": 2109,
   "isFavor": false,
   "paidOnly": false,
   "title": "Adding Spaces to a String",
   "titleSlug": "adding-spaces-to-a-string",
   "topicTags": "['Array', 'Two Pointers', 'String', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.043025764690945",
   "difficulty": "Medium",
   "frontendQuestionId": 2110,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Smooth Descent Periods of a Stock",
   "titleSlug": "number-of-smooth-descent-periods-of-a-stock",
   "topicTags": "['Array', 'Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.844126403190124",
   "difficulty": "Hard",
   "frontendQuestionId": 2111,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make the Array K-Increasing",
   "titleSlug": "minimum-operations-to-make-the-array-k-increasing",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.34372161274544",
   "difficulty": "Medium",
   "frontendQuestionId": 2112,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Airport With the Most Traffic",
   "titleSlug": "the-airport-with-the-most-traffic",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.67316153362665",
   "difficulty": "Medium",
   "frontendQuestionId": 2113,
   "isFavor": false,
   "paidOnly": true,
   "title": "Elements in Array After Removing and Replacing Elements",
   "titleSlug": "elements-in-array-after-removing-and-replacing-elements",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.60905601138754",
   "difficulty": "Easy",
   "frontendQuestionId": 2114,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Words Found in Sentences",
   "titleSlug": "maximum-number-of-words-found-in-sentences",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.38883660903934",
   "difficulty": "Medium",
   "frontendQuestionId": 2115,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All Possible Recipes from Given Supplies",
   "titleSlug": "find-all-possible-recipes-from-given-supplies",
   "topicTags": "['Array', 'Hash Table', 'String', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.751141791090646",
   "difficulty": "Medium",
   "frontendQuestionId": 2116,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if a Parentheses String Can Be Valid",
   "titleSlug": "check-if-a-parentheses-string-can-be-valid",
   "topicTags": "['String', 'Stack', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.31544359255203",
   "difficulty": "Hard",
   "frontendQuestionId": 2117,
   "isFavor": false,
   "paidOnly": false,
   "title": "Abbreviating the Product of a Range",
   "titleSlug": "abbreviating-the-product-of-a-range",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.29747394453277",
   "difficulty": "Hard",
   "frontendQuestionId": 2118,
   "isFavor": false,
   "paidOnly": true,
   "title": "Build the Equation",
   "titleSlug": "build-the-equation",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.94445821091011",
   "difficulty": "Easy",
   "frontendQuestionId": 2119,
   "isFavor": false,
   "paidOnly": false,
   "title": "A Number After a Double Reversal",
   "titleSlug": "a-number-after-a-double-reversal",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.46022486710261",
   "difficulty": "Medium",
   "frontendQuestionId": 2120,
   "isFavor": false,
   "paidOnly": false,
   "title": "Execution of All Suffix Instructions Staying in a Grid",
   "titleSlug": "execution-of-all-suffix-instructions-staying-in-a-grid",
   "topicTags": "['String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.77028536219047",
   "difficulty": "Medium",
   "frontendQuestionId": 2121,
   "isFavor": false,
   "paidOnly": false,
   "title": "Intervals Between Identical Elements",
   "titleSlug": "intervals-between-identical-elements",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.7025877463554",
   "difficulty": "Hard",
   "frontendQuestionId": 2122,
   "isFavor": false,
   "paidOnly": false,
   "title": "Recover the Original Array",
   "titleSlug": "recover-the-original-array",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Sorting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.6829992576095",
   "difficulty": "Hard",
   "frontendQuestionId": 2123,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Operations to Remove Adjacent Ones in Matrix",
   "titleSlug": "minimum-operations-to-remove-adjacent-ones-in-matrix",
   "topicTags": "['Array', 'Graph', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.3401704096603",
   "difficulty": "Easy",
   "frontendQuestionId": 2124,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if All A's Appears Before All B's",
   "titleSlug": "check-if-all-as-appears-before-all-bs",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.40692738803591",
   "difficulty": "Medium",
   "frontendQuestionId": 2125,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Laser Beams in a Bank",
   "titleSlug": "number-of-laser-beams-in-a-bank",
   "topicTags": "['Array', 'Math', 'String', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.4455366003497",
   "difficulty": "Medium",
   "frontendQuestionId": 2126,
   "isFavor": false,
   "paidOnly": false,
   "title": "Destroying Asteroids",
   "titleSlug": "destroying-asteroids",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.17260467362633",
   "difficulty": "Hard",
   "frontendQuestionId": 2127,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Employees to Be Invited to a Meeting",
   "titleSlug": "maximum-employees-to-be-invited-to-a-meeting",
   "topicTags": "['Depth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.18141523583533",
   "difficulty": "Medium",
   "frontendQuestionId": 2128,
   "isFavor": false,
   "paidOnly": true,
   "title": "Remove All Ones With Row and Column Flips",
   "titleSlug": "remove-all-ones-with-row-and-column-flips",
   "topicTags": "['Array', 'Math', 'Bit Manipulation', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.13072648414204",
   "difficulty": "Easy",
   "frontendQuestionId": 2129,
   "isFavor": false,
   "paidOnly": false,
   "title": "Capitalize the Title",
   "titleSlug": "capitalize-the-title",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.30821277342905",
   "difficulty": "Medium",
   "frontendQuestionId": 2130,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Twin Sum of a Linked List",
   "titleSlug": "maximum-twin-sum-of-a-linked-list",
   "topicTags": "['Linked List', 'Two Pointers', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.83898415341781",
   "difficulty": "Medium",
   "frontendQuestionId": 2131,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Palindrome by Concatenating Two Letter Words",
   "titleSlug": "longest-palindrome-by-concatenating-two-letter-words",
   "topicTags": "['Array', 'Hash Table', 'String', 'Greedy', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.78508341511285",
   "difficulty": "Hard",
   "frontendQuestionId": 2132,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stamping the Grid",
   "titleSlug": "stamping-the-grid",
   "topicTags": "['Array', 'Greedy', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.578226565652045",
   "difficulty": "Easy",
   "frontendQuestionId": 2133,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Every Row and Column Contains All Numbers",
   "titleSlug": "check-if-every-row-and-column-contains-all-numbers",
   "topicTags": "['Array', 'Hash Table', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.47425967388466",
   "difficulty": "Medium",
   "frontendQuestionId": 2134,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Swaps to Group All 1's Together II",
   "titleSlug": "minimum-swaps-to-group-all-1s-together-ii",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.34879095208909",
   "difficulty": "Medium",
   "frontendQuestionId": 2135,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Words Obtained After Adding a Letter",
   "titleSlug": "count-words-obtained-after-adding-a-letter",
   "topicTags": "['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.06633020029501",
   "difficulty": "Hard",
   "frontendQuestionId": 2136,
   "isFavor": false,
   "paidOnly": false,
   "title": "Earliest Possible Day of Full Bloom",
   "titleSlug": "earliest-possible-day-of-full-bloom",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.85308668530867",
   "difficulty": "Medium",
   "frontendQuestionId": 2137,
   "isFavor": false,
   "paidOnly": true,
   "title": "Pour Water Between Buckets to Make Water Levels Equal",
   "titleSlug": "pour-water-between-buckets-to-make-water-levels-equal",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.31062910495015",
   "difficulty": "Easy",
   "frontendQuestionId": 2138,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divide a String Into Groups of Size k",
   "titleSlug": "divide-a-string-into-groups-of-size-k",
   "topicTags": "['String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.33655361565385",
   "difficulty": "Medium",
   "frontendQuestionId": 2139,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Moves to Reach Target Score",
   "titleSlug": "minimum-moves-to-reach-target-score",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.358397751229795",
   "difficulty": "Medium",
   "frontendQuestionId": 2140,
   "isFavor": false,
   "paidOnly": false,
   "title": "Solving Questions With Brainpower",
   "titleSlug": "solving-questions-with-brainpower",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.839058296661435",
   "difficulty": "Hard",
   "frontendQuestionId": 2141,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Running Time of N Computers",
   "titleSlug": "maximum-running-time-of-n-computers",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.80515985337107",
   "difficulty": "Medium",
   "frontendQuestionId": 2142,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Number of Passengers in Each Bus I",
   "titleSlug": "the-number-of-passengers-in-each-bus-i",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.33487589398401",
   "difficulty": "Hard",
   "frontendQuestionId": 2143,
   "isFavor": false,
   "paidOnly": true,
   "title": "Choose Numbers From Two Arrays in Range",
   "titleSlug": "choose-numbers-from-two-arrays-in-range",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.89046301674658",
   "difficulty": "Easy",
   "frontendQuestionId": 2144,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost of Buying Candies With Discount",
   "titleSlug": "minimum-cost-of-buying-candies-with-discount",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.282870036785624",
   "difficulty": "Medium",
   "frontendQuestionId": 2145,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Hidden Sequences",
   "titleSlug": "count-the-hidden-sequences",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.262773013289284",
   "difficulty": "Medium",
   "frontendQuestionId": 2146,
   "isFavor": false,
   "paidOnly": false,
   "title": "K Highest Ranked Items Within a Price Range",
   "titleSlug": "k-highest-ranked-items-within-a-price-range",
   "topicTags": "['Array', 'Breadth-First Search', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.8226502937348",
   "difficulty": "Hard",
   "frontendQuestionId": 2147,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Divide a Long Corridor",
   "titleSlug": "number-of-ways-to-divide-a-long-corridor",
   "topicTags": "['Math', 'String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.12581834665643",
   "difficulty": "Easy",
   "frontendQuestionId": 2148,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Elements With Strictly Smaller and Greater Elements ",
   "titleSlug": "count-elements-with-strictly-smaller-and-greater-elements",
   "topicTags": "['Array', 'Sorting', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.238133144688",
   "difficulty": "Medium",
   "frontendQuestionId": 2149,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rearrange Array Elements by Sign",
   "titleSlug": "rearrange-array-elements-by-sign",
   "topicTags": "['Array', 'Two Pointers', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.31708415061578",
   "difficulty": "Medium",
   "frontendQuestionId": 2150,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All Lonely Numbers in the Array",
   "titleSlug": "find-all-lonely-numbers-in-the-array",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.678899082568805",
   "difficulty": "Hard",
   "frontendQuestionId": 2151,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Good People Based on Statements",
   "titleSlug": "maximum-good-people-based-on-statements",
   "topicTags": "['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.58827746908048",
   "difficulty": "Medium",
   "frontendQuestionId": 2152,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Number of Lines to Cover Points",
   "titleSlug": "minimum-number-of-lines-to-cover-points",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Geometry', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.71672040534316",
   "difficulty": "Hard",
   "frontendQuestionId": 2153,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Number of Passengers in Each Bus II",
   "titleSlug": "the-number-of-passengers-in-each-bus-ii",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.26909086455437",
   "difficulty": "Easy",
   "frontendQuestionId": 2154,
   "isFavor": false,
   "paidOnly": false,
   "title": "Keep Multiplying Found Values by Two",
   "titleSlug": "keep-multiplying-found-values-by-two",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.19688006403874",
   "difficulty": "Medium",
   "frontendQuestionId": 2155,
   "isFavor": false,
   "paidOnly": false,
   "title": "All Divisions With the Highest Score of a Binary Array",
   "titleSlug": "all-divisions-with-the-highest-score-of-a-binary-array",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.493305285652276",
   "difficulty": "Hard",
   "frontendQuestionId": 2156,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Substring With Given Hash Value",
   "titleSlug": "find-substring-with-given-hash-value",
   "topicTags": "['String', 'Sliding Window', 'Rolling Hash', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.460698303542085",
   "difficulty": "Hard",
   "frontendQuestionId": 2157,
   "isFavor": false,
   "paidOnly": false,
   "title": "Groups of Strings",
   "titleSlug": "groups-of-strings",
   "topicTags": "['String', 'Bit Manipulation', 'Union Find']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.433032276132465",
   "difficulty": "Hard",
   "frontendQuestionId": 2158,
   "isFavor": false,
   "paidOnly": true,
   "title": "Amount of New Area Painted Each Day",
   "titleSlug": "amount-of-new-area-painted-each-day",
   "topicTags": "['Array', 'Segment Tree', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.794028273219716",
   "difficulty": "Medium",
   "frontendQuestionId": 2159,
   "isFavor": false,
   "paidOnly": true,
   "title": "Order Two Columns Independently",
   "titleSlug": "order-two-columns-independently",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.01441575969905",
   "difficulty": "Easy",
   "frontendQuestionId": 2160,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Sum of Four Digit Number After Splitting Digits",
   "titleSlug": "minimum-sum-of-four-digit-number-after-splitting-digits",
   "topicTags": "['Math', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.93935316982846",
   "difficulty": "Medium",
   "frontendQuestionId": 2161,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition Array According to Given Pivot",
   "titleSlug": "partition-array-according-to-given-pivot",
   "topicTags": "['Array', 'Two Pointers', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.8007145965507",
   "difficulty": "Medium",
   "frontendQuestionId": 2162,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Set Cooking Time",
   "titleSlug": "minimum-cost-to-set-cooking-time",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.69787746500076",
   "difficulty": "Hard",
   "frontendQuestionId": 2163,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Difference in Sums After Removal of Elements",
   "titleSlug": "minimum-difference-in-sums-after-removal-of-elements",
   "topicTags": "['Array', 'Dynamic Programming', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.45458281956432",
   "difficulty": "Easy",
   "frontendQuestionId": 2164,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort Even and Odd Indices Independently",
   "titleSlug": "sort-even-and-odd-indices-independently",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.471806156385185",
   "difficulty": "Medium",
   "frontendQuestionId": 2165,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Value of the Rearranged Number",
   "titleSlug": "smallest-value-of-the-rearranged-number",
   "topicTags": "['Math', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.014021753374394",
   "difficulty": "Medium",
   "frontendQuestionId": 2166,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Bitset",
   "titleSlug": "design-bitset",
   "topicTags": "['Array', 'Hash Table', 'String', 'Design']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.132443865929055",
   "difficulty": "Hard",
   "frontendQuestionId": 2167,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Remove All Cars Containing Illegal Goods",
   "titleSlug": "minimum-time-to-remove-all-cars-containing-illegal-goods",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.05842094122627",
   "difficulty": "Medium",
   "frontendQuestionId": 2168,
   "isFavor": false,
   "paidOnly": true,
   "title": "Unique Substrings With Equal Digit Frequency",
   "titleSlug": "unique-substrings-with-equal-digit-frequency",
   "topicTags": "['Hash Table', 'String', 'Rolling Hash', 'Counting', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.6682740272697",
   "difficulty": "Easy",
   "frontendQuestionId": 2169,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Operations to Obtain Zero",
   "titleSlug": "count-operations-to-obtain-zero",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.71923365378059",
   "difficulty": "Medium",
   "frontendQuestionId": 2170,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make the Array Alternating",
   "titleSlug": "minimum-operations-to-make-the-array-alternating",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.343860248093776",
   "difficulty": "Medium",
   "frontendQuestionId": 2171,
   "isFavor": false,
   "paidOnly": false,
   "title": "Removing Minimum Number of Magic Beans",
   "titleSlug": "removing-minimum-number-of-magic-beans",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Enumeration', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.58693441789527",
   "difficulty": "Hard",
   "frontendQuestionId": 2172,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum AND Sum of Array",
   "titleSlug": "maximum-and-sum-of-array",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.7064524578713",
   "difficulty": "Hard",
   "frontendQuestionId": 2173,
   "isFavor": false,
   "paidOnly": true,
   "title": "Longest Winning Streak",
   "titleSlug": "longest-winning-streak",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.84837728194725",
   "difficulty": "Medium",
   "frontendQuestionId": 2174,
   "isFavor": false,
   "paidOnly": true,
   "title": "Remove All Ones With Row and Column Flips II",
   "titleSlug": "remove-all-ones-with-row-and-column-flips-ii",
   "topicTags": "['Array', 'Bit Manipulation', 'Breadth-First Search', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.63060916527678",
   "difficulty": "Medium",
   "frontendQuestionId": 2175,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Change in Global Rankings",
   "titleSlug": "the-change-in-global-rankings",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.46648223212487",
   "difficulty": "Easy",
   "frontendQuestionId": 2176,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Equal and Divisible Pairs in an Array",
   "titleSlug": "count-equal-and-divisible-pairs-in-an-array",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.52236269237036",
   "difficulty": "Medium",
   "frontendQuestionId": 2177,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Three Consecutive Integers That Sum to a Given Number",
   "titleSlug": "find-three-consecutive-integers-that-sum-to-a-given-number",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.32892670463868",
   "difficulty": "Medium",
   "frontendQuestionId": 2178,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Split of Positive Even Integers",
   "titleSlug": "maximum-split-of-positive-even-integers",
   "topicTags": "['Math', 'Backtracking', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.11066889202722",
   "difficulty": "Hard",
   "frontendQuestionId": 2179,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Good Triplets in an Array",
   "titleSlug": "count-good-triplets-in-an-array",
   "topicTags": "['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.40089910001154",
   "difficulty": "Easy",
   "frontendQuestionId": 2180,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Integers With Even Digit Sum",
   "titleSlug": "count-integers-with-even-digit-sum",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.57174547646693",
   "difficulty": "Medium",
   "frontendQuestionId": 2181,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge Nodes in Between Zeros",
   "titleSlug": "merge-nodes-in-between-zeros",
   "topicTags": "['Linked List', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.86633634234467",
   "difficulty": "Medium",
   "frontendQuestionId": 2182,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct String With Repeat Limit",
   "titleSlug": "construct-string-with-repeat-limit",
   "topicTags": "['Hash Table', 'String', 'Greedy', 'Heap (Priority Queue)', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.619947109935772",
   "difficulty": "Hard",
   "frontendQuestionId": 2183,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Array Pairs Divisible by K",
   "titleSlug": "count-array-pairs-divisible-by-k",
   "topicTags": "['Array', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.448860625331214",
   "difficulty": "Medium",
   "frontendQuestionId": 2184,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Ways to Build Sturdy Brick Wall",
   "titleSlug": "number-of-ways-to-build-sturdy-brick-wall",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.52472410218888",
   "difficulty": "Easy",
   "frontendQuestionId": 2185,
   "isFavor": false,
   "paidOnly": false,
   "title": "Counting Words With a Given Prefix",
   "titleSlug": "counting-words-with-a-given-prefix",
   "topicTags": "['Array', 'String', 'String Matching']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.63164222168791",
   "difficulty": "Medium",
   "frontendQuestionId": 2186,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Steps to Make Two Strings Anagram II",
   "titleSlug": "minimum-number-of-steps-to-make-two-strings-anagram-ii",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.94636249155262",
   "difficulty": "Medium",
   "frontendQuestionId": 2187,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Complete Trips",
   "titleSlug": "minimum-time-to-complete-trips",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.95516096065406",
   "difficulty": "Hard",
   "frontendQuestionId": 2188,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Finish the Race",
   "titleSlug": "minimum-time-to-finish-the-race",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.9209945859234",
   "difficulty": "Medium",
   "frontendQuestionId": 2189,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Ways to Build House of Cards",
   "titleSlug": "number-of-ways-to-build-house-of-cards",
   "topicTags": "['Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.0696596748034",
   "difficulty": "Easy",
   "frontendQuestionId": 2190,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Frequent Number Following Key In an Array",
   "titleSlug": "most-frequent-number-following-key-in-an-array",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.97683277803652",
   "difficulty": "Medium",
   "frontendQuestionId": 2191,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort the Jumbled Numbers",
   "titleSlug": "sort-the-jumbled-numbers",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.87334693895162",
   "difficulty": "Medium",
   "frontendQuestionId": 2192,
   "isFavor": false,
   "paidOnly": false,
   "title": "All Ancestors of a Node in a Directed Acyclic Graph",
   "titleSlug": "all-ancestors-of-a-node-in-a-directed-acyclic-graph",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.76491797367947",
   "difficulty": "Hard",
   "frontendQuestionId": 2193,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Moves to Make Palindrome",
   "titleSlug": "minimum-number-of-moves-to-make-palindrome",
   "topicTags": "['Two Pointers', 'String', 'Greedy', 'Binary Indexed Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.78953868429738",
   "difficulty": "Easy",
   "frontendQuestionId": 2194,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cells in a Range on an Excel Sheet",
   "titleSlug": "cells-in-a-range-on-an-excel-sheet",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.938259002428808",
   "difficulty": "Medium",
   "frontendQuestionId": 2195,
   "isFavor": false,
   "paidOnly": false,
   "title": "Append K Integers With Minimal Sum",
   "titleSlug": "append-k-integers-with-minimal-sum",
   "topicTags": "['Array', 'Math', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.64832851561096",
   "difficulty": "Medium",
   "frontendQuestionId": 2196,
   "isFavor": false,
   "paidOnly": false,
   "title": "Create Binary Tree From Descriptions",
   "titleSlug": "create-binary-tree-from-descriptions",
   "topicTags": "['Array', 'Hash Table', 'Tree', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.20469626111016",
   "difficulty": "Hard",
   "frontendQuestionId": 2197,
   "isFavor": false,
   "paidOnly": false,
   "title": "Replace Non-Coprime Numbers in Array",
   "titleSlug": "replace-non-coprime-numbers-in-array",
   "topicTags": "['Array', 'Math', 'Stack', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.08560311284047",
   "difficulty": "Medium",
   "frontendQuestionId": 2198,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Single Divisor Triplets",
   "titleSlug": "number-of-single-divisor-triplets",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.98845798707294",
   "difficulty": "Hard",
   "frontendQuestionId": 2199,
   "isFavor": false,
   "paidOnly": true,
   "title": "Finding the Topic of Each Post",
   "titleSlug": "finding-the-topic-of-each-post",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.97495955445474",
   "difficulty": "Easy",
   "frontendQuestionId": 2200,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All K-Distant Indices in an Array",
   "titleSlug": "find-all-k-distant-indices-in-an-array",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.16828342471531",
   "difficulty": "Medium",
   "frontendQuestionId": 2201,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Artifacts That Can Be Extracted",
   "titleSlug": "count-artifacts-that-can-be-extracted",
   "topicTags": "['Array', 'Hash Table', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.325518970487206",
   "difficulty": "Medium",
   "frontendQuestionId": 2202,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize the Topmost Element After K Moves",
   "titleSlug": "maximize-the-topmost-element-after-k-moves",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.8595231991797",
   "difficulty": "Hard",
   "frontendQuestionId": 2203,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Weighted Subgraph With the Required Paths",
   "titleSlug": "minimum-weighted-subgraph-with-the-required-paths",
   "topicTags": "['Graph', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.73383893102204",
   "difficulty": "Hard",
   "frontendQuestionId": 2204,
   "isFavor": false,
   "paidOnly": true,
   "title": "Distance to a Cycle in Undirected Graph",
   "titleSlug": "distance-to-a-cycle-in-undirected-graph",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.756314182625594",
   "difficulty": "Easy",
   "frontendQuestionId": 2205,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Number of Users That Are Eligible for Discount",
   "titleSlug": "the-number-of-users-that-are-eligible-for-discount",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.24435635228289",
   "difficulty": "Easy",
   "frontendQuestionId": 2206,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divide Array Into Equal Pairs",
   "titleSlug": "divide-array-into-equal-pairs",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.98733040382333",
   "difficulty": "Medium",
   "frontendQuestionId": 2207,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Number of Subsequences in a String",
   "titleSlug": "maximize-number-of-subsequences-in-a-string",
   "topicTags": "['String', 'Greedy', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.67374891427808",
   "difficulty": "Medium",
   "frontendQuestionId": 2208,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Halve Array Sum",
   "titleSlug": "minimum-operations-to-halve-array-sum",
   "topicTags": "['Array', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.730415879506225",
   "difficulty": "Hard",
   "frontendQuestionId": 2209,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum White Tiles After Covering With Carpets",
   "titleSlug": "minimum-white-tiles-after-covering-with-carpets",
   "topicTags": "['String', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.462238047007965",
   "difficulty": "Easy",
   "frontendQuestionId": 2210,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Hills and Valleys in an Array",
   "titleSlug": "count-hills-and-valleys-in-an-array",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.149092561409134",
   "difficulty": "Medium",
   "frontendQuestionId": 2211,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Collisions on a Road",
   "titleSlug": "count-collisions-on-a-road",
   "topicTags": "['String', 'Stack', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.08096229470276",
   "difficulty": "Medium",
   "frontendQuestionId": 2212,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Points in an Archery Competition",
   "titleSlug": "maximum-points-in-an-archery-competition",
   "topicTags": "['Array', 'Backtracking', 'Bit Manipulation', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.76076526683646",
   "difficulty": "Hard",
   "frontendQuestionId": 2213,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Substring of One Repeating Character",
   "titleSlug": "longest-substring-of-one-repeating-character",
   "topicTags": "['Array', 'String', 'Segment Tree', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.54398226546383",
   "difficulty": "Medium",
   "frontendQuestionId": 2214,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Health to Beat Game",
   "titleSlug": "minimum-health-to-beat-game",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.581811638127",
   "difficulty": "Easy",
   "frontendQuestionId": 2215,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Difference of Two Arrays",
   "titleSlug": "find-the-difference-of-two-arrays",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.643484388551606",
   "difficulty": "Medium",
   "frontendQuestionId": 2216,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Deletions to Make Array Beautiful",
   "titleSlug": "minimum-deletions-to-make-array-beautiful",
   "topicTags": "['Array', 'Stack', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.30230050323508",
   "difficulty": "Medium",
   "frontendQuestionId": 2217,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Palindrome With Fixed Length",
   "titleSlug": "find-palindrome-with-fixed-length",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.38900440413235",
   "difficulty": "Hard",
   "frontendQuestionId": 2218,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Value of K Coins From Piles",
   "titleSlug": "maximum-value-of-k-coins-from-piles",
   "topicTags": "['Array', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.98588464346556",
   "difficulty": "Medium",
   "frontendQuestionId": 2219,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Sum Score of Array",
   "titleSlug": "maximum-sum-score-of-array",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.47444075765553",
   "difficulty": "Easy",
   "frontendQuestionId": 2220,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Bit Flips to Convert Number",
   "titleSlug": "minimum-bit-flips-to-convert-number",
   "topicTags": "['Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.73962405830932",
   "difficulty": "Medium",
   "frontendQuestionId": 2221,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Triangular Sum of an Array",
   "titleSlug": "find-triangular-sum-of-an-array",
   "topicTags": "['Array', 'Math', 'Simulation', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.40352494211272",
   "difficulty": "Medium",
   "frontendQuestionId": 2222,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Select Buildings",
   "titleSlug": "number-of-ways-to-select-buildings",
   "topicTags": "['String', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.68888159783456",
   "difficulty": "Hard",
   "frontendQuestionId": 2223,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Scores of Built Strings",
   "titleSlug": "sum-of-scores-of-built-strings",
   "topicTags": "['String', 'Binary Search', 'Rolling Hash', 'Suffix Array', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.37491741164732",
   "difficulty": "Easy",
   "frontendQuestionId": 2224,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Convert Time",
   "titleSlug": "minimum-number-of-operations-to-convert-time",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.67003638036297",
   "difficulty": "Medium",
   "frontendQuestionId": 2225,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Players With Zero or One Losses",
   "titleSlug": "find-players-with-zero-or-one-losses",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.19470560398648",
   "difficulty": "Medium",
   "frontendQuestionId": 2226,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Candies Allocated to K Children",
   "titleSlug": "maximum-candies-allocated-to-k-children",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.32449228720453",
   "difficulty": "Hard",
   "frontendQuestionId": 2227,
   "isFavor": false,
   "paidOnly": false,
   "title": "Encrypt and Decrypt Strings",
   "titleSlug": "encrypt-and-decrypt-strings",
   "topicTags": "['Array', 'Hash Table', 'String', 'Design', 'Trie']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.8641499160579",
   "difficulty": "Medium",
   "frontendQuestionId": 2228,
   "isFavor": false,
   "paidOnly": true,
   "title": "Users With Two Purchases Within Seven Days",
   "titleSlug": "users-with-two-purchases-within-seven-days",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.68734054719803",
   "difficulty": "Easy",
   "frontendQuestionId": 2229,
   "isFavor": false,
   "paidOnly": true,
   "title": "Check if an Array Is Consecutive",
   "titleSlug": "check-if-an-array-is-consecutive",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.70500196927924",
   "difficulty": "Easy",
   "frontendQuestionId": 2230,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Users That Are Eligible for Discount",
   "titleSlug": "the-users-that-are-eligible-for-discount",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.365702455706916",
   "difficulty": "Easy",
   "frontendQuestionId": 2231,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Number After Digit Swaps by Parity",
   "titleSlug": "largest-number-after-digit-swaps-by-parity",
   "topicTags": "['Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.340321453529",
   "difficulty": "Medium",
   "frontendQuestionId": 2232,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize Result by Adding Parentheses to Expression",
   "titleSlug": "minimize-result-by-adding-parentheses-to-expression",
   "topicTags": "['String', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.11555025508514",
   "difficulty": "Medium",
   "frontendQuestionId": 2233,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Product After K Increments",
   "titleSlug": "maximum-product-after-k-increments",
   "topicTags": "['Array', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.887906876482003",
   "difficulty": "Hard",
   "frontendQuestionId": 2234,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Total Beauty of the Gardens",
   "titleSlug": "maximum-total-beauty-of-the-gardens",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting', 'Enumeration', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.12465398556401",
   "difficulty": "Easy",
   "frontendQuestionId": 2235,
   "isFavor": false,
   "paidOnly": false,
   "title": "Add Two Integers",
   "titleSlug": "add-two-integers",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.87244649482436",
   "difficulty": "Easy",
   "frontendQuestionId": 2236,
   "isFavor": false,
   "paidOnly": false,
   "title": "Root Equals Sum of Children",
   "titleSlug": "root-equals-sum-of-children",
   "topicTags": "['Tree', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.92097084504958",
   "difficulty": "Medium",
   "frontendQuestionId": 2237,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Positions on Street With Required Brightness",
   "titleSlug": "count-positions-on-street-with-required-brightness",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.97122948977298",
   "difficulty": "Medium",
   "frontendQuestionId": 2238,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Times a Driver Was a Passenger",
   "titleSlug": "number-of-times-a-driver-was-a-passenger",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.97162767839013",
   "difficulty": "Easy",
   "frontendQuestionId": 2239,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Closest Number to Zero",
   "titleSlug": "find-closest-number-to-zero",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.731179018850256",
   "difficulty": "Medium",
   "frontendQuestionId": 2240,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Buy Pens and Pencils",
   "titleSlug": "number-of-ways-to-buy-pens-and-pencils",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.023170089520804",
   "difficulty": "Medium",
   "frontendQuestionId": 2241,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design an ATM Machine",
   "titleSlug": "design-an-atm-machine",
   "topicTags": "['Array', 'Greedy', 'Design']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.764014219305444",
   "difficulty": "Hard",
   "frontendQuestionId": 2242,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Score of a Node Sequence",
   "titleSlug": "maximum-score-of-a-node-sequence",
   "topicTags": "['Array', 'Graph', 'Sorting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.37440349565918",
   "difficulty": "Easy",
   "frontendQuestionId": 2243,
   "isFavor": false,
   "paidOnly": false,
   "title": "Calculate Digit Sum of a String",
   "titleSlug": "calculate-digit-sum-of-a-string",
   "topicTags": "['String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.90328289879925",
   "difficulty": "Medium",
   "frontendQuestionId": 2244,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Rounds to Complete All Tasks",
   "titleSlug": "minimum-rounds-to-complete-all-tasks",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.46395088359745",
   "difficulty": "Medium",
   "frontendQuestionId": 2245,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Trailing Zeros in a Cornered Path",
   "titleSlug": "maximum-trailing-zeros-in-a-cornered-path",
   "topicTags": "['Array', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.91891536824404",
   "difficulty": "Hard",
   "frontendQuestionId": 2246,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Path With Different Adjacent Characters",
   "titleSlug": "longest-path-with-different-adjacent-characters",
   "topicTags": "['Array', 'String', 'Tree', 'Depth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.0",
   "difficulty": "Hard",
   "frontendQuestionId": 2247,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Cost of Trip With K Highways",
   "titleSlug": "maximum-cost-of-trip-with-k-highways",
   "topicTags": "['Dynamic Programming', 'Bit Manipulation', 'Graph', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.32460048869086",
   "difficulty": "Easy",
   "frontendQuestionId": 2248,
   "isFavor": false,
   "paidOnly": false,
   "title": "Intersection of Multiple Arrays",
   "titleSlug": "intersection-of-multiple-arrays",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.74883998536745",
   "difficulty": "Medium",
   "frontendQuestionId": 2249,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Lattice Points Inside a Circle",
   "titleSlug": "count-lattice-points-inside-a-circle",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Geometry', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.78721216350215",
   "difficulty": "Medium",
   "frontendQuestionId": 2250,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Rectangles Containing Each Point",
   "titleSlug": "count-number-of-rectangles-containing-each-point",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Binary Indexed Tree', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.04907572717847",
   "difficulty": "Hard",
   "frontendQuestionId": 2251,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Flowers in Full Bloom",
   "titleSlug": "number-of-flowers-in-full-bloom",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Sorting', 'Prefix Sum', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.96087352138307",
   "difficulty": "Hard",
   "frontendQuestionId": 2252,
   "isFavor": false,
   "paidOnly": true,
   "title": "Dynamic Pivoting of a Table",
   "titleSlug": "dynamic-pivoting-of-a-table",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.90750141003949",
   "difficulty": "Hard",
   "frontendQuestionId": 2253,
   "isFavor": false,
   "paidOnly": true,
   "title": "Dynamic Unpivoting of a Table",
   "titleSlug": "dynamic-unpivoting-of-a-table",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.615946097697915",
   "difficulty": "Hard",
   "frontendQuestionId": 2254,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design Video Sharing Platform",
   "titleSlug": "design-video-sharing-platform",
   "topicTags": "['Hash Table', 'Stack', 'Design', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.72890899194834",
   "difficulty": "Easy",
   "frontendQuestionId": 2255,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Prefixes of a Given String",
   "titleSlug": "count-prefixes-of-a-given-string",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.41054256033608",
   "difficulty": "Medium",
   "frontendQuestionId": 2256,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Average Difference",
   "titleSlug": "minimum-average-difference",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.80651875795867",
   "difficulty": "Medium",
   "frontendQuestionId": 2257,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Unguarded Cells in the Grid",
   "titleSlug": "count-unguarded-cells-in-the-grid",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.958869921134074",
   "difficulty": "Hard",
   "frontendQuestionId": 2258,
   "isFavor": false,
   "paidOnly": false,
   "title": "Escape the Spreading Fire",
   "titleSlug": "escape-the-spreading-fire",
   "topicTags": "['Array', 'Binary Search', 'Breadth-First Search', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.94640431219598",
   "difficulty": "Easy",
   "frontendQuestionId": 2259,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Digit From Number to Maximize Result",
   "titleSlug": "remove-digit-from-number-to-maximize-result",
   "topicTags": "['String', 'Greedy', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.384569063261196",
   "difficulty": "Medium",
   "frontendQuestionId": 2260,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Consecutive Cards to Pick Up",
   "titleSlug": "minimum-consecutive-cards-to-pick-up",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.34425721879597",
   "difficulty": "Medium",
   "frontendQuestionId": 2261,
   "isFavor": false,
   "paidOnly": false,
   "title": "K Divisible Elements Subarrays",
   "titleSlug": "k-divisible-elements-subarrays",
   "topicTags": "['Array', 'Hash Table', 'Trie', 'Rolling Hash', 'Hash Function', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.80126725693425",
   "difficulty": "Hard",
   "frontendQuestionId": 2262,
   "isFavor": false,
   "paidOnly": false,
   "title": "Total Appeal of A String",
   "titleSlug": "total-appeal-of-a-string",
   "topicTags": "['Hash Table', 'String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.32056005895357",
   "difficulty": "Hard",
   "frontendQuestionId": 2263,
   "isFavor": false,
   "paidOnly": true,
   "title": "Make Array Non-decreasing or Non-increasing",
   "titleSlug": "make-array-non-decreasing-or-non-increasing",
   "topicTags": "['Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.03823046590736",
   "difficulty": "Easy",
   "frontendQuestionId": 2264,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest 3-Same-Digit Number in String",
   "titleSlug": "largest-3-same-digit-number-in-string",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.27603405818273",
   "difficulty": "Medium",
   "frontendQuestionId": 2265,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Nodes Equal to Average of Subtree",
   "titleSlug": "count-nodes-equal-to-average-of-subtree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.54640772071965",
   "difficulty": "Medium",
   "frontendQuestionId": 2266,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Texts",
   "titleSlug": "count-number-of-texts",
   "topicTags": "['Hash Table', 'Math', 'String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.22622835699708",
   "difficulty": "Hard",
   "frontendQuestionId": 2267,
   "isFavor": false,
   "paidOnly": false,
   "title": " Check if There Is a Valid Parentheses String Path",
   "titleSlug": "check-if-there-is-a-valid-parentheses-string-path",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.20123099350084",
   "difficulty": "Medium",
   "frontendQuestionId": 2268,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Number of Keypresses",
   "titleSlug": "minimum-number-of-keypresses",
   "topicTags": "['Hash Table', 'String', 'Greedy', 'Sorting', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.34116683520395",
   "difficulty": "Easy",
   "frontendQuestionId": 2269,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the K-Beauty of a Number",
   "titleSlug": "find-the-k-beauty-of-a-number",
   "topicTags": "['Math', 'String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.09045071927792",
   "difficulty": "Medium",
   "frontendQuestionId": 2270,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Split Array",
   "titleSlug": "number-of-ways-to-split-array",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.67908527525097",
   "difficulty": "Medium",
   "frontendQuestionId": 2271,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum White Tiles Covered by a Carpet",
   "titleSlug": "maximum-white-tiles-covered-by-a-carpet",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Sliding Window', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.895640703676925",
   "difficulty": "Hard",
   "frontendQuestionId": 2272,
   "isFavor": false,
   "paidOnly": false,
   "title": "Substring With Largest Variance",
   "titleSlug": "substring-with-largest-variance",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.19901966245196",
   "difficulty": "Easy",
   "frontendQuestionId": 2273,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Resultant Array After Removing Anagrams",
   "titleSlug": "find-resultant-array-after-removing-anagrams",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.8960544449654",
   "difficulty": "Medium",
   "frontendQuestionId": 2274,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Consecutive Floors Without Special Floors",
   "titleSlug": "maximum-consecutive-floors-without-special-floors",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.91945945945946",
   "difficulty": "Medium",
   "frontendQuestionId": 2275,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Combination With Bitwise AND Greater Than Zero",
   "titleSlug": "largest-combination-with-bitwise-and-greater-than-zero",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.01726637039869",
   "difficulty": "Hard",
   "frontendQuestionId": 2276,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Integers in Intervals",
   "titleSlug": "count-integers-in-intervals",
   "topicTags": "['Design', 'Segment Tree', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.48530825942943",
   "difficulty": "Hard",
   "frontendQuestionId": 2277,
   "isFavor": false,
   "paidOnly": true,
   "title": "Closest Node to Path in Tree",
   "titleSlug": "closest-node-to-path-in-tree",
   "topicTags": "['Array', 'Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.39896698778395",
   "difficulty": "Easy",
   "frontendQuestionId": 2278,
   "isFavor": false,
   "paidOnly": false,
   "title": "Percentage of Letter in String",
   "titleSlug": "percentage-of-letter-in-string",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.51252925697209",
   "difficulty": "Medium",
   "frontendQuestionId": 2279,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Bags With Full Capacity of Rocks",
   "titleSlug": "maximum-bags-with-full-capacity-of-rocks",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.90653636884307",
   "difficulty": "Medium",
   "frontendQuestionId": 2280,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Lines to Represent a Line Chart",
   "titleSlug": "minimum-lines-to-represent-a-line-chart",
   "topicTags": "['Array', 'Math', 'Geometry', 'Sorting', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.1501940877874",
   "difficulty": "Hard",
   "frontendQuestionId": 2281,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Total Strength of Wizards",
   "titleSlug": "sum-of-total-strength-of-wizards",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.046545606345234",
   "difficulty": "Medium",
   "frontendQuestionId": 2282,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of People That Can Be Seen in a Grid",
   "titleSlug": "number-of-people-that-can-be-seen-in-a-grid",
   "topicTags": "['Array', 'Stack', 'Matrix', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.25826726952008",
   "difficulty": "Easy",
   "frontendQuestionId": 2283,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Number Has Equal Digit Count and Digit Value",
   "titleSlug": "check-if-number-has-equal-digit-count-and-digit-value",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.04566317871216",
   "difficulty": "Medium",
   "frontendQuestionId": 2284,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sender With Largest Word Count",
   "titleSlug": "sender-with-largest-word-count",
   "topicTags": "['Array', 'Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.16064837104798",
   "difficulty": "Medium",
   "frontendQuestionId": 2285,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Total Importance of Roads",
   "titleSlug": "maximum-total-importance-of-roads",
   "topicTags": "['Greedy', 'Graph', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "18.51851851851852",
   "difficulty": "Hard",
   "frontendQuestionId": 2286,
   "isFavor": false,
   "paidOnly": false,
   "title": "Booking Concert Tickets in Groups",
   "titleSlug": "booking-concert-tickets-in-groups",
   "topicTags": "['Binary Search', 'Design', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.91039203484754",
   "difficulty": "Easy",
   "frontendQuestionId": 2287,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rearrange Characters to Make Target String",
   "titleSlug": "rearrange-characters-to-make-target-string",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.47247456289954",
   "difficulty": "Medium",
   "frontendQuestionId": 2288,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Discount to Prices",
   "titleSlug": "apply-discount-to-prices",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "22.91014554264594",
   "difficulty": "Medium",
   "frontendQuestionId": 2289,
   "isFavor": false,
   "paidOnly": false,
   "title": "Steps to Make Array Non-decreasing",
   "titleSlug": "steps-to-make-array-non-decreasing",
   "topicTags": "['Array', 'Linked List', 'Stack', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.95081492911564",
   "difficulty": "Hard",
   "frontendQuestionId": 2290,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Obstacle Removal to Reach Corner",
   "titleSlug": "minimum-obstacle-removal-to-reach-corner",
   "topicTags": "['Array', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.3822235368063",
   "difficulty": "Medium",
   "frontendQuestionId": 2291,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Profit From Trading Stocks",
   "titleSlug": "maximum-profit-from-trading-stocks",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.081855388813096",
   "difficulty": "Medium",
   "frontendQuestionId": 2292,
   "isFavor": false,
   "paidOnly": true,
   "title": "Products With Three or More Orders in Two Consecutive Years",
   "titleSlug": "products-with-three-or-more-orders-in-two-consecutive-years",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.61341874731195",
   "difficulty": "Easy",
   "frontendQuestionId": 2293,
   "isFavor": false,
   "paidOnly": false,
   "title": "Min Max Game",
   "titleSlug": "min-max-game",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.3098216268226",
   "difficulty": "Medium",
   "frontendQuestionId": 2294,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition Array Such That Maximum Difference Is K",
   "titleSlug": "partition-array-such-that-maximum-difference-is-k",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.57657504325873",
   "difficulty": "Medium",
   "frontendQuestionId": 2295,
   "isFavor": false,
   "paidOnly": false,
   "title": "Replace Elements in an Array",
   "titleSlug": "replace-elements-in-an-array",
   "topicTags": "['Array', 'Hash Table', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.72903993047615",
   "difficulty": "Hard",
   "frontendQuestionId": 2296,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design a Text Editor",
   "titleSlug": "design-a-text-editor",
   "topicTags": "['Linked List', 'String', 'Stack', 'Design', 'Simulation', 'Doubly-Linked List']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.08861910017529",
   "difficulty": "Medium",
   "frontendQuestionId": 2297,
   "isFavor": false,
   "paidOnly": true,
   "title": "Jump Game VIII",
   "titleSlug": "jump-game-viii",
   "topicTags": "['Array', 'Dynamic Programming', 'Stack', 'Graph', 'Monotonic Stack', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.25015981248667",
   "difficulty": "Medium",
   "frontendQuestionId": 2298,
   "isFavor": false,
   "paidOnly": true,
   "title": "Tasks Count in the Weekend",
   "titleSlug": "tasks-count-in-the-weekend",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.7882980957328",
   "difficulty": "Easy",
   "frontendQuestionId": 2299,
   "isFavor": false,
   "paidOnly": false,
   "title": "Strong Password Checker II",
   "titleSlug": "strong-password-checker-ii",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.07828214752297",
   "difficulty": "Medium",
   "frontendQuestionId": 2300,
   "isFavor": false,
   "paidOnly": false,
   "title": "Successful Pairs of Spells and Potions",
   "titleSlug": "successful-pairs-of-spells-and-potions",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.83198564779907",
   "difficulty": "Hard",
   "frontendQuestionId": 2301,
   "isFavor": false,
   "paidOnly": false,
   "title": "Match Substring After Replacement",
   "titleSlug": "match-substring-after-replacement",
   "topicTags": "['Array', 'Hash Table', 'String', 'String Matching']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.7357617002287",
   "difficulty": "Hard",
   "frontendQuestionId": 2302,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Subarrays With Score Less Than K",
   "titleSlug": "count-subarrays-with-score-less-than-k",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.9761838296872",
   "difficulty": "Easy",
   "frontendQuestionId": 2303,
   "isFavor": false,
   "paidOnly": false,
   "title": "Calculate Amount Paid in Taxes",
   "titleSlug": "calculate-amount-paid-in-taxes",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.02409294352918",
   "difficulty": "Medium",
   "frontendQuestionId": 2304,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Path Cost in a Grid",
   "titleSlug": "minimum-path-cost-in-a-grid",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.29897281123301",
   "difficulty": "Medium",
   "frontendQuestionId": 2305,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fair Distribution of Cookies",
   "titleSlug": "fair-distribution-of-cookies",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.32377715599959",
   "difficulty": "Hard",
   "frontendQuestionId": 2306,
   "isFavor": false,
   "paidOnly": false,
   "title": "Naming a Company",
   "titleSlug": "naming-a-company",
   "topicTags": "['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.11926605504588",
   "difficulty": "Hard",
   "frontendQuestionId": 2307,
   "isFavor": false,
   "paidOnly": true,
   "title": "Check for Contradictions in Equations",
   "titleSlug": "check-for-contradictions-in-equations",
   "topicTags": "['Array', 'Depth-First Search', 'Union Find', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.29760746936392",
   "difficulty": "Medium",
   "frontendQuestionId": 2308,
   "isFavor": false,
   "paidOnly": true,
   "title": "Arrange Table by Gender",
   "titleSlug": "arrange-table-by-gender",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.84913493256738",
   "difficulty": "Easy",
   "frontendQuestionId": 2309,
   "isFavor": false,
   "paidOnly": false,
   "title": "Greatest English Letter in Upper and Lower Case",
   "titleSlug": "greatest-english-letter-in-upper-and-lower-case",
   "topicTags": "['Hash Table', 'String', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.153365276633973",
   "difficulty": "Medium",
   "frontendQuestionId": 2310,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Numbers With Units Digit K",
   "titleSlug": "sum-of-numbers-with-units-digit-k",
   "topicTags": "['Math', 'Dynamic Programming', 'Greedy', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.084917897934",
   "difficulty": "Medium",
   "frontendQuestionId": 2311,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Binary Subsequence Less Than or Equal to K",
   "titleSlug": "longest-binary-subsequence-less-than-or-equal-to-k",
   "topicTags": "['String', 'Dynamic Programming', 'Greedy', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.33106602556585",
   "difficulty": "Hard",
   "frontendQuestionId": 2312,
   "isFavor": false,
   "paidOnly": false,
   "title": "Selling Pieces of Wood",
   "titleSlug": "selling-pieces-of-wood",
   "topicTags": "['Array', 'Dynamic Programming', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.6735644076565",
   "difficulty": "Hard",
   "frontendQuestionId": 2313,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Flips in Binary Tree to Get Result",
   "titleSlug": "minimum-flips-in-binary-tree-to-get-result",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.07333264184214",
   "difficulty": "Medium",
   "frontendQuestionId": 2314,
   "isFavor": false,
   "paidOnly": true,
   "title": "The First Day of the Maximum Recorded Degree in Each City",
   "titleSlug": "the-first-day-of-the-maximum-recorded-degree-in-each-city",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.63305870943093",
   "difficulty": "Easy",
   "frontendQuestionId": 2315,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Asterisks",
   "titleSlug": "count-asterisks",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.18576081366779",
   "difficulty": "Medium",
   "frontendQuestionId": 2316,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Unreachable Pairs of Nodes in an Undirected Graph",
   "titleSlug": "count-unreachable-pairs-of-nodes-in-an-undirected-graph",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.15910550266618",
   "difficulty": "Medium",
   "frontendQuestionId": 2317,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum XOR After Operations ",
   "titleSlug": "maximum-xor-after-operations",
   "topicTags": "['Array', 'Math', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.06791827719492",
   "difficulty": "Hard",
   "frontendQuestionId": 2318,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Distinct Roll Sequences",
   "titleSlug": "number-of-distinct-roll-sequences",
   "topicTags": "['Dynamic Programming', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.33988412317748",
   "difficulty": "Easy",
   "frontendQuestionId": 2319,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Matrix Is X-Matrix",
   "titleSlug": "check-if-matrix-is-x-matrix",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.54815955559834",
   "difficulty": "Medium",
   "frontendQuestionId": 2320,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Ways to Place Houses",
   "titleSlug": "count-number-of-ways-to-place-houses",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.307743926989666",
   "difficulty": "Hard",
   "frontendQuestionId": 2321,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Score Of Spliced Array",
   "titleSlug": "maximum-score-of-spliced-array",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.972349061390155",
   "difficulty": "Hard",
   "frontendQuestionId": 2322,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Score After Removals on a Tree",
   "titleSlug": "minimum-score-after-removals-on-a-tree",
   "topicTags": "['Array', 'Bit Manipulation', 'Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.60059289664215",
   "difficulty": "Medium",
   "frontendQuestionId": 2323,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Minimum Time to Finish All Jobs II",
   "titleSlug": "find-minimum-time-to-finish-all-jobs-ii",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.26413420437133",
   "difficulty": "Medium",
   "frontendQuestionId": 2324,
   "isFavor": false,
   "paidOnly": true,
   "title": "Product Sales Analysis IV",
   "titleSlug": "product-sales-analysis-iv",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.26542881009227",
   "difficulty": "Easy",
   "frontendQuestionId": 2325,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decode the Message",
   "titleSlug": "decode-the-message",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.17372241438106",
   "difficulty": "Medium",
   "frontendQuestionId": 2326,
   "isFavor": false,
   "paidOnly": false,
   "title": "Spiral Matrix IV",
   "titleSlug": "spiral-matrix-iv",
   "topicTags": "['Array', 'Linked List', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.101485148514854",
   "difficulty": "Medium",
   "frontendQuestionId": 2327,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of People Aware of a Secret",
   "titleSlug": "number-of-people-aware-of-a-secret",
   "topicTags": "['Dynamic Programming', 'Queue', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.71204743731664",
   "difficulty": "Hard",
   "frontendQuestionId": 2328,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Increasing Paths in a Grid",
   "titleSlug": "number-of-increasing-paths-in-a-grid",
   "topicTags": "['Array', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort', 'Memoization', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.42725713394667",
   "difficulty": "Easy",
   "frontendQuestionId": 2329,
   "isFavor": false,
   "paidOnly": true,
   "title": "Product Sales Analysis V",
   "titleSlug": "product-sales-analysis-v",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.75426964877681",
   "difficulty": "Medium",
   "frontendQuestionId": 2330,
   "isFavor": false,
   "paidOnly": true,
   "title": "Valid Palindrome IV",
   "titleSlug": "valid-palindrome-iv",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.43357475940073",
   "difficulty": "Easy",
   "frontendQuestionId": 2331,
   "isFavor": false,
   "paidOnly": false,
   "title": "Evaluate Boolean Binary Tree",
   "titleSlug": "evaluate-boolean-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.06023187485111",
   "difficulty": "Medium",
   "frontendQuestionId": 2332,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Latest Time to Catch a Bus",
   "titleSlug": "the-latest-time-to-catch-a-bus",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.78040733455999",
   "difficulty": "Medium",
   "frontendQuestionId": 2333,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Sum of Squared Difference",
   "titleSlug": "minimum-sum-of-squared-difference",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.29026387625113",
   "difficulty": "Hard",
   "frontendQuestionId": 2334,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subarray With Elements Greater Than Varying Threshold",
   "titleSlug": "subarray-with-elements-greater-than-varying-threshold",
   "topicTags": "['Array', 'Stack', 'Union Find', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.599094126265186",
   "difficulty": "Easy",
   "frontendQuestionId": 2335,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Amount of Time to Fill Cups",
   "titleSlug": "minimum-amount-of-time-to-fill-cups",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.36031786198535",
   "difficulty": "Medium",
   "frontendQuestionId": 2336,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Number in Infinite Set",
   "titleSlug": "smallest-number-in-infinite-set",
   "topicTags": "['Hash Table', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.90587916327765",
   "difficulty": "Medium",
   "frontendQuestionId": 2337,
   "isFavor": false,
   "paidOnly": false,
   "title": "Move Pieces to Obtain a String",
   "titleSlug": "move-pieces-to-obtain-a-string",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.423158708679686",
   "difficulty": "Hard",
   "frontendQuestionId": 2338,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Ideal Arrays",
   "titleSlug": "count-the-number-of-ideal-arrays",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.37082232947819",
   "difficulty": "Easy",
   "frontendQuestionId": 2339,
   "isFavor": false,
   "paidOnly": true,
   "title": "All the Matches of the League",
   "titleSlug": "all-the-matches-of-the-league",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.23883368929334",
   "difficulty": "Medium",
   "frontendQuestionId": 2340,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Adjacent Swaps to Make a Valid Array",
   "titleSlug": "minimum-adjacent-swaps-to-make-a-valid-array",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.41811830329893",
   "difficulty": "Easy",
   "frontendQuestionId": 2341,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Pairs in Array",
   "titleSlug": "maximum-number-of-pairs-in-array",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.99476759545162",
   "difficulty": "Medium",
   "frontendQuestionId": 2342,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Sum of a Pair With Equal Sum of Digits",
   "titleSlug": "max-sum-of-a-pair-with-equal-sum-of-digits",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.17955439056357",
   "difficulty": "Medium",
   "frontendQuestionId": 2343,
   "isFavor": false,
   "paidOnly": false,
   "title": "Query Kth Smallest Trimmed Number",
   "titleSlug": "query-kth-smallest-trimmed-number",
   "topicTags": "['Array', 'String', 'Divide and Conquer', 'Sorting', 'Heap (Priority Queue)', 'Radix Sort', 'Quickselect']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.02681013446011",
   "difficulty": "Hard",
   "frontendQuestionId": 2344,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Deletions to Make Array Divisible",
   "titleSlug": "minimum-deletions-to-make-array-divisible",
   "topicTags": "['Array', 'Math', 'Sorting', 'Heap (Priority Queue)', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.63042366815502",
   "difficulty": "Medium",
   "frontendQuestionId": 2345,
   "isFavor": false,
   "paidOnly": true,
   "title": "Finding the Number of Visible Mountains",
   "titleSlug": "finding-the-number-of-visible-mountains",
   "topicTags": "['Array', 'Stack', 'Sorting', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.80706760316067",
   "difficulty": "Medium",
   "frontendQuestionId": 2346,
   "isFavor": false,
   "paidOnly": true,
   "title": "Compute the Rank as a Percentage",
   "titleSlug": "compute-the-rank-as-a-percentage",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.06408706166868",
   "difficulty": "Easy",
   "frontendQuestionId": 2347,
   "isFavor": false,
   "paidOnly": false,
   "title": "Best Poker Hand",
   "titleSlug": "best-poker-hand",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.66524935275999",
   "difficulty": "Medium",
   "frontendQuestionId": 2348,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Zero-Filled Subarrays",
   "titleSlug": "number-of-zero-filled-subarrays",
   "topicTags": "['Array', 'Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.10205070372074",
   "difficulty": "Medium",
   "frontendQuestionId": 2349,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design a Number Container System",
   "titleSlug": "design-a-number-container-system",
   "topicTags": "['Hash Table', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.50679093479906",
   "difficulty": "Hard",
   "frontendQuestionId": 2350,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Impossible Sequence of Rolls",
   "titleSlug": "shortest-impossible-sequence-of-rolls",
   "topicTags": "['Array', 'Hash Table', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.01376168830545",
   "difficulty": "Easy",
   "frontendQuestionId": 2351,
   "isFavor": false,
   "paidOnly": false,
   "title": "First Letter to Appear Twice",
   "titleSlug": "first-letter-to-appear-twice",
   "topicTags": "['Hash Table', 'String', 'Bit Manipulation', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.38539017865989",
   "difficulty": "Medium",
   "frontendQuestionId": 2352,
   "isFavor": false,
   "paidOnly": false,
   "title": "Equal Row and Column Pairs",
   "titleSlug": "equal-row-and-column-pairs",
   "topicTags": "['Array', 'Hash Table', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.24555850780087",
   "difficulty": "Medium",
   "frontendQuestionId": 2353,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design a Food Rating System",
   "titleSlug": "design-a-food-rating-system",
   "topicTags": "['Array', 'Hash Table', 'String', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.81015579919215",
   "difficulty": "Hard",
   "frontendQuestionId": 2354,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Excellent Pairs",
   "titleSlug": "number-of-excellent-pairs",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.25057825751735",
   "difficulty": "Hard",
   "frontendQuestionId": 2355,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Number of Books You Can Take",
   "titleSlug": "maximum-number-of-books-you-can-take",
   "topicTags": "['Array', 'Dynamic Programming', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.30759844121083",
   "difficulty": "Easy",
   "frontendQuestionId": 2356,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Unique Subjects Taught by Each Teacher",
   "titleSlug": "number-of-unique-subjects-taught-by-each-teacher",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.18265058322385",
   "difficulty": "Easy",
   "frontendQuestionId": 2357,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make Array Zero by Subtracting Equal Amounts",
   "titleSlug": "make-array-zero-by-subtracting-equal-amounts",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.01502693974395",
   "difficulty": "Medium",
   "frontendQuestionId": 2358,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Groups Entering a Competition",
   "titleSlug": "maximum-number-of-groups-entering-a-competition",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.69063358955188",
   "difficulty": "Medium",
   "frontendQuestionId": 2359,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Closest Node to Given Two Nodes",
   "titleSlug": "find-closest-node-to-given-two-nodes",
   "topicTags": "['Depth-First Search', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.78399012526287",
   "difficulty": "Hard",
   "frontendQuestionId": 2360,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Cycle in a Graph",
   "titleSlug": "longest-cycle-in-a-graph",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.53882215060064",
   "difficulty": "Hard",
   "frontendQuestionId": 2361,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Costs Using the Train Line",
   "titleSlug": "minimum-costs-using-the-train-line",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.14541832669323",
   "difficulty": "Hard",
   "frontendQuestionId": 2362,
   "isFavor": false,
   "paidOnly": true,
   "title": "Generate the Invoice",
   "titleSlug": "generate-the-invoice",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.5888248503822",
   "difficulty": "Easy",
   "frontendQuestionId": 2363,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge Similar Items",
   "titleSlug": "merge-similar-items",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.47441367631337",
   "difficulty": "Medium",
   "frontendQuestionId": 2364,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Bad Pairs",
   "titleSlug": "count-number-of-bad-pairs",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.800043804539534",
   "difficulty": "Medium",
   "frontendQuestionId": 2365,
   "isFavor": false,
   "paidOnly": false,
   "title": "Task Scheduler II",
   "titleSlug": "task-scheduler-ii",
   "topicTags": "['Array', 'Hash Table', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.2657126781125",
   "difficulty": "Hard",
   "frontendQuestionId": 2366,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Replacements to Sort the Array",
   "titleSlug": "minimum-replacements-to-sort-the-array",
   "topicTags": "['Array', 'Math', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.80888347570375",
   "difficulty": "Easy",
   "frontendQuestionId": 2367,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Arithmetic Triplets",
   "titleSlug": "number-of-arithmetic-triplets",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.27045221096954",
   "difficulty": "Medium",
   "frontendQuestionId": 2368,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reachable Nodes With Restrictions",
   "titleSlug": "reachable-nodes-with-restrictions",
   "topicTags": "['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.86975772076011",
   "difficulty": "Medium",
   "frontendQuestionId": 2369,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if There is a Valid Partition For The Array",
   "titleSlug": "check-if-there-is-a-valid-partition-for-the-array",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.89519815871614",
   "difficulty": "Medium",
   "frontendQuestionId": 2370,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Ideal Subsequence",
   "titleSlug": "longest-ideal-subsequence",
   "topicTags": "['Hash Table', 'String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.67488508148767",
   "difficulty": "Hard",
   "frontendQuestionId": 2371,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimize Maximum Value in a Grid",
   "titleSlug": "minimize-maximum-value-in-a-grid",
   "topicTags": "['Array', 'Union Find', 'Graph', 'Topological Sort', 'Sorting', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.56369069854314",
   "difficulty": "Medium",
   "frontendQuestionId": 2372,
   "isFavor": false,
   "paidOnly": true,
   "title": "Calculate the Influence of Each Salesperson",
   "titleSlug": "calculate-the-influence-of-each-salesperson",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.76566371335441",
   "difficulty": "Easy",
   "frontendQuestionId": 2373,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Local Values in a Matrix",
   "titleSlug": "largest-local-values-in-a-matrix",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.22343823507565",
   "difficulty": "Medium",
   "frontendQuestionId": 2374,
   "isFavor": false,
   "paidOnly": false,
   "title": "Node With Highest Edge Score",
   "titleSlug": "node-with-highest-edge-score",
   "topicTags": "['Hash Table', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.84909857306508",
   "difficulty": "Medium",
   "frontendQuestionId": 2375,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct Smallest Number From DI String",
   "titleSlug": "construct-smallest-number-from-di-string",
   "topicTags": "['String', 'Backtracking', 'Stack', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.33002481389578",
   "difficulty": "Hard",
   "frontendQuestionId": 2376,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Special Integers",
   "titleSlug": "count-special-integers",
   "topicTags": "['Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.44859518046933",
   "difficulty": "Easy",
   "frontendQuestionId": 2377,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sort the Olympic Table",
   "titleSlug": "sort-the-olympic-table",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.12181479179614",
   "difficulty": "Medium",
   "frontendQuestionId": 2378,
   "isFavor": false,
   "paidOnly": true,
   "title": "Choose Edges to Maximize Score in a Tree",
   "titleSlug": "choose-edges-to-maximize-score-in-a-tree",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.47664936990363",
   "difficulty": "Easy",
   "frontendQuestionId": 2379,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Recolors to Get K Consecutive Black Blocks",
   "titleSlug": "minimum-recolors-to-get-k-consecutive-black-blocks",
   "topicTags": "['String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.389211890723544",
   "difficulty": "Medium",
   "frontendQuestionId": 2380,
   "isFavor": false,
   "paidOnly": false,
   "title": "Time Needed to Rearrange a Binary String",
   "titleSlug": "time-needed-to-rearrange-a-binary-string",
   "topicTags": "['String', 'Dynamic Programming', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.23904469842137",
   "difficulty": "Medium",
   "frontendQuestionId": 2381,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shifting Letters II",
   "titleSlug": "shifting-letters-ii",
   "topicTags": "['Array', 'String', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.12019820884666",
   "difficulty": "Hard",
   "frontendQuestionId": 2382,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Segment Sum After Removals",
   "titleSlug": "maximum-segment-sum-after-removals",
   "topicTags": "['Array', 'Union Find', 'Prefix Sum', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.70884466939379",
   "difficulty": "Easy",
   "frontendQuestionId": 2383,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Hours of Training to Win a Competition",
   "titleSlug": "minimum-hours-of-training-to-win-a-competition",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.27856214007059",
   "difficulty": "Medium",
   "frontendQuestionId": 2384,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Palindromic Number",
   "titleSlug": "largest-palindromic-number",
   "topicTags": "['Hash Table', 'String', 'Greedy', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.27134853358637",
   "difficulty": "Medium",
   "frontendQuestionId": 2385,
   "isFavor": false,
   "paidOnly": false,
   "title": "Amount of Time for Binary Tree to Be Infected",
   "titleSlug": "amount-of-time-for-binary-tree-to-be-infected",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.419659049691695",
   "difficulty": "Hard",
   "frontendQuestionId": 2386,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the K-Sum of an Array",
   "titleSlug": "find-the-k-sum-of-an-array",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.3451486933013",
   "difficulty": "Medium",
   "frontendQuestionId": 2387,
   "isFavor": false,
   "paidOnly": true,
   "title": "Median of a Row Wise Sorted Matrix",
   "titleSlug": "median-of-a-row-wise-sorted-matrix",
   "topicTags": "['Array', 'Binary Search', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.36010362694301",
   "difficulty": "Medium",
   "frontendQuestionId": 2388,
   "isFavor": false,
   "paidOnly": true,
   "title": "Change Null Values in a Table to the Previous Value",
   "titleSlug": "change-null-values-in-a-table-to-the-previous-value",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.62543669356359",
   "difficulty": "Easy",
   "frontendQuestionId": 2389,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Subsequence With Limited Sum",
   "titleSlug": "longest-subsequence-with-limited-sum",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Sorting', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.61284101462266",
   "difficulty": "Medium",
   "frontendQuestionId": 2390,
   "isFavor": false,
   "paidOnly": false,
   "title": "Removing Stars From a String",
   "titleSlug": "removing-stars-from-a-string",
   "topicTags": "['String', 'Stack', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.09701381666915",
   "difficulty": "Medium",
   "frontendQuestionId": 2391,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Amount of Time to Collect Garbage",
   "titleSlug": "minimum-amount-of-time-to-collect-garbage",
   "topicTags": "['Array', 'String', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.2387231884295",
   "difficulty": "Hard",
   "frontendQuestionId": 2392,
   "isFavor": false,
   "paidOnly": false,
   "title": "Build a Matrix With Conditions",
   "titleSlug": "build-a-matrix-with-conditions",
   "topicTags": "['Array', 'Graph', 'Topological Sort', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.1822188158651",
   "difficulty": "Medium",
   "frontendQuestionId": 2393,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Strictly Increasing Subarrays",
   "titleSlug": "count-strictly-increasing-subarrays",
   "topicTags": "['Array', 'Math', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.90701678863539",
   "difficulty": "Medium",
   "frontendQuestionId": 2394,
   "isFavor": false,
   "paidOnly": true,
   "title": "Employees With Deductions",
   "titleSlug": "employees-with-deductions",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.04078008424563",
   "difficulty": "Easy",
   "frontendQuestionId": 2395,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Subarrays With Equal Sum",
   "titleSlug": "find-subarrays-with-equal-sum",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.02916927862374",
   "difficulty": "Medium",
   "frontendQuestionId": 2396,
   "isFavor": false,
   "paidOnly": false,
   "title": "Strictly Palindromic Number",
   "titleSlug": "strictly-palindromic-number",
   "topicTags": "['Math', 'Two Pointers', 'Brainteaser']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.197522921023",
   "difficulty": "Medium",
   "frontendQuestionId": 2397,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Rows Covered by Columns",
   "titleSlug": "maximum-rows-covered-by-columns",
   "topicTags": "['Array', 'Backtracking', 'Bit Manipulation', 'Matrix', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.289812133863045",
   "difficulty": "Hard",
   "frontendQuestionId": 2398,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Robots Within Budget",
   "titleSlug": "maximum-number-of-robots-within-budget",
   "topicTags": "['Array', 'Binary Search', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Prefix Sum', 'Monotonic Queue']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.68282686045488",
   "difficulty": "Easy",
   "frontendQuestionId": 2399,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check Distances Between Same Letters",
   "titleSlug": "check-distances-between-same-letters",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.92480615371959",
   "difficulty": "Medium",
   "frontendQuestionId": 2400,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Reach a Position After Exactly k Steps",
   "titleSlug": "number-of-ways-to-reach-a-position-after-exactly-k-steps",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.76313689454211",
   "difficulty": "Medium",
   "frontendQuestionId": 2401,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Nice Subarray",
   "titleSlug": "longest-nice-subarray",
   "topicTags": "['Array', 'Bit Manipulation', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.897701521528006",
   "difficulty": "Hard",
   "frontendQuestionId": 2402,
   "isFavor": false,
   "paidOnly": false,
   "title": "Meeting Rooms III",
   "titleSlug": "meeting-rooms-iii",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.75008582217645",
   "difficulty": "Hard",
   "frontendQuestionId": 2403,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Time to Kill All Monsters",
   "titleSlug": "minimum-time-to-kill-all-monsters",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.51749477914811",
   "difficulty": "Easy",
   "frontendQuestionId": 2404,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Frequent Even Element",
   "titleSlug": "most-frequent-even-element",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.15619186531603",
   "difficulty": "Medium",
   "frontendQuestionId": 2405,
   "isFavor": false,
   "paidOnly": false,
   "title": "Optimal Partition of String",
   "titleSlug": "optimal-partition-of-string",
   "topicTags": "['Hash Table', 'String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.68060058979735",
   "difficulty": "Medium",
   "frontendQuestionId": 2406,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divide Intervals Into Minimum Number of Groups",
   "titleSlug": "divide-intervals-into-minimum-number-of-groups",
   "topicTags": "['Array', 'Two Pointers', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.33522434244456",
   "difficulty": "Hard",
   "frontendQuestionId": 2407,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Increasing Subsequence II",
   "titleSlug": "longest-increasing-subsequence-ii",
   "topicTags": "['Array', 'Divide and Conquer', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree', 'Queue', 'Monotonic Queue']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.68837000449034",
   "difficulty": "Medium",
   "frontendQuestionId": 2408,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design SQL",
   "titleSlug": "design-sql",
   "topicTags": "['Array', 'Hash Table', 'String', 'Design']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.22524539349062",
   "difficulty": "Easy",
   "frontendQuestionId": 2409,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Days Spent Together",
   "titleSlug": "count-days-spent-together",
   "topicTags": "['Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.42594924837213",
   "difficulty": "Medium",
   "frontendQuestionId": 2410,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Matching of Players With Trainers",
   "titleSlug": "maximum-matching-of-players-with-trainers",
   "topicTags": "['Array', 'Two Pointers', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.88777309543023",
   "difficulty": "Medium",
   "frontendQuestionId": 2411,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Subarrays With Maximum Bitwise OR",
   "titleSlug": "smallest-subarrays-with-maximum-bitwise-or",
   "topicTags": "['Array', 'Binary Search', 'Bit Manipulation', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.926535087719294",
   "difficulty": "Hard",
   "frontendQuestionId": 2412,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Money Required Before Transactions",
   "titleSlug": "minimum-money-required-before-transactions",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.04006437801772",
   "difficulty": "Easy",
   "frontendQuestionId": 2413,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Even Multiple",
   "titleSlug": "smallest-even-multiple",
   "topicTags": "['Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.088167231489706",
   "difficulty": "Medium",
   "frontendQuestionId": 2414,
   "isFavor": false,
   "paidOnly": false,
   "title": "Length of the Longest Alphabetical Continuous Substring",
   "titleSlug": "length-of-the-longest-alphabetical-continuous-substring",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.61842008237736",
   "difficulty": "Medium",
   "frontendQuestionId": 2415,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Odd Levels of Binary Tree",
   "titleSlug": "reverse-odd-levels-of-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.68651830400705",
   "difficulty": "Hard",
   "frontendQuestionId": 2416,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Prefix Scores of Strings",
   "titleSlug": "sum-of-prefix-scores-of-strings",
   "topicTags": "['Array', 'String', 'Trie', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.073375262054505",
   "difficulty": "Medium",
   "frontendQuestionId": 2417,
   "isFavor": false,
   "paidOnly": true,
   "title": "Closest Fair Integer",
   "titleSlug": "closest-fair-integer",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.80494358681008",
   "difficulty": "Easy",
   "frontendQuestionId": 2418,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort the People",
   "titleSlug": "sort-the-people",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.785603091096334",
   "difficulty": "Medium",
   "frontendQuestionId": 2419,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Subarray With Maximum Bitwise AND",
   "titleSlug": "longest-subarray-with-maximum-bitwise-and",
   "topicTags": "['Array', 'Bit Manipulation', 'Brainteaser']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.571086125221164",
   "difficulty": "Medium",
   "frontendQuestionId": 2420,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All Good Indices",
   "titleSlug": "find-all-good-indices",
   "topicTags": "['Array', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.93834656702475",
   "difficulty": "Hard",
   "frontendQuestionId": 2421,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Good Paths",
   "titleSlug": "number-of-good-paths",
   "topicTags": "['Array', 'Hash Table', 'Tree', 'Union Find', 'Graph', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.02960203881592",
   "difficulty": "Medium",
   "frontendQuestionId": 2422,
   "isFavor": false,
   "paidOnly": true,
   "title": "Merge Operations to Turn Array Into a Palindrome",
   "titleSlug": "merge-operations-to-turn-array-into-a-palindrome",
   "topicTags": "['Array', 'Two Pointers', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "18.032621858243843",
   "difficulty": "Easy",
   "frontendQuestionId": 2423,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Letter To Equalize Frequency",
   "titleSlug": "remove-letter-to-equalize-frequency",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.30209648901238",
   "difficulty": "Medium",
   "frontendQuestionId": 2424,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Uploaded Prefix",
   "titleSlug": "longest-uploaded-prefix",
   "topicTags": "['Binary Search', 'Union Find', 'Design', 'Binary Indexed Tree', 'Segment Tree', 'Heap (Priority Queue)', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.03801449222054",
   "difficulty": "Medium",
   "frontendQuestionId": 2425,
   "isFavor": false,
   "paidOnly": false,
   "title": "Bitwise XOR of All Pairings",
   "titleSlug": "bitwise-xor-of-all-pairings",
   "topicTags": "['Array', 'Bit Manipulation', 'Brainteaser']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.008711547799265",
   "difficulty": "Hard",
   "frontendQuestionId": 2426,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Pairs Satisfying Inequality",
   "titleSlug": "number-of-pairs-satisfying-inequality",
   "topicTags": "['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.39646201873049",
   "difficulty": "Easy",
   "frontendQuestionId": 2427,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Common Factors",
   "titleSlug": "number-of-common-factors",
   "topicTags": "['Math', 'Enumeration', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.76926866112771",
   "difficulty": "Medium",
   "frontendQuestionId": 2428,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum of an Hourglass",
   "titleSlug": "maximum-sum-of-an-hourglass",
   "topicTags": "['Array', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.43908348009206",
   "difficulty": "Medium",
   "frontendQuestionId": 2429,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize XOR",
   "titleSlug": "minimize-xor",
   "topicTags": "['Greedy', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.35068688036278",
   "difficulty": "Hard",
   "frontendQuestionId": 2430,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Deletions on a String",
   "titleSlug": "maximum-deletions-on-a-string",
   "topicTags": "['String', 'Dynamic Programming', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.39522998296422",
   "difficulty": "Medium",
   "frontendQuestionId": 2431,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximize Total Tastiness of Purchased Fruits",
   "titleSlug": "maximize-total-tastiness-of-purchased-fruits",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.39646331589837",
   "difficulty": "Easy",
   "frontendQuestionId": 2432,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Employee That Worked on the Longest Task",
   "titleSlug": "the-employee-that-worked-on-the-longest-task",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.06687020627001",
   "difficulty": "Medium",
   "frontendQuestionId": 2433,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find The Original Array of Prefix Xor",
   "titleSlug": "find-the-original-array-of-prefix-xor",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.3985125387749",
   "difficulty": "Medium",
   "frontendQuestionId": 2434,
   "isFavor": false,
   "paidOnly": false,
   "title": "Using a Robot to Print the Lexicographically Smallest String",
   "titleSlug": "using-a-robot-to-print-the-lexicographically-smallest-string",
   "topicTags": "['Hash Table', 'String', 'Stack', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.8474252195612",
   "difficulty": "Hard",
   "frontendQuestionId": 2435,
   "isFavor": false,
   "paidOnly": false,
   "title": "Paths in Matrix Whose Sum Is Divisible by K",
   "titleSlug": "paths-in-matrix-whose-sum-is-divisible-by-k",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.97585189160182",
   "difficulty": "Medium",
   "frontendQuestionId": 2436,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Split Into Subarrays With GCD Greater Than One",
   "titleSlug": "minimum-split-into-subarrays-with-gcd-greater-than-one",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Greedy', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.29565850109144",
   "difficulty": "Easy",
   "frontendQuestionId": 2437,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Valid Clock Times",
   "titleSlug": "number-of-valid-clock-times",
   "topicTags": "['String', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.63282898169363",
   "difficulty": "Medium",
   "frontendQuestionId": 2438,
   "isFavor": false,
   "paidOnly": false,
   "title": "Range Product Queries of Powers",
   "titleSlug": "range-product-queries-of-powers",
   "topicTags": "['Array', 'Bit Manipulation', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.42037465883715",
   "difficulty": "Medium",
   "frontendQuestionId": 2439,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize Maximum of Array",
   "titleSlug": "minimize-maximum-of-array",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Greedy', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.14045214045214",
   "difficulty": "Hard",
   "frontendQuestionId": 2440,
   "isFavor": false,
   "paidOnly": false,
   "title": "Create Components With Same Value",
   "titleSlug": "create-components-with-same-value",
   "topicTags": "['Array', 'Math', 'Tree', 'Depth-First Search', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.70171462266325",
   "difficulty": "Easy",
   "frontendQuestionId": 2441,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Positive Integer That Exists With Its Negative",
   "titleSlug": "largest-positive-integer-that-exists-with-its-negative",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.96514807062523",
   "difficulty": "Medium",
   "frontendQuestionId": 2442,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Distinct Integers After Reverse Operations",
   "titleSlug": "count-number-of-distinct-integers-after-reverse-operations",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.003170322000614",
   "difficulty": "Medium",
   "frontendQuestionId": 2443,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Number and Its Reverse",
   "titleSlug": "sum-of-number-and-its-reverse",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.68264835120982",
   "difficulty": "Hard",
   "frontendQuestionId": 2444,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Subarrays With Fixed Bounds",
   "titleSlug": "count-subarrays-with-fixed-bounds",
   "topicTags": "['Array', 'Queue', 'Sliding Window', 'Monotonic Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.55075593952483",
   "difficulty": "Medium",
   "frontendQuestionId": 2445,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Nodes With Value One",
   "titleSlug": "number-of-nodes-with-value-one",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.13342941667298",
   "difficulty": "Easy",
   "frontendQuestionId": 2446,
   "isFavor": false,
   "paidOnly": false,
   "title": "Determine if Two Events Have Conflict",
   "titleSlug": "determine-if-two-events-have-conflict",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.82859562114431",
   "difficulty": "Medium",
   "frontendQuestionId": 2447,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Subarrays With GCD Equal to K",
   "titleSlug": "number-of-subarrays-with-gcd-equal-to-k",
   "topicTags": "['Array', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.18138502496274",
   "difficulty": "Hard",
   "frontendQuestionId": 2448,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Make Array Equal",
   "titleSlug": "minimum-cost-to-make-array-equal",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Sorting', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.218588215958576",
   "difficulty": "Hard",
   "frontendQuestionId": 2449,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Make Arrays Similar",
   "titleSlug": "minimum-number-of-operations-to-make-arrays-similar",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.438632832729155",
   "difficulty": "Medium",
   "frontendQuestionId": 2450,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Distinct Binary Strings After Applying Operations",
   "titleSlug": "number-of-distinct-binary-strings-after-applying-operations",
   "topicTags": "['Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.794795089336795",
   "difficulty": "Easy",
   "frontendQuestionId": 2451,
   "isFavor": false,
   "paidOnly": false,
   "title": "Odd String Difference",
   "titleSlug": "odd-string-difference",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.16447007793322",
   "difficulty": "Medium",
   "frontendQuestionId": 2452,
   "isFavor": false,
   "paidOnly": false,
   "title": "Words Within Two Edits of Dictionary",
   "titleSlug": "words-within-two-edits-of-dictionary",
   "topicTags": "['Array', 'String', 'Trie']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.335248851683204",
   "difficulty": "Medium",
   "frontendQuestionId": 2453,
   "isFavor": false,
   "paidOnly": false,
   "title": "Destroy Sequential Targets",
   "titleSlug": "destroy-sequential-targets",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.69014165777098",
   "difficulty": "Hard",
   "frontendQuestionId": 2454,
   "isFavor": false,
   "paidOnly": false,
   "title": "Next Greater Element IV",
   "titleSlug": "next-greater-element-iv",
   "topicTags": "['Array', 'Binary Search', 'Stack', 'Sorting', 'Heap (Priority Queue)', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.132513500328045",
   "difficulty": "Easy",
   "frontendQuestionId": 2455,
   "isFavor": false,
   "paidOnly": false,
   "title": "Average Value of Even Numbers That Are Divisible by Three",
   "titleSlug": "average-value-of-even-numbers-that-are-divisible-by-three",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.32216544290772",
   "difficulty": "Medium",
   "frontendQuestionId": 2456,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Popular Video Creator",
   "titleSlug": "most-popular-video-creator",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.844756963407974",
   "difficulty": "Medium",
   "frontendQuestionId": 2457,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Addition to Make Integer Beautiful",
   "titleSlug": "minimum-addition-to-make-integer-beautiful",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.92992243842699",
   "difficulty": "Hard",
   "frontendQuestionId": 2458,
   "isFavor": false,
   "paidOnly": false,
   "title": "Height of Binary Tree After Subtree Removal Queries",
   "titleSlug": "height-of-binary-tree-after-subtree-removal-queries",
   "topicTags": "['Array', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.53750910415149",
   "difficulty": "Hard",
   "frontendQuestionId": 2459,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sort Array by Moving Items to Empty Space",
   "titleSlug": "sort-array-by-moving-items-to-empty-space",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.87904880352946",
   "difficulty": "Easy",
   "frontendQuestionId": 2460,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Operations to an Array",
   "titleSlug": "apply-operations-to-an-array",
   "topicTags": "['Array', 'Two Pointers', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.67042009895155",
   "difficulty": "Medium",
   "frontendQuestionId": 2461,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum of Distinct Subarrays With Length K",
   "titleSlug": "maximum-sum-of-distinct-subarrays-with-length-k",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.940300047729",
   "difficulty": "Medium",
   "frontendQuestionId": 2462,
   "isFavor": false,
   "paidOnly": false,
   "title": "Total Cost to Hire K Workers",
   "titleSlug": "total-cost-to-hire-k-workers",
   "topicTags": "['Array', 'Two Pointers', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.060990605084015",
   "difficulty": "Hard",
   "frontendQuestionId": 2463,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Total Distance Traveled",
   "titleSlug": "minimum-total-distance-traveled",
   "topicTags": "['Array', 'Dynamic Programming', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.33320142461417",
   "difficulty": "Medium",
   "frontendQuestionId": 2464,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Subarrays in a Valid Split",
   "titleSlug": "minimum-subarrays-in-a-valid-split",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.3685433352613",
   "difficulty": "Easy",
   "frontendQuestionId": 2465,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Distinct Averages",
   "titleSlug": "number-of-distinct-averages",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.255696951760875",
   "difficulty": "Medium",
   "frontendQuestionId": 2466,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Ways To Build Good Strings",
   "titleSlug": "count-ways-to-build-good-strings",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.79835946142846",
   "difficulty": "Medium",
   "frontendQuestionId": 2467,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Profitable Path in a Tree",
   "titleSlug": "most-profitable-path-in-a-tree",
   "topicTags": "['Array', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.983138780804154",
   "difficulty": "Hard",
   "frontendQuestionId": 2468,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split Message Based on Limit",
   "titleSlug": "split-message-based-on-limit",
   "topicTags": "['String', 'Binary Search', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "90.0587890800973",
   "difficulty": "Easy",
   "frontendQuestionId": 2469,
   "isFavor": false,
   "paidOnly": false,
   "title": "Convert the Temperature",
   "titleSlug": "convert-the-temperature",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.59640468093938",
   "difficulty": "Medium",
   "frontendQuestionId": 2470,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Subarrays With LCM Equal to K",
   "titleSlug": "number-of-subarrays-with-lcm-equal-to-k",
   "topicTags": "['Array', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.28083844480659",
   "difficulty": "Medium",
   "frontendQuestionId": 2471,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Sort a Binary Tree by Level",
   "titleSlug": "minimum-number-of-operations-to-sort-a-binary-tree-by-level",
   "topicTags": "['Tree', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.266076208299786",
   "difficulty": "Hard",
   "frontendQuestionId": 2472,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Non-overlapping Palindrome Substrings",
   "titleSlug": "maximum-number-of-non-overlapping-palindrome-substrings",
   "topicTags": "['Two Pointers', 'String', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.17928365909316",
   "difficulty": "Medium",
   "frontendQuestionId": 2473,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Cost to Buy Apples",
   "titleSlug": "minimum-cost-to-buy-apples",
   "topicTags": "['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.937868237814676",
   "difficulty": "Hard",
   "frontendQuestionId": 2474,
   "isFavor": false,
   "paidOnly": true,
   "title": "Customers With Strictly Increasing Purchases",
   "titleSlug": "customers-with-strictly-increasing-purchases",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.05114301207226",
   "difficulty": "Easy",
   "frontendQuestionId": 2475,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Unequal Triplets in Array",
   "titleSlug": "number-of-unequal-triplets-in-array",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.18261103481474",
   "difficulty": "Medium",
   "frontendQuestionId": 2476,
   "isFavor": false,
   "paidOnly": false,
   "title": "Closest Nodes Queries in a Binary Search Tree",
   "titleSlug": "closest-nodes-queries-in-a-binary-search-tree",
   "topicTags": "['Array', 'Binary Search', 'Tree', 'Depth-First Search', 'Binary Search Tree', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.2115832530884",
   "difficulty": "Medium",
   "frontendQuestionId": 2477,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Fuel Cost to Report to the Capital",
   "titleSlug": "minimum-fuel-cost-to-report-to-the-capital",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.02928700726771",
   "difficulty": "Hard",
   "frontendQuestionId": 2478,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Beautiful Partitions",
   "titleSlug": "number-of-beautiful-partitions",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.44717444717445",
   "difficulty": "Hard",
   "frontendQuestionId": 2479,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum XOR of Two Non-Overlapping Subtrees",
   "titleSlug": "maximum-xor-of-two-non-overlapping-subtrees",
   "topicTags": "['Tree', 'Depth-First Search', 'Graph', 'Trie']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.52639873916469",
   "difficulty": "Easy",
   "frontendQuestionId": 2480,
   "isFavor": false,
   "paidOnly": true,
   "title": "Form a Chemical Bond",
   "titleSlug": "form-a-chemical-bond",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.89567825317712",
   "difficulty": "Easy",
   "frontendQuestionId": 2481,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cuts to Divide a Circle",
   "titleSlug": "minimum-cuts-to-divide-a-circle",
   "topicTags": "['Math', 'Geometry']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.2746449365545",
   "difficulty": "Medium",
   "frontendQuestionId": 2482,
   "isFavor": false,
   "paidOnly": false,
   "title": "Difference Between Ones and Zeros in Row and Column",
   "titleSlug": "difference-between-ones-and-zeros-in-row-and-column",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.55134805956928",
   "difficulty": "Medium",
   "frontendQuestionId": 2483,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Penalty for a Shop",
   "titleSlug": "minimum-penalty-for-a-shop",
   "topicTags": "['String', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": true
 },
 {
   "acRate": "38.875643457057706",
   "difficulty": "Hard",
   "frontendQuestionId": 2484,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Palindromic Subsequences",
   "titleSlug": "count-palindromic-subsequences",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.7113976440624",
   "difficulty": "Easy",
   "frontendQuestionId": 2485,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Pivot Integer",
   "titleSlug": "find-the-pivot-integer",
   "topicTags": "['Math', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.96515762028916",
   "difficulty": "Medium",
   "frontendQuestionId": 2486,
   "isFavor": false,
   "paidOnly": false,
   "title": "Append Characters to String to Make Subsequence",
   "titleSlug": "append-characters-to-string-to-make-subsequence",
   "topicTags": "['Two Pointers', 'String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.24928848426343",
   "difficulty": "Medium",
   "frontendQuestionId": 2487,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Nodes From Linked List",
   "titleSlug": "remove-nodes-from-linked-list",
   "topicTags": "['Linked List', 'Stack', 'Recursion', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.952618909777875",
   "difficulty": "Hard",
   "frontendQuestionId": 2488,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Subarrays With Median K",
   "titleSlug": "count-subarrays-with-median-k",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.4786150712831",
   "difficulty": "Medium",
   "frontendQuestionId": 2489,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Substrings With Fixed Ratio",
   "titleSlug": "number-of-substrings-with-fixed-ratio",
   "topicTags": "['Hash Table', 'Math', 'String', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.47665963861357",
   "difficulty": "Easy",
   "frontendQuestionId": 2490,
   "isFavor": false,
   "paidOnly": false,
   "title": "Circular Sentence",
   "titleSlug": "circular-sentence",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.94836151362826",
   "difficulty": "Medium",
   "frontendQuestionId": 2491,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divide Players Into Teams of Equal Skill",
   "titleSlug": "divide-players-into-teams-of-equal-skill",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.670753064798596",
   "difficulty": "Medium",
   "frontendQuestionId": 2492,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Score of a Path Between Two Cities",
   "titleSlug": "minimum-score-of-a-path-between-two-cities",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.51020543626166",
   "difficulty": "Hard",
   "frontendQuestionId": 2493,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divide Nodes Into the Maximum Number of Groups",
   "titleSlug": "divide-nodes-into-the-maximum-number-of-groups",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.49794063343275",
   "difficulty": "Hard",
   "frontendQuestionId": 2494,
   "isFavor": false,
   "paidOnly": true,
   "title": "Merge Overlapping Events in the Same Hall",
   "titleSlug": "merge-overlapping-events-in-the-same-hall",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.01973684210527",
   "difficulty": "Medium",
   "frontendQuestionId": 2495,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Subarrays Having Even Product",
   "titleSlug": "number-of-subarrays-having-even-product",
   "topicTags": "['Array', 'Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.23951141795007",
   "difficulty": "Easy",
   "frontendQuestionId": 2496,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Value of a String in an Array",
   "titleSlug": "maximum-value-of-a-string-in-an-array",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.592587857382576",
   "difficulty": "Medium",
   "frontendQuestionId": 2497,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Star Sum of a Graph",
   "titleSlug": "maximum-star-sum-of-a-graph",
   "topicTags": "['Array', 'Greedy', 'Graph', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.06612892169184",
   "difficulty": "Medium",
   "frontendQuestionId": 2498,
   "isFavor": false,
   "paidOnly": false,
   "title": "Frog Jump II",
   "titleSlug": "frog-jump-ii",
   "topicTags": "['Array', 'Binary Search', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.56277389098178",
   "difficulty": "Hard",
   "frontendQuestionId": 2499,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Total Cost to Make Arrays Unequal",
   "titleSlug": "minimum-total-cost-to-make-arrays-unequal",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.78284072249589",
   "difficulty": "Easy",
   "frontendQuestionId": 2500,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Greatest Value in Each Row",
   "titleSlug": "delete-greatest-value-in-each-row",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.05967059417961",
   "difficulty": "Medium",
   "frontendQuestionId": 2501,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Square Streak in an Array",
   "titleSlug": "longest-square-streak-in-an-array",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.047556719022694",
   "difficulty": "Medium",
   "frontendQuestionId": 2502,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Memory Allocator",
   "titleSlug": "design-memory-allocator",
   "topicTags": "['Array', 'Hash Table', 'Design', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.63159985154607",
   "difficulty": "Hard",
   "frontendQuestionId": 2503,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Points From Grid Queries",
   "titleSlug": "maximum-number-of-points-from-grid-queries",
   "topicTags": "['Array', 'Two Pointers', 'Breadth-First Search', 'Union Find', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.58421704999311",
   "difficulty": "Easy",
   "frontendQuestionId": 2504,
   "isFavor": false,
   "paidOnly": true,
   "title": "Concatenate the Name and the Profession",
   "titleSlug": "concatenate-the-name-and-the-profession",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.95105778339122",
   "difficulty": "Medium",
   "frontendQuestionId": 2505,
   "isFavor": false,
   "paidOnly": true,
   "title": "Bitwise OR of All Subsequence Sums",
   "titleSlug": "bitwise-or-of-all-subsequence-sums",
   "topicTags": "['Array', 'Math', 'Bit Manipulation', 'Brainteaser']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.16366423917209",
   "difficulty": "Easy",
   "frontendQuestionId": 2506,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Pairs Of Similar Strings",
   "titleSlug": "count-pairs-of-similar-strings",
   "topicTags": "['Array', 'Hash Table', 'String', 'Bit Manipulation', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.95712630359212",
   "difficulty": "Medium",
   "frontendQuestionId": 2507,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Value After Replacing With Sum of Prime Factors",
   "titleSlug": "smallest-value-after-replacing-with-sum-of-prime-factors",
   "topicTags": "['Math', 'Simulation', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.28501831944276",
   "difficulty": "Hard",
   "frontendQuestionId": 2508,
   "isFavor": false,
   "paidOnly": false,
   "title": "Add Edges to Make Degrees of All Nodes Even",
   "titleSlug": "add-edges-to-make-degrees-of-all-nodes-even",
   "topicTags": "['Hash Table', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.83301371883759",
   "difficulty": "Hard",
   "frontendQuestionId": 2509,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cycle Length Queries in a Tree",
   "titleSlug": "cycle-length-queries-in-a-tree",
   "topicTags": "['Array', 'Tree', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.238642540964506",
   "difficulty": "Medium",
   "frontendQuestionId": 2510,
   "isFavor": false,
   "paidOnly": true,
   "title": "Check if There is a Path With Equal Number of 0's And 1's",
   "titleSlug": "check-if-there-is-a-path-with-equal-number-of-0s-and-1s",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.778563145397314",
   "difficulty": "Easy",
   "frontendQuestionId": 2511,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Enemy Forts That Can Be Captured",
   "titleSlug": "maximum-enemy-forts-that-can-be-captured",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.72346554398405",
   "difficulty": "Medium",
   "frontendQuestionId": 2512,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reward Top K Students",
   "titleSlug": "reward-top-k-students",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.098415887165963",
   "difficulty": "Medium",
   "frontendQuestionId": 2513,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize the Maximum of Two Arrays",
   "titleSlug": "minimize-the-maximum-of-two-arrays",
   "topicTags": "['Math', 'Binary Search', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.79452685893301",
   "difficulty": "Hard",
   "frontendQuestionId": 2514,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Anagrams",
   "titleSlug": "count-anagrams",
   "topicTags": "['Hash Table', 'Math', 'String', 'Combinatorics', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.27901311503271",
   "difficulty": "Easy",
   "frontendQuestionId": 2515,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Distance to Target String in a Circular Array",
   "titleSlug": "shortest-distance-to-target-string-in-a-circular-array",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.71780206213409",
   "difficulty": "Medium",
   "frontendQuestionId": 2516,
   "isFavor": false,
   "paidOnly": false,
   "title": "Take K of Each Character From Left and Right",
   "titleSlug": "take-k-of-each-character-from-left-and-right",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.69556732645665",
   "difficulty": "Medium",
   "frontendQuestionId": 2517,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Tastiness of Candy Basket",
   "titleSlug": "maximum-tastiness-of-candy-basket",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.2358124166715",
   "difficulty": "Hard",
   "frontendQuestionId": 2518,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Great Partitions",
   "titleSlug": "number-of-great-partitions",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.098690364826936",
   "difficulty": "Hard",
   "frontendQuestionId": 2519,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count the Number of K-Big Indices",
   "titleSlug": "count-the-number-of-k-big-indices",
   "topicTags": "['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.59336830358836",
   "difficulty": "Easy",
   "frontendQuestionId": 2520,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Digits That Divide a Number",
   "titleSlug": "count-the-digits-that-divide-a-number",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.59529602595296",
   "difficulty": "Medium",
   "frontendQuestionId": 2521,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distinct Prime Factors of Product of Array",
   "titleSlug": "distinct-prime-factors-of-product-of-array",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.35590587869846",
   "difficulty": "Medium",
   "frontendQuestionId": 2522,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition String Into Substrings With Values at Most K",
   "titleSlug": "partition-string-into-substrings-with-values-at-most-k",
   "topicTags": "['String', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.543034693411826",
   "difficulty": "Medium",
   "frontendQuestionId": 2523,
   "isFavor": false,
   "paidOnly": false,
   "title": "Closest Prime Numbers in Range",
   "titleSlug": "closest-prime-numbers-in-range",
   "topicTags": "['Math', 'Number Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.418604651162795",
   "difficulty": "Hard",
   "frontendQuestionId": 2524,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Frequency Score of a Subarray",
   "titleSlug": "maximum-frequency-score-of-a-subarray",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Stack', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.14092065437394",
   "difficulty": "Easy",
   "frontendQuestionId": 2525,
   "isFavor": false,
   "paidOnly": false,
   "title": "Categorize Box According to Criteria",
   "titleSlug": "categorize-box-according-to-criteria",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.50967815828656",
   "difficulty": "Medium",
   "frontendQuestionId": 2526,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Consecutive Integers from a Data Stream",
   "titleSlug": "find-consecutive-integers-from-a-data-stream",
   "topicTags": "['Hash Table', 'Design', 'Queue', 'Counting', 'Data Stream']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.9540059347181",
   "difficulty": "Medium",
   "frontendQuestionId": 2527,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Xor-Beauty of Array",
   "titleSlug": "find-xor-beauty-of-array",
   "topicTags": "['Array', 'Math', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.89364230540701",
   "difficulty": "Hard",
   "frontendQuestionId": 2528,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize the Minimum Powered City",
   "titleSlug": "maximize-the-minimum-powered-city",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Queue', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.5483340439788",
   "difficulty": "Easy",
   "frontendQuestionId": 2529,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Count of Positive Integer and Negative Integer",
   "titleSlug": "maximum-count-of-positive-integer-and-negative-integer",
   "topicTags": "['Array', 'Binary Search', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.76075170777483",
   "difficulty": "Medium",
   "frontendQuestionId": 2530,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximal Score After Applying K Operations",
   "titleSlug": "maximal-score-after-applying-k-operations",
   "topicTags": "['Array', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.80338234929452",
   "difficulty": "Medium",
   "frontendQuestionId": 2531,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make Number of Distinct Characters Equal",
   "titleSlug": "make-number-of-distinct-characters-equal",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.40181058495822",
   "difficulty": "Hard",
   "frontendQuestionId": 2532,
   "isFavor": false,
   "paidOnly": false,
   "title": "Time to Cross a Bridge",
   "titleSlug": "time-to-cross-a-bridge",
   "topicTags": "['Array', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.36830119933201",
   "difficulty": "Medium",
   "frontendQuestionId": 2533,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Good Binary Strings",
   "titleSlug": "number-of-good-binary-strings",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.98798886164332",
   "difficulty": "Hard",
   "frontendQuestionId": 2534,
   "isFavor": false,
   "paidOnly": true,
   "title": "Time Taken to Cross the Door",
   "titleSlug": "time-taken-to-cross-the-door",
   "topicTags": "['Array', 'Queue', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.74970141429644",
   "difficulty": "Easy",
   "frontendQuestionId": 2535,
   "isFavor": false,
   "paidOnly": false,
   "title": "Difference Between Element Sum and Digit Sum of an Array",
   "titleSlug": "difference-between-element-sum-and-digit-sum-of-an-array",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.241150249104095",
   "difficulty": "Medium",
   "frontendQuestionId": 2536,
   "isFavor": false,
   "paidOnly": false,
   "title": "Increment Submatrices by One",
   "titleSlug": "increment-submatrices-by-one",
   "topicTags": "['Array', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.93385776208059",
   "difficulty": "Medium",
   "frontendQuestionId": 2537,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Good Subarrays",
   "titleSlug": "count-the-number-of-good-subarrays",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.59738192110384",
   "difficulty": "Hard",
   "frontendQuestionId": 2538,
   "isFavor": false,
   "paidOnly": false,
   "title": "Difference Between Maximum and Minimum Price Sum",
   "titleSlug": "difference-between-maximum-and-minimum-price-sum",
   "topicTags": "['Array', 'Dynamic Programming', 'Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.55490767735665",
   "difficulty": "Medium",
   "frontendQuestionId": 2539,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count the Number of Good Subsequences",
   "titleSlug": "count-the-number-of-good-subsequences",
   "topicTags": "['Hash Table', 'Math', 'String', 'Combinatorics', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.26082313491809",
   "difficulty": "Easy",
   "frontendQuestionId": 2540,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Common Value",
   "titleSlug": "minimum-common-value",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.204716327525595",
   "difficulty": "Medium",
   "frontendQuestionId": 2541,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make Array Equal II",
   "titleSlug": "minimum-operations-to-make-array-equal-ii",
   "topicTags": "['Array', 'Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.14420306506638",
   "difficulty": "Medium",
   "frontendQuestionId": 2542,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Subsequence Score",
   "titleSlug": "maximum-subsequence-score",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.14794791030041",
   "difficulty": "Hard",
   "frontendQuestionId": 2543,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Point Is Reachable",
   "titleSlug": "check-if-point-is-reachable",
   "topicTags": "['Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.35651927035275",
   "difficulty": "Easy",
   "frontendQuestionId": 2544,
   "isFavor": false,
   "paidOnly": false,
   "title": "Alternating Digit Sum",
   "titleSlug": "alternating-digit-sum",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.54666666666667",
   "difficulty": "Medium",
   "frontendQuestionId": 2545,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort the Students by Their Kth Score",
   "titleSlug": "sort-the-students-by-their-kth-score",
   "topicTags": "['Array', 'Sorting', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.51355905006419",
   "difficulty": "Medium",
   "frontendQuestionId": 2546,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Bitwise Operations to Make Strings Equal",
   "titleSlug": "apply-bitwise-operations-to-make-strings-equal",
   "topicTags": "['String', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.79308297461778",
   "difficulty": "Hard",
   "frontendQuestionId": 2547,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Split an Array",
   "titleSlug": "minimum-cost-to-split-an-array",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.46737481031867",
   "difficulty": "Medium",
   "frontendQuestionId": 2548,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Price to Fill a Bag",
   "titleSlug": "maximum-price-to-fill-a-bag",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.18857060080397",
   "difficulty": "Easy",
   "frontendQuestionId": 2549,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Distinct Numbers on Board",
   "titleSlug": "count-distinct-numbers-on-board",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.63473436119022",
   "difficulty": "Medium",
   "frontendQuestionId": 2550,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Collisions of Monkeys on a Polygon",
   "titleSlug": "count-collisions-of-monkeys-on-a-polygon",
   "topicTags": "['Math', 'Recursion']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.60851629463264",
   "difficulty": "Hard",
   "frontendQuestionId": 2551,
   "isFavor": false,
   "paidOnly": false,
   "title": "Put Marbles in Bags",
   "titleSlug": "put-marbles-in-bags",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.9321608040201",
   "difficulty": "Hard",
   "frontendQuestionId": 2552,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Increasing Quadruplets",
   "titleSlug": "count-increasing-quadruplets",
   "topicTags": "['Array', 'Dynamic Programming', 'Binary Indexed Tree', 'Enumeration', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.0933339433591",
   "difficulty": "Easy",
   "frontendQuestionId": 2553,
   "isFavor": false,
   "paidOnly": false,
   "title": "Separate the Digits in an Array",
   "titleSlug": "separate-the-digits-in-an-array",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.8537829797693",
   "difficulty": "Medium",
   "frontendQuestionId": 2554,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Integers to Choose From a Range I",
   "titleSlug": "maximum-number-of-integers-to-choose-from-a-range-i",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.79467258601554",
   "difficulty": "Medium",
   "frontendQuestionId": 2555,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Win From Two Segments",
   "titleSlug": "maximize-win-from-two-segments",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.2483378047358",
   "difficulty": "Medium",
   "frontendQuestionId": 2556,
   "isFavor": false,
   "paidOnly": false,
   "title": "Disconnect Path in a Binary Matrix by at Most One Flip",
   "titleSlug": "disconnect-path-in-a-binary-matrix-by-at-most-one-flip",
   "topicTags": "['Array', 'Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.37366548042705",
   "difficulty": "Medium",
   "frontendQuestionId": 2557,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Number of Integers to Choose From a Range II",
   "titleSlug": "maximum-number-of-integers-to-choose-from-a-range-ii",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.69860088396568",
   "difficulty": "Easy",
   "frontendQuestionId": 2558,
   "isFavor": false,
   "paidOnly": false,
   "title": "Take Gifts From the Richest Pile",
   "titleSlug": "take-gifts-from-the-richest-pile",
   "topicTags": "['Array', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.91048337071146",
   "difficulty": "Medium",
   "frontendQuestionId": 2559,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Vowel Strings in Ranges",
   "titleSlug": "count-vowel-strings-in-ranges",
   "topicTags": "['Array', 'String', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.17316630470135",
   "difficulty": "Medium",
   "frontendQuestionId": 2560,
   "isFavor": false,
   "paidOnly": false,
   "title": "House Robber IV",
   "titleSlug": "house-robber-iv",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.91360080897005",
   "difficulty": "Hard",
   "frontendQuestionId": 2561,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rearranging Fruits",
   "titleSlug": "rearranging-fruits",
   "topicTags": "['Array', 'Hash Table', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.74435853309741",
   "difficulty": "Easy",
   "frontendQuestionId": 2562,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Array Concatenation Value",
   "titleSlug": "find-the-array-concatenation-value",
   "topicTags": "['Array', 'Two Pointers', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.81354655214631",
   "difficulty": "Medium",
   "frontendQuestionId": 2563,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Fair Pairs",
   "titleSlug": "count-the-number-of-fair-pairs",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.273105002464845",
   "difficulty": "Medium",
   "frontendQuestionId": 2564,
   "isFavor": false,
   "paidOnly": false,
   "title": "Substring XOR Queries",
   "titleSlug": "substring-xor-queries",
   "topicTags": "['Array', 'Hash Table', 'String', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.46777096264737",
   "difficulty": "Hard",
   "frontendQuestionId": 2565,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subsequence With the Minimum Score",
   "titleSlug": "subsequence-with-the-minimum-score",
   "topicTags": "['Two Pointers', 'String', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.302850356294535",
   "difficulty": "Easy",
   "frontendQuestionId": 2566,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Difference by Remapping a Digit",
   "titleSlug": "maximum-difference-by-remapping-a-digit",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.661952474950645",
   "difficulty": "Medium",
   "frontendQuestionId": 2567,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Score by Changing Two Elements",
   "titleSlug": "minimum-score-by-changing-two-elements",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.55871001504546",
   "difficulty": "Medium",
   "frontendQuestionId": 2568,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Impossible OR",
   "titleSlug": "minimum-impossible-or",
   "topicTags": "['Array', 'Bit Manipulation', 'Brainteaser']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.03798367057153",
   "difficulty": "Hard",
   "frontendQuestionId": 2569,
   "isFavor": false,
   "paidOnly": false,
   "title": "Handling Sum Queries After Update",
   "titleSlug": "handling-sum-queries-after-update",
   "topicTags": "['Array', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.10280696306265",
   "difficulty": "Easy",
   "frontendQuestionId": 2570,
   "isFavor": false,
   "paidOnly": false,
   "title": "Merge Two 2D Arrays by Summing Values",
   "titleSlug": "merge-two-2d-arrays-by-summing-values",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.85597843949254",
   "difficulty": "Medium",
   "frontendQuestionId": 2571,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Reduce an Integer to 0",
   "titleSlug": "minimum-operations-to-reduce-an-integer-to-0",
   "topicTags": "['Dynamic Programming', 'Greedy', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.64745030065695",
   "difficulty": "Medium",
   "frontendQuestionId": 2572,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Square-Free Subsets",
   "titleSlug": "count-the-number-of-square-free-subsets",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.44857582347637",
   "difficulty": "Hard",
   "frontendQuestionId": 2573,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the String with LCP",
   "titleSlug": "find-the-string-with-lcp",
   "topicTags": "['Array', 'String', 'Dynamic Programming', 'Greedy', 'Union Find', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.32943469785575",
   "difficulty": "Easy",
   "frontendQuestionId": 2574,
   "isFavor": false,
   "paidOnly": false,
   "title": "Left and Right Sum Differences",
   "titleSlug": "left-and-right-sum-differences",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.277141354670405",
   "difficulty": "Medium",
   "frontendQuestionId": 2575,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Divisibility Array of a String",
   "titleSlug": "find-the-divisibility-array-of-a-string",
   "topicTags": "['Array', 'Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.645338587576475",
   "difficulty": "Medium",
   "frontendQuestionId": 2576,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Number of Marked Indices",
   "titleSlug": "find-the-maximum-number-of-marked-indices",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.02568756107777",
   "difficulty": "Hard",
   "frontendQuestionId": 2577,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Visit a Cell In a Grid",
   "titleSlug": "minimum-time-to-visit-a-cell-in-a-grid",
   "topicTags": "['Array', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.84995935431425",
   "difficulty": "Easy",
   "frontendQuestionId": 2578,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split With Minimum Sum",
   "titleSlug": "split-with-minimum-sum",
   "topicTags": "['Math', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.19868829917942",
   "difficulty": "Medium",
   "frontendQuestionId": 2579,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Total Number of Colored Cells",
   "titleSlug": "count-total-number-of-colored-cells",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.74126685302451",
   "difficulty": "Medium",
   "frontendQuestionId": 2580,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Ways to Group Overlapping Ranges",
   "titleSlug": "count-ways-to-group-overlapping-ranges",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.07059402287542",
   "difficulty": "Hard",
   "frontendQuestionId": 2581,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Possible Root Nodes",
   "titleSlug": "count-number-of-possible-root-nodes",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming', 'Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.565014292686335",
   "difficulty": "Easy",
   "frontendQuestionId": 2582,
   "isFavor": false,
   "paidOnly": false,
   "title": "Pass the Pillow",
   "titleSlug": "pass-the-pillow",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.30345844183596",
   "difficulty": "Medium",
   "frontendQuestionId": 2583,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Largest Sum in a Binary Tree",
   "titleSlug": "kth-largest-sum-in-a-binary-tree",
   "topicTags": "['Tree', 'Breadth-First Search', 'Sorting', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.221922731356692",
   "difficulty": "Hard",
   "frontendQuestionId": 2584,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split the Array to Make Coprime Products",
   "titleSlug": "split-the-array-to-make-coprime-products",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.33671517189403",
   "difficulty": "Hard",
   "frontendQuestionId": 2585,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Ways to Earn Points",
   "titleSlug": "number-of-ways-to-earn-points",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.36255174093012",
   "difficulty": "Easy",
   "frontendQuestionId": 2586,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Vowel Strings in Range",
   "titleSlug": "count-the-number-of-vowel-strings-in-range",
   "topicTags": "['Array', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.16527504911591",
   "difficulty": "Medium",
   "frontendQuestionId": 2587,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rearrange Array to Maximize Prefix Score",
   "titleSlug": "rearrange-array-to-maximize-prefix-score",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.38845023201575",
   "difficulty": "Medium",
   "frontendQuestionId": 2588,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Beautiful Subarrays",
   "titleSlug": "count-the-number-of-beautiful-subarrays",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.92520166985781",
   "difficulty": "Hard",
   "frontendQuestionId": 2589,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Complete All Tasks",
   "titleSlug": "minimum-time-to-complete-all-tasks",
   "topicTags": "['Array', 'Binary Search', 'Stack', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.713692946058096",
   "difficulty": "Medium",
   "frontendQuestionId": 2590,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design a Todo List",
   "titleSlug": "design-a-todo-list",
   "topicTags": "['Array', 'Hash Table', 'String', 'Design', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "19.33628430504616",
   "difficulty": "Easy",
   "frontendQuestionId": 2591,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distribute Money to Maximum Children",
   "titleSlug": "distribute-money-to-maximum-children",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.92293466033671",
   "difficulty": "Medium",
   "frontendQuestionId": 2592,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Greatness of an Array",
   "titleSlug": "maximize-greatness-of-an-array",
   "topicTags": "['Array', 'Two Pointers', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.68160169342035",
   "difficulty": "Medium",
   "frontendQuestionId": 2593,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Score of an Array After Marking All Elements",
   "titleSlug": "find-score-of-an-array-after-marking-all-elements",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.97331184638538",
   "difficulty": "Medium",
   "frontendQuestionId": 2594,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Repair Cars",
   "titleSlug": "minimum-time-to-repair-cars",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.29004000463077",
   "difficulty": "Easy",
   "frontendQuestionId": 2595,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Even and Odd Bits",
   "titleSlug": "number-of-even-and-odd-bits",
   "topicTags": "['Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.191384235312285",
   "difficulty": "Medium",
   "frontendQuestionId": 2596,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check Knight Tour Configuration",
   "titleSlug": "check-knight-tour-configuration",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Matrix', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.703521943528386",
   "difficulty": "Medium",
   "frontendQuestionId": 2597,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Number of Beautiful Subsets",
   "titleSlug": "the-number-of-beautiful-subsets",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Dynamic Programming', 'Backtracking', 'Sorting', 'Combinatorics']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.566499119849",
   "difficulty": "Medium",
   "frontendQuestionId": 2598,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Missing Non-negative Integer After Operations",
   "titleSlug": "smallest-missing-non-negative-integer-after-operations",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.63777763131879",
   "difficulty": "Medium",
   "frontendQuestionId": 2599,
   "isFavor": false,
   "paidOnly": true,
   "title": "Make the Prefix Sum Non-negative",
   "titleSlug": "make-the-prefix-sum-non-negative",
   "topicTags": "['Array', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.72339185546733",
   "difficulty": "Easy",
   "frontendQuestionId": 2600,
   "isFavor": false,
   "paidOnly": false,
   "title": "K Items With the Maximum Sum",
   "titleSlug": "k-items-with-the-maximum-sum",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.58840696194659",
   "difficulty": "Medium",
   "frontendQuestionId": 2601,
   "isFavor": false,
   "paidOnly": false,
   "title": "Prime Subtraction Operation",
   "titleSlug": "prime-subtraction-operation",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Greedy', 'Number Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.55100718665722",
   "difficulty": "Medium",
   "frontendQuestionId": 2602,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make All Array Elements Equal",
   "titleSlug": "minimum-operations-to-make-all-array-elements-equal",
   "topicTags": "['Array', 'Binary Search', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.51760604755004",
   "difficulty": "Hard",
   "frontendQuestionId": 2603,
   "isFavor": false,
   "paidOnly": false,
   "title": "Collect Coins in a Tree",
   "titleSlug": "collect-coins-in-a-tree",
   "topicTags": "['Array', 'Tree', 'Graph', 'Topological Sort']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.3146120894812",
   "difficulty": "Hard",
   "frontendQuestionId": 2604,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Time to Eat All Grains",
   "titleSlug": "minimum-time-to-eat-all-grains",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.13182488932612",
   "difficulty": "Easy",
   "frontendQuestionId": 2605,
   "isFavor": false,
   "paidOnly": false,
   "title": "Form Smallest Number From Two Digit Arrays",
   "titleSlug": "form-smallest-number-from-two-digit-arrays",
   "topicTags": "['Array', 'Hash Table', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.50598042769119",
   "difficulty": "Medium",
   "frontendQuestionId": 2606,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Substring With Maximum Cost",
   "titleSlug": "find-the-substring-with-maximum-cost",
   "topicTags": "['Array', 'Hash Table', 'String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.17978206405264",
   "difficulty": "Medium",
   "frontendQuestionId": 2607,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make K-Subarray Sums Equal",
   "titleSlug": "make-k-subarray-sums-equal",
   "topicTags": "['Array', 'Math', 'Greedy', 'Sorting', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.10931174089069",
   "difficulty": "Hard",
   "frontendQuestionId": 2608,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Cycle in a Graph",
   "titleSlug": "shortest-cycle-in-a-graph",
   "topicTags": "['Breadth-First Search', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.2443660235868",
   "difficulty": "Easy",
   "frontendQuestionId": 2609,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Longest Balanced Substring of a Binary String",
   "titleSlug": "find-the-longest-balanced-substring-of-a-binary-string",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.2853633538857",
   "difficulty": "Medium",
   "frontendQuestionId": 2610,
   "isFavor": false,
   "paidOnly": false,
   "title": "Convert an Array Into a 2D Array With Conditions",
   "titleSlug": "convert-an-array-into-a-2d-array-with-conditions",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.92416683885822",
   "difficulty": "Medium",
   "frontendQuestionId": 2611,
   "isFavor": false,
   "paidOnly": false,
   "title": "Mice and Cheese",
   "titleSlug": "mice-and-cheese",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "16.033790333748787",
   "difficulty": "Hard",
   "frontendQuestionId": 2612,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Reverse Operations",
   "titleSlug": "minimum-reverse-operations",
   "topicTags": "['Array', 'Breadth-First Search', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.198511166253105",
   "difficulty": "Hard",
   "frontendQuestionId": 2613,
   "isFavor": false,
   "paidOnly": true,
   "title": "Beautiful Pairs",
   "titleSlug": "beautiful-pairs",
   "topicTags": "['Array', 'Math', 'Divide and Conquer', 'Geometry', 'Sorting', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.83012661764519",
   "difficulty": "Easy",
   "frontendQuestionId": 2614,
   "isFavor": false,
   "paidOnly": false,
   "title": "Prime In Diagonal",
   "titleSlug": "prime-in-diagonal",
   "topicTags": "['Array', 'Math', 'Matrix', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.95825028847162",
   "difficulty": "Medium",
   "frontendQuestionId": 2615,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Distances",
   "titleSlug": "sum-of-distances",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.657460296127056",
   "difficulty": "Medium",
   "frontendQuestionId": 2616,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize the Maximum Difference of Pairs",
   "titleSlug": "minimize-the-maximum-difference-of-pairs",
   "topicTags": "['Array', 'Binary Search', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "22.514956541370356",
   "difficulty": "Hard",
   "frontendQuestionId": 2617,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Visited Cells in a Grid",
   "titleSlug": "minimum-number-of-visited-cells-in-a-grid",
   "topicTags": "['Array', 'Dynamic Programming', 'Stack', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.913440928621064",
   "difficulty": "Medium",
   "frontendQuestionId": 2618,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Object Instance of Class",
   "titleSlug": "check-if-object-instance-of-class",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.4455836875093",
   "difficulty": "Easy",
   "frontendQuestionId": 2619,
   "isFavor": false,
   "paidOnly": false,
   "title": "Array Prototype Last",
   "titleSlug": "array-prototype-last",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.12723230294772",
   "difficulty": "Easy",
   "frontendQuestionId": 2620,
   "isFavor": false,
   "paidOnly": false,
   "title": "Counter",
   "titleSlug": "counter",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.72812572769652",
   "difficulty": "Easy",
   "frontendQuestionId": 2621,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sleep",
   "titleSlug": "sleep",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.60473740878095",
   "difficulty": "Medium",
   "frontendQuestionId": 2622,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cache With Time Limit",
   "titleSlug": "cache-with-time-limit",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.213205267289354",
   "difficulty": "Medium",
   "frontendQuestionId": 2623,
   "isFavor": false,
   "paidOnly": false,
   "title": "Memoize",
   "titleSlug": "memoize",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.91703653123933",
   "difficulty": "Medium",
   "frontendQuestionId": 2624,
   "isFavor": false,
   "paidOnly": false,
   "title": "Snail Traversal",
   "titleSlug": "snail-traversal",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.12467052411606",
   "difficulty": "Medium",
   "frontendQuestionId": 2625,
   "isFavor": false,
   "paidOnly": false,
   "title": "Flatten Deeply Nested Array",
   "titleSlug": "flatten-deeply-nested-array",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.36254749894447",
   "difficulty": "Easy",
   "frontendQuestionId": 2626,
   "isFavor": false,
   "paidOnly": false,
   "title": "Array Reduce Transformation",
   "titleSlug": "array-reduce-transformation",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "91.74134713936559",
   "difficulty": "Medium",
   "frontendQuestionId": 2627,
   "isFavor": false,
   "paidOnly": false,
   "title": "Debounce",
   "titleSlug": "debounce",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.10267229254571",
   "difficulty": "Medium",
   "frontendQuestionId": 2628,
   "isFavor": false,
   "paidOnly": true,
   "title": "JSON Deep Equal",
   "titleSlug": "json-deep-equal",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.94400344428598",
   "difficulty": "Easy",
   "frontendQuestionId": 2629,
   "isFavor": false,
   "paidOnly": false,
   "title": "Function Composition",
   "titleSlug": "function-composition",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.219437482595374",
   "difficulty": "Hard",
   "frontendQuestionId": 2630,
   "isFavor": false,
   "paidOnly": false,
   "title": "Memoize II",
   "titleSlug": "memoize-ii",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.05302236777555",
   "difficulty": "Medium",
   "frontendQuestionId": 2631,
   "isFavor": false,
   "paidOnly": false,
   "title": "Group By",
   "titleSlug": "group-by",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.35506590200222",
   "difficulty": "Medium",
   "frontendQuestionId": 2632,
   "isFavor": false,
   "paidOnly": true,
   "title": "Curry",
   "titleSlug": "curry",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.82462057335582",
   "difficulty": "Medium",
   "frontendQuestionId": 2633,
   "isFavor": false,
   "paidOnly": true,
   "title": "Convert Object to JSON String",
   "titleSlug": "convert-object-to-json-string",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.40335518490858",
   "difficulty": "Easy",
   "frontendQuestionId": 2634,
   "isFavor": false,
   "paidOnly": false,
   "title": "Filter Elements from Array",
   "titleSlug": "filter-elements-from-array",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.04785712039744",
   "difficulty": "Easy",
   "frontendQuestionId": 2635,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Transform Over Each Element in Array",
   "titleSlug": "apply-transform-over-each-element-in-array",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.86896271815388",
   "difficulty": "Medium",
   "frontendQuestionId": 2636,
   "isFavor": false,
   "paidOnly": true,
   "title": "Promise Pool",
   "titleSlug": "promise-pool",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.61635274156482",
   "difficulty": "Medium",
   "frontendQuestionId": 2637,
   "isFavor": false,
   "paidOnly": false,
   "title": "Promise Time Limit",
   "titleSlug": "promise-time-limit",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.60571873176425",
   "difficulty": "Medium",
   "frontendQuestionId": 2638,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count the Number of K-Free Subsets",
   "titleSlug": "count-the-number-of-k-free-subsets",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Sorting', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.95406404712665",
   "difficulty": "Easy",
   "frontendQuestionId": 2639,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Width of Columns of a Grid",
   "titleSlug": "find-the-width-of-columns-of-a-grid",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.81242415048543",
   "difficulty": "Medium",
   "frontendQuestionId": 2640,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Score of All Prefixes of an Array",
   "titleSlug": "find-the-score-of-all-prefixes-of-an-array",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.37526330105194",
   "difficulty": "Medium",
   "frontendQuestionId": 2641,
   "isFavor": false,
   "paidOnly": false,
   "title": "Cousins in Binary Tree II",
   "titleSlug": "cousins-in-binary-tree-ii",
   "topicTags": "['Hash Table', 'Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.52109911678116",
   "difficulty": "Hard",
   "frontendQuestionId": 2642,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Graph With Shortest Path Calculator",
   "titleSlug": "design-graph-with-shortest-path-calculator",
   "topicTags": "['Graph', 'Design', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.73197431288781",
   "difficulty": "Easy",
   "frontendQuestionId": 2643,
   "isFavor": false,
   "paidOnly": false,
   "title": "Row With Maximum Ones",
   "titleSlug": "row-with-maximum-ones",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.1868444814892",
   "difficulty": "Easy",
   "frontendQuestionId": 2644,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Divisibility Score",
   "titleSlug": "find-the-maximum-divisibility-score",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.07019954594336",
   "difficulty": "Medium",
   "frontendQuestionId": 2645,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Additions to Make Valid String",
   "titleSlug": "minimum-additions-to-make-valid-string",
   "topicTags": "['String', 'Dynamic Programming', 'Stack', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.65339315759955",
   "difficulty": "Hard",
   "frontendQuestionId": 2646,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize the Total Price of the Trips",
   "titleSlug": "minimize-the-total-price-of-the-trips",
   "topicTags": "['Array', 'Dynamic Programming', 'Tree', 'Depth-First Search', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.165424739195224",
   "difficulty": "Hard",
   "frontendQuestionId": 2647,
   "isFavor": false,
   "paidOnly": true,
   "title": "Color the Triangle Red",
   "titleSlug": "color-the-triangle-red",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.57389251997095",
   "difficulty": "Easy",
   "frontendQuestionId": 2648,
   "isFavor": false,
   "paidOnly": false,
   "title": "Generate Fibonacci Sequence",
   "titleSlug": "generate-fibonacci-sequence",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.7041294167731",
   "difficulty": "Medium",
   "frontendQuestionId": 2649,
   "isFavor": false,
   "paidOnly": false,
   "title": "Nested Array Generator",
   "titleSlug": "nested-array-generator",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.393456811493856",
   "difficulty": "Hard",
   "frontendQuestionId": 2650,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Cancellable Function",
   "titleSlug": "design-cancellable-function",
   "topicTags": "[]",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.95660876720859",
   "difficulty": "Easy",
   "frontendQuestionId": 2651,
   "isFavor": false,
   "paidOnly": false,
   "title": "Calculate Delayed Arrival Time",
   "titleSlug": "calculate-delayed-arrival-time",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.01591150174269",
   "difficulty": "Easy",
   "frontendQuestionId": 2652,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum Multiples",
   "titleSlug": "sum-multiples",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.54392455189662",
   "difficulty": "Medium",
   "frontendQuestionId": 2653,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sliding Subarray Beauty",
   "titleSlug": "sliding-subarray-beauty",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.474313022700116",
   "difficulty": "Medium",
   "frontendQuestionId": 2654,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Make All Array Elements Equal to 1",
   "titleSlug": "minimum-number-of-operations-to-make-all-array-elements-equal-to-1",
   "topicTags": "['Array', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.53919583453862",
   "difficulty": "Medium",
   "frontendQuestionId": 2655,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Maximal Uncovered Ranges",
   "titleSlug": "find-maximal-uncovered-ranges",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.60801861464113",
   "difficulty": "Easy",
   "frontendQuestionId": 2656,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum With Exactly K Elements ",
   "titleSlug": "maximum-sum-with-exactly-k-elements",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.05921571497102",
   "difficulty": "Medium",
   "frontendQuestionId": 2657,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Prefix Common Array of Two Arrays",
   "titleSlug": "find-the-prefix-common-array-of-two-arrays",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.46514414436004",
   "difficulty": "Medium",
   "frontendQuestionId": 2658,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Fish in a Grid",
   "titleSlug": "maximum-number-of-fish-in-a-grid",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.246067985794014",
   "difficulty": "Hard",
   "frontendQuestionId": 2659,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make Array Empty",
   "titleSlug": "make-array-empty",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Binary Indexed Tree', 'Segment Tree', 'Sorting', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.33465800261354",
   "difficulty": "Easy",
   "frontendQuestionId": 2660,
   "isFavor": false,
   "paidOnly": false,
   "title": "Determine the Winner of a Bowling Game",
   "titleSlug": "determine-the-winner-of-a-bowling-game",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.962606308401405",
   "difficulty": "Medium",
   "frontendQuestionId": 2661,
   "isFavor": false,
   "paidOnly": false,
   "title": "First Completely Painted Row or Column",
   "titleSlug": "first-completely-painted-row-or-column",
   "topicTags": "['Array', 'Hash Table', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.91386217948718",
   "difficulty": "Medium",
   "frontendQuestionId": 2662,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost of a Path With Special Roads",
   "titleSlug": "minimum-cost-of-a-path-with-special-roads",
   "topicTags": "['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.90432224854972",
   "difficulty": "Hard",
   "frontendQuestionId": 2663,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lexicographically Smallest Beautiful String",
   "titleSlug": "lexicographically-smallest-beautiful-string",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.94738103799592",
   "difficulty": "Medium",
   "frontendQuestionId": 2664,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Knight’s Tour",
   "titleSlug": "the-knights-tour",
   "topicTags": "['Array', 'Backtracking', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.99159107462094",
   "difficulty": "Easy",
   "frontendQuestionId": 2665,
   "isFavor": false,
   "paidOnly": false,
   "title": "Counter II",
   "titleSlug": "counter-ii",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.5795677909627",
   "difficulty": "Easy",
   "frontendQuestionId": 2666,
   "isFavor": false,
   "paidOnly": false,
   "title": "Allow One Function Call",
   "titleSlug": "allow-one-function-call",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.04328420930604",
   "difficulty": "Easy",
   "frontendQuestionId": 2667,
   "isFavor": false,
   "paidOnly": false,
   "title": "Create Hello World Function",
   "titleSlug": "create-hello-world-function",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.58160492061222",
   "difficulty": "Easy",
   "frontendQuestionId": 2668,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Latest Salaries",
   "titleSlug": "find-latest-salaries",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.11764705882354",
   "difficulty": "Easy",
   "frontendQuestionId": 2669,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Artist Occurrences On Spotify Ranking List",
   "titleSlug": "count-artist-occurrences-on-spotify-ranking-list",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.83237851317651",
   "difficulty": "Easy",
   "frontendQuestionId": 2670,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Distinct Difference Array",
   "titleSlug": "find-the-distinct-difference-array",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.835102010771553",
   "difficulty": "Medium",
   "frontendQuestionId": 2671,
   "isFavor": false,
   "paidOnly": false,
   "title": "Frequency Tracker",
   "titleSlug": "frequency-tracker",
   "topicTags": "['Hash Table', 'Design']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.338302403407354",
   "difficulty": "Medium",
   "frontendQuestionId": 2672,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Adjacent Elements With the Same Color",
   "titleSlug": "number-of-adjacent-elements-with-the-same-color",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.131782508045845",
   "difficulty": "Medium",
   "frontendQuestionId": 2673,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make Costs of Paths Equal in a Binary Tree",
   "titleSlug": "make-costs-of-paths-equal-in-a-binary-tree",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy', 'Tree', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.18433773767322",
   "difficulty": "Medium",
   "frontendQuestionId": 2674,
   "isFavor": false,
   "paidOnly": true,
   "title": "Split a Circular Linked List",
   "titleSlug": "split-a-circular-linked-list",
   "topicTags": "['Linked List', 'Two Pointers']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.68194192377496",
   "difficulty": "Hard",
   "frontendQuestionId": 2675,
   "isFavor": false,
   "paidOnly": true,
   "title": "Array of Objects to Matrix",
   "titleSlug": "array-of-objects-to-matrix",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.21633694958518",
   "difficulty": "Medium",
   "frontendQuestionId": 2676,
   "isFavor": false,
   "paidOnly": true,
   "title": "Throttle",
   "titleSlug": "throttle",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.44079665246558",
   "difficulty": "Easy",
   "frontendQuestionId": 2677,
   "isFavor": false,
   "paidOnly": false,
   "title": "Chunk Array",
   "titleSlug": "chunk-array",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.31498941241881",
   "difficulty": "Easy",
   "frontendQuestionId": 2678,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Senior Citizens",
   "titleSlug": "number-of-senior-citizens",
   "topicTags": "['Array', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.79222315170046",
   "difficulty": "Medium",
   "frontendQuestionId": 2679,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum in a Matrix",
   "titleSlug": "sum-in-a-matrix",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)', 'Matrix', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.92960057427062",
   "difficulty": "Medium",
   "frontendQuestionId": 2680,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum OR",
   "titleSlug": "maximum-or",
   "topicTags": "['Array', 'Greedy', 'Bit Manipulation', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.34451010031606",
   "difficulty": "Hard",
   "frontendQuestionId": 2681,
   "isFavor": false,
   "paidOnly": false,
   "title": "Power of Heroes",
   "titleSlug": "power-of-heroes",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.662170292264335",
   "difficulty": "Easy",
   "frontendQuestionId": 2682,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Losers of the Circular Game",
   "titleSlug": "find-the-losers-of-the-circular-game",
   "topicTags": "['Array', 'Hash Table', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.73720046340522",
   "difficulty": "Medium",
   "frontendQuestionId": 2683,
   "isFavor": false,
   "paidOnly": false,
   "title": "Neighboring Bitwise XOR",
   "titleSlug": "neighboring-bitwise-xor",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.84655856120794",
   "difficulty": "Medium",
   "frontendQuestionId": 2684,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Moves in a Grid",
   "titleSlug": "maximum-number-of-moves-in-a-grid",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.69588649868719",
   "difficulty": "Medium",
   "frontendQuestionId": 2685,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Complete Components",
   "titleSlug": "count-the-number-of-complete-components",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.26178660049628",
   "difficulty": "Medium",
   "frontendQuestionId": 2686,
   "isFavor": false,
   "paidOnly": true,
   "title": "Immediate Food Delivery III",
   "titleSlug": "immediate-food-delivery-iii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.30094554939681",
   "difficulty": "Easy",
   "frontendQuestionId": 2687,
   "isFavor": false,
   "paidOnly": true,
   "title": "Bikes Last Time Used ",
   "titleSlug": "bikes-last-time-used",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.31840217180532",
   "difficulty": "Medium",
   "frontendQuestionId": 2688,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Active Users",
   "titleSlug": "find-active-users",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.98499134115836",
   "difficulty": "Easy",
   "frontendQuestionId": 2689,
   "isFavor": false,
   "paidOnly": true,
   "title": "Extract Kth Character From The Rope Tree",
   "titleSlug": "extract-kth-character-from-the-rope-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "92.97566371681415",
   "difficulty": "Easy",
   "frontendQuestionId": 2690,
   "isFavor": false,
   "paidOnly": true,
   "title": "Infinite Method Object",
   "titleSlug": "infinite-method-object",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.123882503192846",
   "difficulty": "Hard",
   "frontendQuestionId": 2691,
   "isFavor": false,
   "paidOnly": true,
   "title": "Immutability Helper",
   "titleSlug": "immutability-helper",
   "topicTags": "[]",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.91620111731844",
   "difficulty": "Medium",
   "frontendQuestionId": 2692,
   "isFavor": false,
   "paidOnly": true,
   "title": "Make Object Immutable",
   "titleSlug": "make-object-immutable",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.73728150273936",
   "difficulty": "Medium",
   "frontendQuestionId": 2693,
   "isFavor": false,
   "paidOnly": false,
   "title": "Call Function with Custom Context",
   "titleSlug": "call-function-with-custom-context",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.37728329458652",
   "difficulty": "Medium",
   "frontendQuestionId": 2694,
   "isFavor": false,
   "paidOnly": false,
   "title": "Event Emitter",
   "titleSlug": "event-emitter",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.10368232420946",
   "difficulty": "Easy",
   "frontendQuestionId": 2695,
   "isFavor": false,
   "paidOnly": false,
   "title": "Array Wrapper",
   "titleSlug": "array-wrapper",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.05769617004184",
   "difficulty": "Easy",
   "frontendQuestionId": 2696,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum String Length After Removing Substrings",
   "titleSlug": "minimum-string-length-after-removing-substrings",
   "topicTags": "['String', 'Stack', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.92322030253065",
   "difficulty": "Easy",
   "frontendQuestionId": 2697,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lexicographically Smallest Palindrome",
   "titleSlug": "lexicographically-smallest-palindrome",
   "topicTags": "['Two Pointers', 'String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.84400915563428",
   "difficulty": "Medium",
   "frontendQuestionId": 2698,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Punishment Number of an Integer",
   "titleSlug": "find-the-punishment-number-of-an-integer",
   "topicTags": "['Math', 'Backtracking']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.16028963479717",
   "difficulty": "Hard",
   "frontendQuestionId": 2699,
   "isFavor": false,
   "paidOnly": false,
   "title": "Modify Graph Edge Weights",
   "titleSlug": "modify-graph-edge-weights",
   "topicTags": "['Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.20220950877885",
   "difficulty": "Medium",
   "frontendQuestionId": 2700,
   "isFavor": false,
   "paidOnly": true,
   "title": "Differences Between Two Objects",
   "titleSlug": "differences-between-two-objects",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.949210483477124",
   "difficulty": "Hard",
   "frontendQuestionId": 2701,
   "isFavor": false,
   "paidOnly": true,
   "title": "Consecutive Transactions with Increasing Amounts",
   "titleSlug": "consecutive-transactions-with-increasing-amounts",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.53986332574032",
   "difficulty": "Hard",
   "frontendQuestionId": 2702,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Operations to Make Numbers Non-positive",
   "titleSlug": "minimum-operations-to-make-numbers-non-positive",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "94.45842310042124",
   "difficulty": "Easy",
   "frontendQuestionId": 2703,
   "isFavor": false,
   "paidOnly": false,
   "title": "Return Length of Arguments Passed",
   "titleSlug": "return-length-of-arguments-passed",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.84171523599419",
   "difficulty": "Easy",
   "frontendQuestionId": 2704,
   "isFavor": false,
   "paidOnly": false,
   "title": "To Be Or Not To Be",
   "titleSlug": "to-be-or-not-to-be",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.6823008517504",
   "difficulty": "Medium",
   "frontendQuestionId": 2705,
   "isFavor": false,
   "paidOnly": false,
   "title": "Compact Object",
   "titleSlug": "compact-object",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.25067939375093",
   "difficulty": "Easy",
   "frontendQuestionId": 2706,
   "isFavor": false,
   "paidOnly": false,
   "title": "Buy Two Chocolates",
   "titleSlug": "buy-two-chocolates",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.98979498471992",
   "difficulty": "Medium",
   "frontendQuestionId": 2707,
   "isFavor": false,
   "paidOnly": false,
   "title": "Extra Characters in a String",
   "titleSlug": "extra-characters-in-a-string",
   "topicTags": "['Array', 'Hash Table', 'String', 'Dynamic Programming', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.56979826571416",
   "difficulty": "Medium",
   "frontendQuestionId": 2708,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Strength of a Group",
   "titleSlug": "maximum-strength-of-a-group",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Greedy', 'Bit Manipulation', 'Sorting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.798996534423004",
   "difficulty": "Hard",
   "frontendQuestionId": 2709,
   "isFavor": false,
   "paidOnly": false,
   "title": "Greatest Common Divisor Traversal",
   "titleSlug": "greatest-common-divisor-traversal",
   "topicTags": "['Array', 'Math', 'Union Find', 'Number Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.46570361441022",
   "difficulty": "Easy",
   "frontendQuestionId": 2710,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Trailing Zeros From a String",
   "titleSlug": "remove-trailing-zeros-from-a-string",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.59830069952407",
   "difficulty": "Medium",
   "frontendQuestionId": 2711,
   "isFavor": false,
   "paidOnly": false,
   "title": "Difference of Number of Distinct Values on Diagonals",
   "titleSlug": "difference-of-number-of-distinct-values-on-diagonals",
   "topicTags": "['Array', 'Hash Table', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.04496300512237",
   "difficulty": "Medium",
   "frontendQuestionId": 2712,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Make All Characters Equal",
   "titleSlug": "minimum-cost-to-make-all-characters-equal",
   "topicTags": "['String', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.44890123355935",
   "difficulty": "Hard",
   "frontendQuestionId": 2713,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Strictly Increasing Cells in a Matrix",
   "titleSlug": "maximum-strictly-increasing-cells-in-a-matrix",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Memoization', 'Sorting', 'Matrix', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.82692307692308",
   "difficulty": "Hard",
   "frontendQuestionId": 2714,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Shortest Path with K Hops",
   "titleSlug": "find-shortest-path-with-k-hops",
   "topicTags": "['Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.51202001019037",
   "difficulty": "Easy",
   "frontendQuestionId": 2715,
   "isFavor": false,
   "paidOnly": false,
   "title": "Timeout Cancellation",
   "titleSlug": "timeout-cancellation",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.8125151644695",
   "difficulty": "Easy",
   "frontendQuestionId": 2716,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize String Length",
   "titleSlug": "minimize-string-length",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.07187766121288",
   "difficulty": "Easy",
   "frontendQuestionId": 2717,
   "isFavor": false,
   "paidOnly": false,
   "title": "Semi-Ordered Permutation",
   "titleSlug": "semi-ordered-permutation",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.01637996024947",
   "difficulty": "Medium",
   "frontendQuestionId": 2718,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Matrix After Queries",
   "titleSlug": "sum-of-matrix-after-queries",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.412421640415104",
   "difficulty": "Hard",
   "frontendQuestionId": 2719,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count of Integers",
   "titleSlug": "count-of-integers",
   "topicTags": "['Math', 'String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.8006509357201",
   "difficulty": "Hard",
   "frontendQuestionId": 2720,
   "isFavor": false,
   "paidOnly": true,
   "title": "Popularity Percentage",
   "titleSlug": "popularity-percentage",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.28472824652057",
   "difficulty": "Medium",
   "frontendQuestionId": 2721,
   "isFavor": false,
   "paidOnly": false,
   "title": "Execute Asynchronous Functions in Parallel",
   "titleSlug": "execute-asynchronous-functions-in-parallel",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.918991855814184",
   "difficulty": "Medium",
   "frontendQuestionId": 2722,
   "isFavor": false,
   "paidOnly": false,
   "title": "Join Two Arrays by ID",
   "titleSlug": "join-two-arrays-by-id",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "91.75199816143612",
   "difficulty": "Easy",
   "frontendQuestionId": 2723,
   "isFavor": false,
   "paidOnly": false,
   "title": "Add Two Promises",
   "titleSlug": "add-two-promises",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.07704924754992",
   "difficulty": "Easy",
   "frontendQuestionId": 2724,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort By",
   "titleSlug": "sort-by",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.61464486337863",
   "difficulty": "Easy",
   "frontendQuestionId": 2725,
   "isFavor": false,
   "paidOnly": false,
   "title": "Interval Cancellation",
   "titleSlug": "interval-cancellation",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.21638422260045",
   "difficulty": "Easy",
   "frontendQuestionId": 2726,
   "isFavor": false,
   "paidOnly": false,
   "title": "Calculator with Method Chaining",
   "titleSlug": "calculator-with-method-chaining",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.30203596165956",
   "difficulty": "Easy",
   "frontendQuestionId": 2727,
   "isFavor": false,
   "paidOnly": false,
   "title": "Is Object Empty",
   "titleSlug": "is-object-empty",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.3697238971755",
   "difficulty": "Easy",
   "frontendQuestionId": 2728,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Houses in a Circular Street",
   "titleSlug": "count-houses-in-a-circular-street",
   "topicTags": "['Array', 'Interactive']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.1670316543898",
   "difficulty": "Easy",
   "frontendQuestionId": 2729,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if The Number is Fascinating",
   "titleSlug": "check-if-the-number-is-fascinating",
   "topicTags": "['Hash Table', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.71258034894399",
   "difficulty": "Medium",
   "frontendQuestionId": 2730,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Longest Semi-Repetitive Substring",
   "titleSlug": "find-the-longest-semi-repetitive-substring",
   "topicTags": "['String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.93099625151787",
   "difficulty": "Medium",
   "frontendQuestionId": 2731,
   "isFavor": false,
   "paidOnly": false,
   "title": "Movement of Robots",
   "titleSlug": "movement-of-robots",
   "topicTags": "['Array', 'Brainteaser', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.758712487899324",
   "difficulty": "Hard",
   "frontendQuestionId": 2732,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find a Good Subset of the Matrix",
   "titleSlug": "find-a-good-subset-of-the-matrix",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.8410569242695",
   "difficulty": "Easy",
   "frontendQuestionId": 2733,
   "isFavor": false,
   "paidOnly": false,
   "title": "Neither Minimum nor Maximum",
   "titleSlug": "neither-minimum-nor-maximum",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.884704807772152",
   "difficulty": "Medium",
   "frontendQuestionId": 2734,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lexicographically Smallest String After Substring Operation",
   "titleSlug": "lexicographically-smallest-string-after-substring-operation",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.427320620316095",
   "difficulty": "Medium",
   "frontendQuestionId": 2735,
   "isFavor": false,
   "paidOnly": false,
   "title": "Collecting Chocolates",
   "titleSlug": "collecting-chocolates",
   "topicTags": "['Array', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.61447956380929",
   "difficulty": "Hard",
   "frontendQuestionId": 2736,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum Queries",
   "titleSlug": "maximum-sum-queries",
   "topicTags": "['Array', 'Binary Search', 'Stack', 'Binary Indexed Tree', 'Segment Tree', 'Sorting', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.65002447381302",
   "difficulty": "Medium",
   "frontendQuestionId": 2737,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Closest Marked Node",
   "titleSlug": "find-the-closest-marked-node",
   "topicTags": "['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.47136323298518",
   "difficulty": "Medium",
   "frontendQuestionId": 2738,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Occurrences in Text",
   "titleSlug": "count-occurrences-in-text",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.84446977623011",
   "difficulty": "Easy",
   "frontendQuestionId": 2739,
   "isFavor": false,
   "paidOnly": false,
   "title": "Total Distance Traveled",
   "titleSlug": "total-distance-traveled",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.11903490795116",
   "difficulty": "Medium",
   "frontendQuestionId": 2740,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Value of the Partition",
   "titleSlug": "find-the-value-of-the-partition",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.265023662827037",
   "difficulty": "Medium",
   "frontendQuestionId": 2741,
   "isFavor": false,
   "paidOnly": false,
   "title": "Special Permutations",
   "titleSlug": "special-permutations",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.77738584303013",
   "difficulty": "Hard",
   "frontendQuestionId": 2742,
   "isFavor": false,
   "paidOnly": false,
   "title": "Painting the Walls",
   "titleSlug": "painting-the-walls",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.9417233777437",
   "difficulty": "Medium",
   "frontendQuestionId": 2743,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Substrings Without Repeating Character",
   "titleSlug": "count-substrings-without-repeating-character",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.33326237737924",
   "difficulty": "Easy",
   "frontendQuestionId": 2744,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Maximum Number of String Pairs",
   "titleSlug": "find-maximum-number-of-string-pairs",
   "topicTags": "['Array', 'Hash Table', 'String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.56417359187442",
   "difficulty": "Medium",
   "frontendQuestionId": 2745,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct the Longest New String",
   "titleSlug": "construct-the-longest-new-string",
   "topicTags": "['Math', 'Dynamic Programming', 'Greedy', 'Brainteaser']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.949918345127927",
   "difficulty": "Medium",
   "frontendQuestionId": 2746,
   "isFavor": false,
   "paidOnly": false,
   "title": "Decremental String Concatenation",
   "titleSlug": "decremental-string-concatenation",
   "topicTags": "['Array', 'String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.60192966075319",
   "difficulty": "Medium",
   "frontendQuestionId": 2747,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Zero Request Servers",
   "titleSlug": "count-zero-request-servers",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.52757465150175",
   "difficulty": "Easy",
   "frontendQuestionId": 2748,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Beautiful Pairs",
   "titleSlug": "number-of-beautiful-pairs",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Counting', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.945754455883982",
   "difficulty": "Medium",
   "frontendQuestionId": 2749,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make the Integer Zero",
   "titleSlug": "minimum-operations-to-make-the-integer-zero",
   "topicTags": "['Bit Manipulation', 'Brainteaser', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.621843117578194",
   "difficulty": "Medium",
   "frontendQuestionId": 2750,
   "isFavor": false,
   "paidOnly": false,
   "title": "Ways to Split Array Into Good Subarrays",
   "titleSlug": "ways-to-split-array-into-good-subarrays",
   "topicTags": "['Array', 'Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.08739499138073",
   "difficulty": "Hard",
   "frontendQuestionId": 2751,
   "isFavor": false,
   "paidOnly": false,
   "title": "Robot Collisions",
   "titleSlug": "robot-collisions",
   "topicTags": "['Array', 'Stack', 'Sorting', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.76691995052129",
   "difficulty": "Hard",
   "frontendQuestionId": 2752,
   "isFavor": false,
   "paidOnly": true,
   "title": "Customers with Maximum Number of Transactions on Consecutive Days",
   "titleSlug": "customers-with-maximum-number-of-transactions-on-consecutive-days",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.14890400604687",
   "difficulty": "Hard",
   "frontendQuestionId": 2753,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Houses in a Circular Street II",
   "titleSlug": "count-houses-in-a-circular-street-ii",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.70634920634922",
   "difficulty": "Medium",
   "frontendQuestionId": 2754,
   "isFavor": false,
   "paidOnly": true,
   "title": "Bind Function to Context",
   "titleSlug": "bind-function-to-context",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.96330275229357",
   "difficulty": "Medium",
   "frontendQuestionId": 2755,
   "isFavor": false,
   "paidOnly": true,
   "title": "Deep Merge of Two Objects",
   "titleSlug": "deep-merge-of-two-objects",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.25954198473283",
   "difficulty": "Hard",
   "frontendQuestionId": 2756,
   "isFavor": false,
   "paidOnly": true,
   "title": "Query Batching",
   "titleSlug": "query-batching",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.31536388140162",
   "difficulty": "Medium",
   "frontendQuestionId": 2757,
   "isFavor": false,
   "paidOnly": true,
   "title": "Generate Circular Array Values",
   "titleSlug": "generate-circular-array-values",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.94337108594272",
   "difficulty": "Easy",
   "frontendQuestionId": 2758,
   "isFavor": false,
   "paidOnly": true,
   "title": "Next Day",
   "titleSlug": "next-day",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.87793427230047",
   "difficulty": "Hard",
   "frontendQuestionId": 2759,
   "isFavor": false,
   "paidOnly": true,
   "title": "Convert JSON String to Object",
   "titleSlug": "convert-json-string-to-object",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.965043607217257",
   "difficulty": "Easy",
   "frontendQuestionId": 2760,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Even Odd Subarray With Threshold",
   "titleSlug": "longest-even-odd-subarray-with-threshold",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.17194664443518",
   "difficulty": "Medium",
   "frontendQuestionId": 2761,
   "isFavor": false,
   "paidOnly": false,
   "title": "Prime Pairs With Target Sum",
   "titleSlug": "prime-pairs-with-target-sum",
   "topicTags": "['Array', 'Math', 'Enumeration', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.04853782087972",
   "difficulty": "Medium",
   "frontendQuestionId": 2762,
   "isFavor": false,
   "paidOnly": false,
   "title": "Continuous Subarrays",
   "titleSlug": "continuous-subarrays",
   "topicTags": "['Array', 'Queue', 'Sliding Window', 'Heap (Priority Queue)', 'Ordered Set', 'Monotonic Queue']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.86771547796057",
   "difficulty": "Hard",
   "frontendQuestionId": 2763,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Imbalance Numbers of All Subarrays",
   "titleSlug": "sum-of-imbalance-numbers-of-all-subarrays",
   "topicTags": "['Array', 'Hash Table', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.96601073345259",
   "difficulty": "Medium",
   "frontendQuestionId": 2764,
   "isFavor": false,
   "paidOnly": true,
   "title": "Is Array a Preorder of Some ‌Binary Tree",
   "titleSlug": "is-array-a-preorder-of-some-binary-tree",
   "topicTags": "['Stack', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.25206715108995",
   "difficulty": "Easy",
   "frontendQuestionId": 2765,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Alternating Subarray",
   "titleSlug": "longest-alternating-subarray",
   "topicTags": "['Array', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.9402734150334",
   "difficulty": "Medium",
   "frontendQuestionId": 2766,
   "isFavor": false,
   "paidOnly": false,
   "title": "Relocate Marbles",
   "titleSlug": "relocate-marbles",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.23613595706619",
   "difficulty": "Medium",
   "frontendQuestionId": 2767,
   "isFavor": false,
   "paidOnly": false,
   "title": "Partition String Into Minimum Beautiful Substrings",
   "titleSlug": "partition-string-into-minimum-beautiful-substrings",
   "topicTags": "['Hash Table', 'String', 'Dynamic Programming', 'Backtracking']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.302785018521064",
   "difficulty": "Medium",
   "frontendQuestionId": 2768,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Black Blocks",
   "titleSlug": "number-of-black-blocks",
   "topicTags": "['Array', 'Hash Table', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "90.76835556416277",
   "difficulty": "Easy",
   "frontendQuestionId": 2769,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Achievable Number",
   "titleSlug": "find-the-maximum-achievable-number",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.97866975741678",
   "difficulty": "Medium",
   "frontendQuestionId": 2770,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Jumps to Reach the Last Index",
   "titleSlug": "maximum-number-of-jumps-to-reach-the-last-index",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.64915838572298",
   "difficulty": "Medium",
   "frontendQuestionId": 2771,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Non-decreasing Subarray From Two Arrays",
   "titleSlug": "longest-non-decreasing-subarray-from-two-arrays",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.35089347876537",
   "difficulty": "Medium",
   "frontendQuestionId": 2772,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Operations to Make All Array Elements Equal to Zero",
   "titleSlug": "apply-operations-to-make-all-array-elements-equal-to-zero",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.40286831812256",
   "difficulty": "Medium",
   "frontendQuestionId": 2773,
   "isFavor": false,
   "paidOnly": true,
   "title": "Height of Special Binary Tree",
   "titleSlug": "height-of-special-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.66129032258065",
   "difficulty": "Easy",
   "frontendQuestionId": 2774,
   "isFavor": false,
   "paidOnly": true,
   "title": "Array Upper Bound",
   "titleSlug": "array-upper-bound",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.47704770477048",
   "difficulty": "Medium",
   "frontendQuestionId": 2775,
   "isFavor": false,
   "paidOnly": true,
   "title": "Undefined to Null",
   "titleSlug": "undefined-to-null",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "92.33543733092876",
   "difficulty": "Medium",
   "frontendQuestionId": 2776,
   "isFavor": false,
   "paidOnly": true,
   "title": "Convert Callback Based Function to Promise Based Function",
   "titleSlug": "convert-callback-based-function-to-promise-based-function",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.05521472392638",
   "difficulty": "Medium",
   "frontendQuestionId": 2777,
   "isFavor": false,
   "paidOnly": true,
   "title": "Date Range Generator",
   "titleSlug": "date-range-generator",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.92827330344721",
   "difficulty": "Easy",
   "frontendQuestionId": 2778,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Squares of Special Elements ",
   "titleSlug": "sum-of-squares-of-special-elements",
   "topicTags": "['Array', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.0016800448012",
   "difficulty": "Medium",
   "frontendQuestionId": 2779,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Beauty of an Array After Applying Operation",
   "titleSlug": "maximum-beauty-of-an-array-after-applying-operation",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.84845018249169",
   "difficulty": "Medium",
   "frontendQuestionId": 2780,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Index of a Valid Split",
   "titleSlug": "minimum-index-of-a-valid-split",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.57210559046169",
   "difficulty": "Hard",
   "frontendQuestionId": 2781,
   "isFavor": false,
   "paidOnly": false,
   "title": "Length of the Longest Valid Substring",
   "titleSlug": "length-of-the-longest-valid-substring",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.86224337994645",
   "difficulty": "Medium",
   "frontendQuestionId": 2782,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Unique Categories",
   "titleSlug": "number-of-unique-categories",
   "topicTags": "['Union Find', 'Interactive', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.23680691286905",
   "difficulty": "Medium",
   "frontendQuestionId": 2783,
   "isFavor": false,
   "paidOnly": true,
   "title": "Flight Occupancy and Waitlist Analysis",
   "titleSlug": "flight-occupancy-and-waitlist-analysis",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.29933125958824",
   "difficulty": "Easy",
   "frontendQuestionId": 2784,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Array is Good",
   "titleSlug": "check-if-array-is-good",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.93444560866178",
   "difficulty": "Medium",
   "frontendQuestionId": 2785,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort Vowels in a String",
   "titleSlug": "sort-vowels-in-a-string",
   "topicTags": "['String', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.299336069128884",
   "difficulty": "Medium",
   "frontendQuestionId": 2786,
   "isFavor": false,
   "paidOnly": false,
   "title": "Visit Array Positions to Maximize Score",
   "titleSlug": "visit-array-positions-to-maximize-score",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.434896810506565",
   "difficulty": "Medium",
   "frontendQuestionId": 2787,
   "isFavor": false,
   "paidOnly": false,
   "title": "Ways to Express an Integer as Sum of Powers",
   "titleSlug": "ways-to-express-an-integer-as-sum-of-powers",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.52328258779872",
   "difficulty": "Easy",
   "frontendQuestionId": 2788,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split Strings by Separator",
   "titleSlug": "split-strings-by-separator",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.41818181818182",
   "difficulty": "Medium",
   "frontendQuestionId": 2789,
   "isFavor": false,
   "paidOnly": false,
   "title": "Largest Element in an Array after Merge Operations",
   "titleSlug": "largest-element-in-an-array-after-merge-operations",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "21.624684678097466",
   "difficulty": "Hard",
   "frontendQuestionId": 2790,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Groups With Increasing Length",
   "titleSlug": "maximum-number-of-groups-with-increasing-length",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.1500505788468",
   "difficulty": "Hard",
   "frontendQuestionId": 2791,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Paths That Can Form a Palindrome in a Tree",
   "titleSlug": "count-paths-that-can-form-a-palindrome-in-a-tree",
   "topicTags": "['Dynamic Programming', 'Bit Manipulation', 'Tree', 'Depth-First Search', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.63239875389408",
   "difficulty": "Hard",
   "frontendQuestionId": 2792,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Nodes That Are Great Enough",
   "titleSlug": "count-nodes-that-are-great-enough",
   "topicTags": "['Divide and Conquer', 'Tree', 'Depth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.61482381530985",
   "difficulty": "Hard",
   "frontendQuestionId": 2793,
   "isFavor": false,
   "paidOnly": true,
   "title": "Status of Flight Tickets",
   "titleSlug": "status-of-flight-tickets",
   "topicTags": "[]",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.08538899430741",
   "difficulty": "Easy",
   "frontendQuestionId": 2794,
   "isFavor": false,
   "paidOnly": true,
   "title": "Create Object from Two Arrays",
   "titleSlug": "create-object-from-two-arrays",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.7914379802415",
   "difficulty": "Medium",
   "frontendQuestionId": 2795,
   "isFavor": false,
   "paidOnly": true,
   "title": "Parallel Execution of Promises for Individual Results Retrieval",
   "titleSlug": "parallel-execution-of-promises-for-individual-results-retrieval",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "93.19667260843731",
   "difficulty": "Easy",
   "frontendQuestionId": 2796,
   "isFavor": false,
   "paidOnly": true,
   "title": "Repeat String",
   "titleSlug": "repeat-string",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.4342194955692",
   "difficulty": "Easy",
   "frontendQuestionId": 2797,
   "isFavor": false,
   "paidOnly": true,
   "title": "Partial Function with Placeholders",
   "titleSlug": "partial-function-with-placeholders",
   "topicTags": "[]",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.57153487712833",
   "difficulty": "Easy",
   "frontendQuestionId": 2798,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Employees Who Met the Target",
   "titleSlug": "number-of-employees-who-met-the-target",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.51630368575644",
   "difficulty": "Medium",
   "frontendQuestionId": 2799,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Complete Subarrays in an Array",
   "titleSlug": "count-complete-subarrays-in-an-array",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.516645125231424",
   "difficulty": "Medium",
   "frontendQuestionId": 2800,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest String That Contains Three Strings",
   "titleSlug": "shortest-string-that-contains-three-strings",
   "topicTags": "['String', 'Greedy', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.58703529344632",
   "difficulty": "Hard",
   "frontendQuestionId": 2801,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Stepping Numbers in Range",
   "titleSlug": "count-stepping-numbers-in-range",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.99796592931605",
   "difficulty": "Medium",
   "frontendQuestionId": 2802,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find The K-th Lucky Number",
   "titleSlug": "find-the-k-th-lucky-number",
   "topicTags": "['Math', 'String', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.20682302771856",
   "difficulty": "Easy",
   "frontendQuestionId": 2803,
   "isFavor": false,
   "paidOnly": true,
   "title": "Factorial Generator",
   "titleSlug": "factorial-generator",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.2465252377469",
   "difficulty": "Easy",
   "frontendQuestionId": 2804,
   "isFavor": false,
   "paidOnly": true,
   "title": "Array Prototype ForEach",
   "titleSlug": "array-prototype-foreach",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.75862068965517",
   "difficulty": "Medium",
   "frontendQuestionId": 2805,
   "isFavor": false,
   "paidOnly": true,
   "title": "Custom Interval",
   "titleSlug": "custom-interval",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.777475794122644",
   "difficulty": "Easy",
   "frontendQuestionId": 2806,
   "isFavor": false,
   "paidOnly": false,
   "title": "Account Balance After Rounded Purchase",
   "titleSlug": "account-balance-after-rounded-purchase",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "91.53373730451656",
   "difficulty": "Medium",
   "frontendQuestionId": 2807,
   "isFavor": false,
   "paidOnly": false,
   "title": "Insert Greatest Common Divisors in Linked List",
   "titleSlug": "insert-greatest-common-divisors-in-linked-list",
   "topicTags": "['Linked List', 'Math', 'Number Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.208989782865658",
   "difficulty": "Medium",
   "frontendQuestionId": 2808,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Seconds to Equalize a Circular Array",
   "titleSlug": "minimum-seconds-to-equalize-a-circular-array",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.951162336393825",
   "difficulty": "Hard",
   "frontendQuestionId": 2809,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Make Array Sum At Most x",
   "titleSlug": "minimum-time-to-make-array-sum-at-most-x",
   "topicTags": "['Array', 'Dynamic Programming', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.6789682806923",
   "difficulty": "Easy",
   "frontendQuestionId": 2810,
   "isFavor": false,
   "paidOnly": false,
   "title": "Faulty Keyboard",
   "titleSlug": "faulty-keyboard",
   "topicTags": "['String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.7978150951159",
   "difficulty": "Medium",
   "frontendQuestionId": 2811,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if it is Possible to Split Array",
   "titleSlug": "check-if-it-is-possible-to-split-array",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.32408970340005",
   "difficulty": "Medium",
   "frontendQuestionId": 2812,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Safest Path in a Grid",
   "titleSlug": "find-the-safest-path-in-a-grid",
   "topicTags": "['Array', 'Binary Search', 'Breadth-First Search', 'Union Find', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.40405244338498",
   "difficulty": "Hard",
   "frontendQuestionId": 2813,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Elegance of a K-Length Subsequence",
   "titleSlug": "maximum-elegance-of-a-k-length-subsequence",
   "topicTags": "['Array', 'Hash Table', 'Stack', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.17841601392516",
   "difficulty": "Hard",
   "frontendQuestionId": 2814,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Time Takes to Reach Destination Without Drowning",
   "titleSlug": "minimum-time-takes-to-reach-destination-without-drowning",
   "topicTags": "['Array', 'Breadth-First Search', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.79516986572948",
   "difficulty": "Easy",
   "frontendQuestionId": 2815,
   "isFavor": false,
   "paidOnly": false,
   "title": "Max Pair Sum in an Array",
   "titleSlug": "max-pair-sum-in-an-array",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.20840454408364",
   "difficulty": "Medium",
   "frontendQuestionId": 2816,
   "isFavor": false,
   "paidOnly": false,
   "title": "Double a Number Represented as a Linked List",
   "titleSlug": "double-a-number-represented-as-a-linked-list",
   "topicTags": "['Linked List', 'Math', 'Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.69600647416516",
   "difficulty": "Medium",
   "frontendQuestionId": 2817,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Absolute Difference Between Elements With Constraint",
   "titleSlug": "minimum-absolute-difference-between-elements-with-constraint",
   "topicTags": "['Array', 'Binary Search', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.50599282501846",
   "difficulty": "Hard",
   "frontendQuestionId": 2818,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Operations to Maximize Score",
   "titleSlug": "apply-operations-to-maximize-score",
   "topicTags": "['Array', 'Math', 'Stack', 'Greedy', 'Sorting', 'Monotonic Stack', 'Number Theory']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.886151231945625",
   "difficulty": "Hard",
   "frontendQuestionId": 2819,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Relative Loss After Buying Chocolates",
   "titleSlug": "minimum-relative-loss-after-buying-chocolates",
   "topicTags": "['Array', 'Binary Search', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.39542760372565",
   "difficulty": "Medium",
   "frontendQuestionId": 2820,
   "isFavor": false,
   "paidOnly": true,
   "title": "Election Results",
   "titleSlug": "election-results",
   "topicTags": "[]",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.30044843049326",
   "difficulty": "Medium",
   "frontendQuestionId": 2821,
   "isFavor": false,
   "paidOnly": true,
   "title": "Delay the Resolution of Each Promise",
   "titleSlug": "delay-the-resolution-of-each-promise",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.44924406047516",
   "difficulty": "Easy",
   "frontendQuestionId": 2822,
   "isFavor": false,
   "paidOnly": true,
   "title": "Inversion of Object",
   "titleSlug": "inversion-of-object",
   "topicTags": "[]",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.347871235721705",
   "difficulty": "Medium",
   "frontendQuestionId": 2823,
   "isFavor": false,
   "paidOnly": true,
   "title": "Deep Object Filter",
   "titleSlug": "deep-object-filter",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.3769567297833",
   "difficulty": "Easy",
   "frontendQuestionId": 2824,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Pairs Whose Sum is Less than Target",
   "titleSlug": "count-pairs-whose-sum-is-less-than-target",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.66149365891623",
   "difficulty": "Medium",
   "frontendQuestionId": 2825,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make String a Subsequence Using Cyclic Increments",
   "titleSlug": "make-string-a-subsequence-using-cyclic-increments",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.59707820213996",
   "difficulty": "Medium",
   "frontendQuestionId": 2826,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sorting Three Groups",
   "titleSlug": "sorting-three-groups",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "19.056870363829034",
   "difficulty": "Hard",
   "frontendQuestionId": 2827,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Beautiful Integers in the Range",
   "titleSlug": "number-of-beautiful-integers-in-the-range",
   "topicTags": "['Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.51083780461775",
   "difficulty": "Easy",
   "frontendQuestionId": 2828,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if a String Is an Acronym of Words",
   "titleSlug": "check-if-a-string-is-an-acronym-of-words",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.70442877021256",
   "difficulty": "Medium",
   "frontendQuestionId": 2829,
   "isFavor": false,
   "paidOnly": false,
   "title": "Determine the Minimum Sum of a k-avoiding Array",
   "titleSlug": "determine-the-minimum-sum-of-a-k-avoiding-array",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.77176095519826",
   "difficulty": "Medium",
   "frontendQuestionId": 2830,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize the Profit as the Salesman",
   "titleSlug": "maximize-the-profit-as-the-salesman",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Dynamic Programming', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.801518957930966",
   "difficulty": "Medium",
   "frontendQuestionId": 2831,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Longest Equal Subarray",
   "titleSlug": "find-the-longest-equal-subarray",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.30974581683485",
   "difficulty": "Medium",
   "frontendQuestionId": 2832,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximal Range That Each Element Is Maximum in It",
   "titleSlug": "maximal-range-that-each-element-is-maximum-in-it",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.14553499214996",
   "difficulty": "Easy",
   "frontendQuestionId": 2833,
   "isFavor": false,
   "paidOnly": false,
   "title": "Furthest Point From Origin",
   "titleSlug": "furthest-point-from-origin",
   "topicTags": "['String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.08771303135407",
   "difficulty": "Medium",
   "frontendQuestionId": 2834,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Minimum Possible Sum of a Beautiful Array",
   "titleSlug": "find-the-minimum-possible-sum-of-a-beautiful-array",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.13344635504965",
   "difficulty": "Hard",
   "frontendQuestionId": 2835,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Form Subsequence With Target Sum",
   "titleSlug": "minimum-operations-to-form-subsequence-with-target-sum",
   "topicTags": "['Array', 'Greedy', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.129655314121333",
   "difficulty": "Hard",
   "frontendQuestionId": 2836,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Value of Function in a Ball Passing Game",
   "titleSlug": "maximize-value-of-function-in-a-ball-passing-game",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.35849056603774",
   "difficulty": "Easy",
   "frontendQuestionId": 2837,
   "isFavor": false,
   "paidOnly": true,
   "title": "Total Traveled Distance",
   "titleSlug": "total-traveled-distance",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.53096247286261",
   "difficulty": "Medium",
   "frontendQuestionId": 2838,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Coins Heroes Can Collect",
   "titleSlug": "maximum-coins-heroes-can-collect",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Sorting', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.9175948061954",
   "difficulty": "Easy",
   "frontendQuestionId": 2839,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Strings Can be Made Equal With Operations I",
   "titleSlug": "check-if-strings-can-be-made-equal-with-operations-i",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.982883225561054",
   "difficulty": "Medium",
   "frontendQuestionId": 2840,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Strings Can be Made Equal With Operations II",
   "titleSlug": "check-if-strings-can-be-made-equal-with-operations-ii",
   "topicTags": "['Hash Table', 'String', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.92117180298962",
   "difficulty": "Medium",
   "frontendQuestionId": 2841,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum of Almost Unique Subarray",
   "titleSlug": "maximum-sum-of-almost-unique-subarray",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.40175725730037",
   "difficulty": "Hard",
   "frontendQuestionId": 2842,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count K-Subsequences of a String With Maximum Beauty",
   "titleSlug": "count-k-subsequences-of-a-string-with-maximum-beauty",
   "topicTags": "['Hash Table', 'Math', 'String', 'Greedy', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.85649429440075",
   "difficulty": "Easy",
   "frontendQuestionId": 2843,
   "isFavor": false,
   "paidOnly": false,
   "title": "  Count Symmetric Integers",
   "titleSlug": "count-symmetric-integers",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.893969005477715",
   "difficulty": "Medium",
   "frontendQuestionId": 2844,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make a Special Number",
   "titleSlug": "minimum-operations-to-make-a-special-number",
   "topicTags": "['Math', 'String', 'Greedy', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.494309305958495",
   "difficulty": "Medium",
   "frontendQuestionId": 2845,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count of Interesting Subarrays",
   "titleSlug": "count-of-interesting-subarrays",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.94188353366787",
   "difficulty": "Hard",
   "frontendQuestionId": 2846,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Edge Weight Equilibrium Queries in a Tree",
   "titleSlug": "minimum-edge-weight-equilibrium-queries-in-a-tree",
   "topicTags": "['Array', 'Tree', 'Graph', 'Strongly Connected Component']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.446244477172314",
   "difficulty": "Medium",
   "frontendQuestionId": 2847,
   "isFavor": false,
   "paidOnly": true,
   "title": "Smallest Number With Given Digit Product",
   "titleSlug": "smallest-number-with-given-digit-product",
   "topicTags": "['Math', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.69640159720839",
   "difficulty": "Easy",
   "frontendQuestionId": 2848,
   "isFavor": false,
   "paidOnly": false,
   "title": "Points That Intersect With Cars",
   "titleSlug": "points-that-intersect-with-cars",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.73948075517532",
   "difficulty": "Medium",
   "frontendQuestionId": 2849,
   "isFavor": false,
   "paidOnly": false,
   "title": "Determine if a Cell Is Reachable at a Given Time",
   "titleSlug": "determine-if-a-cell-is-reachable-at-a-given-time",
   "topicTags": "['Math']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.065612185120095",
   "difficulty": "Medium",
   "frontendQuestionId": 2850,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Moves to Spread Stones Over Grid",
   "titleSlug": "minimum-moves-to-spread-stones-over-grid",
   "topicTags": "['Array', 'Dynamic Programming', 'Breadth-First Search', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.79016717879277",
   "difficulty": "Hard",
   "frontendQuestionId": 2851,
   "isFavor": false,
   "paidOnly": false,
   "title": "String Transformation",
   "titleSlug": "string-transformation",
   "topicTags": "['Math', 'String', 'Dynamic Programming', 'String Matching']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.75394506136762",
   "difficulty": "Medium",
   "frontendQuestionId": 2852,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sum of Remoteness of All Cells",
   "titleSlug": "sum-of-remoteness-of-all-cells",
   "topicTags": "['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.06058599569609",
   "difficulty": "Easy",
   "frontendQuestionId": 2853,
   "isFavor": false,
   "paidOnly": true,
   "title": "Highest Salaries Difference",
   "titleSlug": "highest-salaries-difference",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.20984506766032",
   "difficulty": "Medium",
   "frontendQuestionId": 2854,
   "isFavor": false,
   "paidOnly": true,
   "title": "Rolling Average Steps",
   "titleSlug": "rolling-average-steps",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.429243065350256",
   "difficulty": "Easy",
   "frontendQuestionId": 2855,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Right Shifts to Sort the Array",
   "titleSlug": "minimum-right-shifts-to-sort-the-array",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.55963673964843",
   "difficulty": "Medium",
   "frontendQuestionId": 2856,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Array Length After Pair Removals",
   "titleSlug": "minimum-array-length-after-pair-removals",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Greedy', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.914276676507804",
   "difficulty": "Medium",
   "frontendQuestionId": 2857,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Pairs of Points With Distance k",
   "titleSlug": "count-pairs-of-points-with-distance-k",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.264266161297115",
   "difficulty": "Hard",
   "frontendQuestionId": 2858,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Edge Reversals So Every Node Is Reachable",
   "titleSlug": "minimum-edge-reversals-so-every-node-is-reachable",
   "topicTags": "['Dynamic Programming', 'Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.59737796833772",
   "difficulty": "Easy",
   "frontendQuestionId": 2859,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Values at Indices With K Set Bits",
   "titleSlug": "sum-of-values-at-indices-with-k-set-bits",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.013835380260105",
   "difficulty": "Medium",
   "frontendQuestionId": 2860,
   "isFavor": false,
   "paidOnly": false,
   "title": "Happy Students",
   "titleSlug": "happy-students",
   "topicTags": "['Array', 'Sorting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.517952270609875",
   "difficulty": "Medium",
   "frontendQuestionId": 2861,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Alloys",
   "titleSlug": "maximum-number-of-alloys",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.270072992700726",
   "difficulty": "Hard",
   "frontendQuestionId": 2862,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Element-Sum of a Complete Subset of Indices",
   "titleSlug": "maximum-element-sum-of-a-complete-subset-of-indices",
   "topicTags": "['Array', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.07157464212679",
   "difficulty": "Medium",
   "frontendQuestionId": 2863,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Length of Semi-Decreasing Subarrays",
   "titleSlug": "maximum-length-of-semi-decreasing-subarrays",
   "topicTags": "['Array', 'Stack', 'Sorting', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.64577601569088",
   "difficulty": "Easy",
   "frontendQuestionId": 2864,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Odd Binary Number",
   "titleSlug": "maximum-odd-binary-number",
   "topicTags": "['Math', 'String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.16640858727844",
   "difficulty": "Medium",
   "frontendQuestionId": 2865,
   "isFavor": false,
   "paidOnly": false,
   "title": "Beautiful Towers I",
   "titleSlug": "beautiful-towers-i",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.15437715720113",
   "difficulty": "Medium",
   "frontendQuestionId": 2866,
   "isFavor": false,
   "paidOnly": false,
   "title": "Beautiful Towers II",
   "titleSlug": "beautiful-towers-ii",
   "topicTags": "['Array', 'Stack', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.245517714677874",
   "difficulty": "Hard",
   "frontendQuestionId": 2867,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Valid Paths in a Tree",
   "titleSlug": "count-valid-paths-in-a-tree",
   "topicTags": "['Math', 'Dynamic Programming', 'Tree', 'Depth-First Search', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.497164461247635",
   "difficulty": "Hard",
   "frontendQuestionId": 2868,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Wording Game",
   "titleSlug": "the-wording-game",
   "topicTags": "['Array', 'Math', 'Two Pointers', 'String', 'Greedy', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.5201048951049",
   "difficulty": "Easy",
   "frontendQuestionId": 2869,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Collect Elements",
   "titleSlug": "minimum-operations-to-collect-elements",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.79015622506571",
   "difficulty": "Medium",
   "frontendQuestionId": 2870,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Make Array Empty",
   "titleSlug": "minimum-number-of-operations-to-make-array-empty",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.4004448861754",
   "difficulty": "Medium",
   "frontendQuestionId": 2871,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split Array Into Maximum Number of Subarrays",
   "titleSlug": "split-array-into-maximum-number-of-subarrays",
   "topicTags": "['Array', 'Greedy', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.78342926437685",
   "difficulty": "Hard",
   "frontendQuestionId": 2872,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of K-Divisible Components",
   "titleSlug": "maximum-number-of-k-divisible-components",
   "topicTags": "['Tree', 'Depth-First Search']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.338917221953366",
   "difficulty": "Easy",
   "frontendQuestionId": 2873,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Value of an Ordered Triplet I",
   "titleSlug": "maximum-value-of-an-ordered-triplet-i",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.858747499615326",
   "difficulty": "Medium",
   "frontendQuestionId": 2874,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Value of an Ordered Triplet II",
   "titleSlug": "maximum-value-of-an-ordered-triplet-ii",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.941481596961406",
   "difficulty": "Medium",
   "frontendQuestionId": 2875,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Size Subarray in Infinite Array",
   "titleSlug": "minimum-size-subarray-in-infinite-array",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.554573202820755",
   "difficulty": "Hard",
   "frontendQuestionId": 2876,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Visited Nodes in a Directed Graph",
   "titleSlug": "count-visited-nodes-in-a-directed-graph",
   "topicTags": "['Dynamic Programming', 'Graph', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.47275180289427",
   "difficulty": "Easy",
   "frontendQuestionId": 2877,
   "isFavor": false,
   "paidOnly": false,
   "title": "Create a DataFrame from List",
   "titleSlug": "create-a-dataframe-from-list",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.17231518003119",
   "difficulty": "Easy",
   "frontendQuestionId": 2878,
   "isFavor": false,
   "paidOnly": false,
   "title": "Get the Size of a DataFrame",
   "titleSlug": "get-the-size-of-a-dataframe",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "93.07449801692674",
   "difficulty": "Easy",
   "frontendQuestionId": 2879,
   "isFavor": false,
   "paidOnly": false,
   "title": "Display the First Three Rows",
   "titleSlug": "display-the-first-three-rows",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.28976981943198",
   "difficulty": "Easy",
   "frontendQuestionId": 2880,
   "isFavor": false,
   "paidOnly": false,
   "title": "Select Data",
   "titleSlug": "select-data",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "90.26164711409987",
   "difficulty": "Easy",
   "frontendQuestionId": 2881,
   "isFavor": false,
   "paidOnly": false,
   "title": "Create a New Column",
   "titleSlug": "create-a-new-column",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.59790155840147",
   "difficulty": "Easy",
   "frontendQuestionId": 2882,
   "isFavor": false,
   "paidOnly": false,
   "title": "Drop Duplicate Rows",
   "titleSlug": "drop-duplicate-rows",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.31343237098632",
   "difficulty": "Easy",
   "frontendQuestionId": 2883,
   "isFavor": false,
   "paidOnly": false,
   "title": "Drop Missing Data",
   "titleSlug": "drop-missing-data",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "92.50762257931603",
   "difficulty": "Easy",
   "frontendQuestionId": 2884,
   "isFavor": false,
   "paidOnly": false,
   "title": "Modify Columns",
   "titleSlug": "modify-columns",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.59403770276195",
   "difficulty": "Easy",
   "frontendQuestionId": 2885,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rename Columns",
   "titleSlug": "rename-columns",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.48829953198128",
   "difficulty": "Easy",
   "frontendQuestionId": 2886,
   "isFavor": false,
   "paidOnly": false,
   "title": "Change Data Type",
   "titleSlug": "change-data-type",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.27550544384968",
   "difficulty": "Easy",
   "frontendQuestionId": 2887,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fill Missing Data",
   "titleSlug": "fill-missing-data",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "90.73704611525964",
   "difficulty": "Easy",
   "frontendQuestionId": 2888,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reshape Data: Concatenate",
   "titleSlug": "reshape-data-concatenate",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.55766747585352",
   "difficulty": "Easy",
   "frontendQuestionId": 2889,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reshape Data: Pivot",
   "titleSlug": "reshape-data-pivot",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.14745023611017",
   "difficulty": "Easy",
   "frontendQuestionId": 2890,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reshape Data: Melt",
   "titleSlug": "reshape-data-melt",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.63526036214184",
   "difficulty": "Easy",
   "frontendQuestionId": 2891,
   "isFavor": false,
   "paidOnly": false,
   "title": "Method Chaining",
   "titleSlug": "method-chaining",
   "topicTags": "[]",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.22922059246477",
   "difficulty": "Medium",
   "frontendQuestionId": 2892,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimizing Array After Replacing Pairs With Their Product",
   "titleSlug": "minimizing-array-after-replacing-pairs-with-their-product",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.14101160499234",
   "difficulty": "Medium",
   "frontendQuestionId": 2893,
   "isFavor": false,
   "paidOnly": true,
   "title": "Calculate Orders Within Each Interval",
   "titleSlug": "calculate-orders-within-each-interval",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.28438440906407",
   "difficulty": "Easy",
   "frontendQuestionId": 2894,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divisible and Non-divisible Sums Difference",
   "titleSlug": "divisible-and-non-divisible-sums-difference",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.85338511783917",
   "difficulty": "Medium",
   "frontendQuestionId": 2895,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Processing Time",
   "titleSlug": "minimum-processing-time",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.036647992530344",
   "difficulty": "Medium",
   "frontendQuestionId": 2896,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Operations to Make Two Strings Equal",
   "titleSlug": "apply-operations-to-make-two-strings-equal",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.998690279596836",
   "difficulty": "Hard",
   "frontendQuestionId": 2897,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Operations on Array to Maximize Sum of Squares",
   "titleSlug": "apply-operations-on-array-to-maximize-sum-of-squares",
   "topicTags": "['Array', 'Hash Table', 'Greedy', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.61875350926445",
   "difficulty": "Medium",
   "frontendQuestionId": 2898,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Linear Stock Score",
   "titleSlug": "maximum-linear-stock-score",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.37034590055626",
   "difficulty": "Easy",
   "frontendQuestionId": 2899,
   "isFavor": false,
   "paidOnly": false,
   "title": "Last Visited Integers",
   "titleSlug": "last-visited-integers",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.662363141573316",
   "difficulty": "Easy",
   "frontendQuestionId": 2900,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Unequal Adjacent Groups Subsequence I",
   "titleSlug": "longest-unequal-adjacent-groups-subsequence-i",
   "topicTags": "['Array', 'String', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.750881316098706",
   "difficulty": "Medium",
   "frontendQuestionId": 2901,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Unequal Adjacent Groups Subsequence II",
   "titleSlug": "longest-unequal-adjacent-groups-subsequence-ii",
   "topicTags": "['Array', 'String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.232117869783522",
   "difficulty": "Hard",
   "frontendQuestionId": 2902,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count of Sub-Multisets With Bounded Sum",
   "titleSlug": "count-of-sub-multisets-with-bounded-sum",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.30886220995338",
   "difficulty": "Easy",
   "frontendQuestionId": 2903,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Indices With Index and Value Difference I",
   "titleSlug": "find-indices-with-index-and-value-difference-i",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.570040653207464",
   "difficulty": "Medium",
   "frontendQuestionId": 2904,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest and Lexicographically Smallest Beautiful String",
   "titleSlug": "shortest-and-lexicographically-smallest-beautiful-string",
   "topicTags": "['String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.607625124374184",
   "difficulty": "Medium",
   "frontendQuestionId": 2905,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Indices With Index and Value Difference II",
   "titleSlug": "find-indices-with-index-and-value-difference-ii",
   "topicTags": "['Array', 'Two Pointers']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.6785558938669",
   "difficulty": "Medium",
   "frontendQuestionId": 2906,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct Product Matrix",
   "titleSlug": "construct-product-matrix",
   "topicTags": "['Array', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.577341283760084",
   "difficulty": "Medium",
   "frontendQuestionId": 2907,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Profitable Triplets With Increasing Prices I",
   "titleSlug": "maximum-profitable-triplets-with-increasing-prices-i",
   "topicTags": "['Array', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.61008210807714",
   "difficulty": "Easy",
   "frontendQuestionId": 2908,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Sum of Mountain Triplets I",
   "titleSlug": "minimum-sum-of-mountain-triplets-i",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.40410581689044",
   "difficulty": "Medium",
   "frontendQuestionId": 2909,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Sum of Mountain Triplets II",
   "titleSlug": "minimum-sum-of-mountain-triplets-ii",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.8994689775656",
   "difficulty": "Medium",
   "frontendQuestionId": 2910,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Groups to Create a Valid Assignment",
   "titleSlug": "minimum-number-of-groups-to-create-a-valid-assignment",
   "topicTags": "['Array', 'Hash Table', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.549224389494704",
   "difficulty": "Hard",
   "frontendQuestionId": 2911,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Changes to Make K Semi-palindromes",
   "titleSlug": "minimum-changes-to-make-k-semi-palindromes",
   "topicTags": "['Two Pointers', 'String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.59550561797753",
   "difficulty": "Hard",
   "frontendQuestionId": 2912,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Ways to Reach Destination in the Grid",
   "titleSlug": "number-of-ways-to-reach-destination-in-the-grid",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.35649260208716",
   "difficulty": "Easy",
   "frontendQuestionId": 2913,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subarrays Distinct Element Sum of Squares I",
   "titleSlug": "subarrays-distinct-element-sum-of-squares-i",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.49216821765728",
   "difficulty": "Medium",
   "frontendQuestionId": 2914,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Changes to Make Binary String Beautiful",
   "titleSlug": "minimum-number-of-changes-to-make-binary-string-beautiful",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.788998182401365",
   "difficulty": "Medium",
   "frontendQuestionId": 2915,
   "isFavor": false,
   "paidOnly": false,
   "title": "Length of the Longest Subsequence That Sums to Target",
   "titleSlug": "length-of-the-longest-subsequence-that-sums-to-target",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.434639807313335",
   "difficulty": "Hard",
   "frontendQuestionId": 2916,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subarrays Distinct Element Sum of Squares II",
   "titleSlug": "subarrays-distinct-element-sum-of-squares-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.98187353961623",
   "difficulty": "Easy",
   "frontendQuestionId": 2917,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the K-or of an Array",
   "titleSlug": "find-the-k-or-of-an-array",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.49859721259896",
   "difficulty": "Medium",
   "frontendQuestionId": 2918,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Equal Sum of Two Arrays After Replacing Zeros",
   "titleSlug": "minimum-equal-sum-of-two-arrays-after-replacing-zeros",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.682316015890784",
   "difficulty": "Medium",
   "frontendQuestionId": 2919,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Increment Operations to Make Array Beautiful",
   "titleSlug": "minimum-increment-operations-to-make-array-beautiful",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.419393218322426",
   "difficulty": "Hard",
   "frontendQuestionId": 2920,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Points After Collecting Coins From All Nodes",
   "titleSlug": "maximum-points-after-collecting-coins-from-all-nodes",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Tree', 'Depth-First Search', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.9053343350864",
   "difficulty": "Hard",
   "frontendQuestionId": 2921,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Profitable Triplets With Increasing Prices II",
   "titleSlug": "maximum-profitable-triplets-with-increasing-prices-ii",
   "topicTags": "['Array', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.455331412103746",
   "difficulty": "Medium",
   "frontendQuestionId": 2922,
   "isFavor": false,
   "paidOnly": true,
   "title": "Market Analysis III",
   "titleSlug": "market-analysis-iii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.17924821373097",
   "difficulty": "Easy",
   "frontendQuestionId": 2923,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Champion I",
   "titleSlug": "find-champion-i",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.9863620481724",
   "difficulty": "Medium",
   "frontendQuestionId": 2924,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Champion II",
   "titleSlug": "find-champion-ii",
   "topicTags": "['Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.70350731489171",
   "difficulty": "Medium",
   "frontendQuestionId": 2925,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Score After Applying Operations on a Tree",
   "titleSlug": "maximum-score-after-applying-operations-on-a-tree",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.62270070341138",
   "difficulty": "Hard",
   "frontendQuestionId": 2926,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Balanced Subsequence Sum",
   "titleSlug": "maximum-balanced-subsequence-sum",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.76141205112599",
   "difficulty": "Hard",
   "frontendQuestionId": 2927,
   "isFavor": false,
   "paidOnly": true,
   "title": "Distribute Candies Among Children III",
   "titleSlug": "distribute-candies-among-children-iii",
   "topicTags": "['Math', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.98692117355957",
   "difficulty": "Easy",
   "frontendQuestionId": 2928,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distribute Candies Among Children I",
   "titleSlug": "distribute-candies-among-children-i",
   "topicTags": "['Math', 'Combinatorics', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.82316937732916",
   "difficulty": "Medium",
   "frontendQuestionId": 2929,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distribute Candies Among Children II",
   "titleSlug": "distribute-candies-among-children-ii",
   "topicTags": "['Math', 'Combinatorics', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.87945039095119",
   "difficulty": "Medium",
   "frontendQuestionId": 2930,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Strings Which Can Be Rearranged to Contain Substring",
   "titleSlug": "number-of-strings-which-can-be-rearranged-to-contain-substring",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.60787873286739",
   "difficulty": "Hard",
   "frontendQuestionId": 2931,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Spending After Buying Items",
   "titleSlug": "maximum-spending-after-buying-items",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.54712877260387",
   "difficulty": "Easy",
   "frontendQuestionId": 2932,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Strong Pair XOR I",
   "titleSlug": "maximum-strong-pair-xor-i",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation', 'Trie', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.6223743451554",
   "difficulty": "Medium",
   "frontendQuestionId": 2933,
   "isFavor": false,
   "paidOnly": false,
   "title": "High-Access Employees",
   "titleSlug": "high-access-employees",
   "topicTags": "['Array', 'Hash Table', 'String', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.99065420560748",
   "difficulty": "Medium",
   "frontendQuestionId": 2934,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Maximize Last Elements in Arrays",
   "titleSlug": "minimum-operations-to-maximize-last-elements-in-arrays",
   "topicTags": "['Array', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.38207507733467",
   "difficulty": "Hard",
   "frontendQuestionId": 2935,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Strong Pair XOR II",
   "titleSlug": "maximum-strong-pair-xor-ii",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation', 'Trie', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.559665871121716",
   "difficulty": "Medium",
   "frontendQuestionId": 2936,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Equal Numbers Blocks",
   "titleSlug": "number-of-equal-numbers-blocks",
   "topicTags": "['Array', 'Binary Search', 'Interactive']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.846861861293135",
   "difficulty": "Easy",
   "frontendQuestionId": 2937,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make Three Strings Equal",
   "titleSlug": "make-three-strings-equal",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.66779225629905",
   "difficulty": "Medium",
   "frontendQuestionId": 2938,
   "isFavor": false,
   "paidOnly": false,
   "title": "Separate Black and White Balls",
   "titleSlug": "separate-black-and-white-balls",
   "topicTags": "['Two Pointers', 'String', 'Greedy']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.68522328452136",
   "difficulty": "Medium",
   "frontendQuestionId": 2939,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Xor Product",
   "titleSlug": "maximum-xor-product",
   "topicTags": "['Math', 'Greedy', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.43168627929501",
   "difficulty": "Hard",
   "frontendQuestionId": 2940,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Building Where Alice and Bob Can Meet",
   "titleSlug": "find-building-where-alice-and-bob-can-meet",
   "topicTags": "['Array', 'Binary Search', 'Stack', 'Binary Indexed Tree', 'Segment Tree', 'Heap (Priority Queue)', 'Monotonic Stack']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.287508722958826",
   "difficulty": "Hard",
   "frontendQuestionId": 2941,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum GCD-Sum of a Subarray",
   "titleSlug": "maximum-gcd-sum-of-a-subarray",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.37427148849379",
   "difficulty": "Easy",
   "frontendQuestionId": 2942,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Words Containing Character",
   "titleSlug": "find-words-containing-character",
   "topicTags": "['Array', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.63746045964785",
   "difficulty": "Medium",
   "frontendQuestionId": 2943,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Area of Square Hole in Grid",
   "titleSlug": "maximize-area-of-square-hole-in-grid",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.36194255571418",
   "difficulty": "Medium",
   "frontendQuestionId": 2944,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Coins for Fruits",
   "titleSlug": "minimum-number-of-coins-for-fruits",
   "topicTags": "['Array', 'Dynamic Programming', 'Queue', 'Heap (Priority Queue)', 'Monotonic Queue']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "16.81316502544445",
   "difficulty": "Hard",
   "frontendQuestionId": 2945,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Maximum Non-decreasing Array Length",
   "titleSlug": "find-maximum-non-decreasing-array-length",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Stack', 'Queue', 'Monotonic Stack', 'Monotonic Queue']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.88643873782424",
   "difficulty": "Easy",
   "frontendQuestionId": 2946,
   "isFavor": false,
   "paidOnly": false,
   "title": "Matrix Similarity After Cyclic Shifts",
   "titleSlug": "matrix-similarity-after-cyclic-shifts",
   "topicTags": "['Array', 'Math', 'Matrix', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.272763106030744",
   "difficulty": "Medium",
   "frontendQuestionId": 2947,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Beautiful Substrings I",
   "titleSlug": "count-beautiful-substrings-i",
   "topicTags": "['Hash Table', 'Math', 'String', 'Enumeration', 'Number Theory', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.2490873419922",
   "difficulty": "Medium",
   "frontendQuestionId": 2948,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make Lexicographically Smallest Array by Swapping Elements",
   "titleSlug": "make-lexicographically-smallest-array-by-swapping-elements",
   "topicTags": "['Array', 'Union Find', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.511760792141207",
   "difficulty": "Hard",
   "frontendQuestionId": 2949,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Beautiful Substrings II",
   "titleSlug": "count-beautiful-substrings-ii",
   "topicTags": "['Hash Table', 'Math', 'String', 'Number Theory', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.31215250198571",
   "difficulty": "Medium",
   "frontendQuestionId": 2950,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Divisible Substrings",
   "titleSlug": "number-of-divisible-substrings",
   "topicTags": "['Hash Table', 'String', 'Counting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.93715995006713",
   "difficulty": "Easy",
   "frontendQuestionId": 2951,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Peaks",
   "titleSlug": "find-the-peaks",
   "topicTags": "['Array', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.39502325241654",
   "difficulty": "Medium",
   "frontendQuestionId": 2952,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Coins to be Added",
   "titleSlug": "minimum-number-of-coins-to-be-added",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.165422885572138",
   "difficulty": "Hard",
   "frontendQuestionId": 2953,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Complete Substrings",
   "titleSlug": "count-complete-substrings",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.97605091274494",
   "difficulty": "Hard",
   "frontendQuestionId": 2954,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Infection Sequences",
   "titleSlug": "count-the-number-of-infection-sequences",
   "topicTags": "['Array', 'Math', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.338739507753594",
   "difficulty": "Medium",
   "frontendQuestionId": 2955,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Same-End Substrings",
   "titleSlug": "number-of-same-end-substrings",
   "topicTags": "['Array', 'Hash Table', 'String', 'Counting', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.38068181818183",
   "difficulty": "Easy",
   "frontendQuestionId": 2956,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Common Elements Between Two Arrays",
   "titleSlug": "find-common-elements-between-two-arrays",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.398982932202344",
   "difficulty": "Medium",
   "frontendQuestionId": 2957,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Adjacent Almost-Equal Characters",
   "titleSlug": "remove-adjacent-almost-equal-characters",
   "topicTags": "['String', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.61592871884956",
   "difficulty": "Medium",
   "frontendQuestionId": 2958,
   "isFavor": false,
   "paidOnly": false,
   "title": "Length of Longest Subarray With at Most K Frequency",
   "titleSlug": "length-of-longest-subarray-with-at-most-k-frequency",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.85673998871968",
   "difficulty": "Hard",
   "frontendQuestionId": 2959,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Possible Sets of Closing Branches",
   "titleSlug": "number-of-possible-sets-of-closing-branches",
   "topicTags": "['Bit Manipulation', 'Graph', 'Heap (Priority Queue)', 'Enumeration', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.3334153664419",
   "difficulty": "Easy",
   "frontendQuestionId": 2960,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Tested Devices After Test Operations",
   "titleSlug": "count-tested-devices-after-test-operations",
   "topicTags": "['Array', 'Simulation', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.84303279518707",
   "difficulty": "Medium",
   "frontendQuestionId": 2961,
   "isFavor": false,
   "paidOnly": false,
   "title": "Double Modular Exponentiation",
   "titleSlug": "double-modular-exponentiation",
   "topicTags": "['Array', 'Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.44205663373688",
   "difficulty": "Medium",
   "frontendQuestionId": 2962,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Subarrays Where Max Element Appears at Least K Times",
   "titleSlug": "count-subarrays-where-max-element-appears-at-least-k-times",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.22465015340866",
   "difficulty": "Hard",
   "frontendQuestionId": 2963,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Good Partitions",
   "titleSlug": "count-the-number-of-good-partitions",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.20569210866752",
   "difficulty": "Medium",
   "frontendQuestionId": 2964,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Divisible Triplet Sums",
   "titleSlug": "number-of-divisible-triplet-sums",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.69592948684344",
   "difficulty": "Easy",
   "frontendQuestionId": 2965,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Missing and Repeated Values",
   "titleSlug": "find-missing-and-repeated-values",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Matrix']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.65184940285596",
   "difficulty": "Medium",
   "frontendQuestionId": 2966,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divide Array Into Arrays With Max Difference",
   "titleSlug": "divide-array-into-arrays-with-max-difference",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "22.307620789041437",
   "difficulty": "Medium",
   "frontendQuestionId": 2967,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Make Array Equalindromic",
   "titleSlug": "minimum-cost-to-make-array-equalindromic",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.00871702137525",
   "difficulty": "Hard",
   "frontendQuestionId": 2968,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Operations to Maximize Frequency Score",
   "titleSlug": "apply-operations-to-maximize-frequency-score",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.028901734104046",
   "difficulty": "Hard",
   "frontendQuestionId": 2969,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Number of Coins for Fruits II",
   "titleSlug": "minimum-number-of-coins-for-fruits-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Queue', 'Heap (Priority Queue)', 'Monotonic Queue']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.26730400724378",
   "difficulty": "Easy",
   "frontendQuestionId": 2970,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Incremovable Subarrays I",
   "titleSlug": "count-the-number-of-incremovable-subarrays-i",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.31567626839863",
   "difficulty": "Medium",
   "frontendQuestionId": 2971,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Polygon With the Largest Perimeter",
   "titleSlug": "find-polygon-with-the-largest-perimeter",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.644806977871106",
   "difficulty": "Hard",
   "frontendQuestionId": 2972,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Incremovable Subarrays II",
   "titleSlug": "count-the-number-of-incremovable-subarrays-ii",
   "topicTags": "['Array', 'Two Pointers', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.83974069048696",
   "difficulty": "Hard",
   "frontendQuestionId": 2973,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Number of Coins to Place in Tree Nodes",
   "titleSlug": "find-number-of-coins-to-place-in-tree-nodes",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.711298232627",
   "difficulty": "Easy",
   "frontendQuestionId": 2974,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number Game",
   "titleSlug": "minimum-number-game",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.829336783451197",
   "difficulty": "Medium",
   "frontendQuestionId": 2975,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Square Area by Removing Fences From a Field",
   "titleSlug": "maximum-square-area-by-removing-fences-from-a-field",
   "topicTags": "['Array', 'Hash Table', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.71435408259824",
   "difficulty": "Medium",
   "frontendQuestionId": 2976,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Convert String I",
   "titleSlug": "minimum-cost-to-convert-string-i",
   "topicTags": "['Array', 'String', 'Graph', 'Shortest Path']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.28584570902878",
   "difficulty": "Hard",
   "frontendQuestionId": 2977,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Convert String II",
   "titleSlug": "minimum-cost-to-convert-string-ii",
   "topicTags": "['Array', 'String', 'Dynamic Programming', 'Graph', 'Trie', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.727677742713944",
   "difficulty": "Medium",
   "frontendQuestionId": 2978,
   "isFavor": false,
   "paidOnly": true,
   "title": "Symmetric Coordinates",
   "titleSlug": "symmetric-coordinates",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.24244113139196",
   "difficulty": "Medium",
   "frontendQuestionId": 2979,
   "isFavor": false,
   "paidOnly": true,
   "title": "Most Expensive Item That Can Not Be Bought",
   "titleSlug": "most-expensive-item-that-can-not-be-bought",
   "topicTags": "['Math', 'Dynamic Programming', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.45349513024182",
   "difficulty": "Easy",
   "frontendQuestionId": 2980,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Bitwise OR Has Trailing Zeros",
   "titleSlug": "check-if-bitwise-or-has-trailing-zeros",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.863102870105536",
   "difficulty": "Medium",
   "frontendQuestionId": 2981,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Longest Special Substring That Occurs Thrice I",
   "titleSlug": "find-longest-special-substring-that-occurs-thrice-i",
   "topicTags": "['Hash Table', 'String', 'Binary Search', 'Sliding Window', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.160685267303826",
   "difficulty": "Medium",
   "frontendQuestionId": 2982,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Longest Special Substring That Occurs Thrice II",
   "titleSlug": "find-longest-special-substring-that-occurs-thrice-ii",
   "topicTags": "['Hash Table', 'String', 'Binary Search', 'Sliding Window', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "22.866637406733965",
   "difficulty": "Hard",
   "frontendQuestionId": 2983,
   "isFavor": false,
   "paidOnly": false,
   "title": "Palindrome Rearrangement Queries",
   "titleSlug": "palindrome-rearrangement-queries",
   "topicTags": "['Hash Table', 'String', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.96993493381198",
   "difficulty": "Medium",
   "frontendQuestionId": 2984,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Peak Calling Hours for Each City",
   "titleSlug": "find-peak-calling-hours-for-each-city",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.26342099543577",
   "difficulty": "Easy",
   "frontendQuestionId": 2985,
   "isFavor": false,
   "paidOnly": true,
   "title": "Calculate Compressed Mean",
   "titleSlug": "calculate-compressed-mean",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.64472753007785",
   "difficulty": "Medium",
   "frontendQuestionId": 2986,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Third Transaction",
   "titleSlug": "find-third-transaction",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.96936039831482",
   "difficulty": "Easy",
   "frontendQuestionId": 2987,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Expensive Cities",
   "titleSlug": "find-expensive-cities",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.78159782339847",
   "difficulty": "Medium",
   "frontendQuestionId": 2988,
   "isFavor": false,
   "paidOnly": true,
   "title": "Manager of the Largest Department",
   "titleSlug": "manager-of-the-largest-department",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.42428035043804",
   "difficulty": "Medium",
   "frontendQuestionId": 2989,
   "isFavor": false,
   "paidOnly": true,
   "title": "Class Performance",
   "titleSlug": "class-performance",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.66287547389909",
   "difficulty": "Easy",
   "frontendQuestionId": 2990,
   "isFavor": false,
   "paidOnly": true,
   "title": "Loan Types",
   "titleSlug": "loan-types",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.071713147410364",
   "difficulty": "Hard",
   "frontendQuestionId": 2991,
   "isFavor": false,
   "paidOnly": true,
   "title": "Top Three Wineries ",
   "titleSlug": "top-three-wineries",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.8927701056052",
   "difficulty": "Medium",
   "frontendQuestionId": 2992,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Self-Divisible Permutations",
   "titleSlug": "number-of-self-divisible-permutations",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.91390359431597",
   "difficulty": "Medium",
   "frontendQuestionId": 2993,
   "isFavor": false,
   "paidOnly": true,
   "title": "Friday Purchases I",
   "titleSlug": "friday-purchases-i",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.48494711147275",
   "difficulty": "Hard",
   "frontendQuestionId": 2994,
   "isFavor": false,
   "paidOnly": true,
   "title": "Friday Purchases II ",
   "titleSlug": "friday-purchases-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.20439100888657",
   "difficulty": "Hard",
   "frontendQuestionId": 2995,
   "isFavor": false,
   "paidOnly": true,
   "title": "Viewers Turned Streamers",
   "titleSlug": "viewers-turned-streamers",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.34490290029291",
   "difficulty": "Easy",
   "frontendQuestionId": 2996,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Missing Integer Greater Than Sequential Prefix Sum",
   "titleSlug": "smallest-missing-integer-greater-than-sequential-prefix-sum",
   "topicTags": "['Array', 'Hash Table', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.73505749671553",
   "difficulty": "Medium",
   "frontendQuestionId": 2997,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Make Array XOR Equal to K",
   "titleSlug": "minimum-number-of-operations-to-make-array-xor-equal-to-k",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.98755024017253",
   "difficulty": "Medium",
   "frontendQuestionId": 2998,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Make X and Y Equal",
   "titleSlug": "minimum-number-of-operations-to-make-x-and-y-equal",
   "topicTags": "['Dynamic Programming', 'Breadth-First Search', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.59251825596789",
   "difficulty": "Hard",
   "frontendQuestionId": 2999,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Powerful Integers",
   "titleSlug": "count-the-number-of-powerful-integers",
   "topicTags": "['Math', 'String', 'Dynamic Programming']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.28911221310396",
   "difficulty": "Easy",
   "frontendQuestionId": 3000,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Area of Longest Diagonal Rectangle",
   "titleSlug": "maximum-area-of-longest-diagonal-rectangle",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "21.251525075451102",
   "difficulty": "Medium",
   "frontendQuestionId": 3001,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Moves to Capture The Queen",
   "titleSlug": "minimum-moves-to-capture-the-queen",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.53227268150236",
   "difficulty": "Medium",
   "frontendQuestionId": 3002,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Size of a Set After Removals",
   "titleSlug": "maximum-size-of-a-set-after-removals",
   "topicTags": "['Array', 'Hash Table', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.124093583253522",
   "difficulty": "Hard",
   "frontendQuestionId": 3003,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize the Number of Partitions After Operations",
   "titleSlug": "maximize-the-number-of-partitions-after-operations",
   "topicTags": "['String', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.656346749226",
   "difficulty": "Medium",
   "frontendQuestionId": 3004,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Subtree of the Same Color",
   "titleSlug": "maximum-subtree-of-the-same-color",
   "topicTags": "['Array', 'Dynamic Programming', 'Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.88816944104664",
   "difficulty": "Easy",
   "frontendQuestionId": 3005,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Elements With Maximum Frequency",
   "titleSlug": "count-elements-with-maximum-frequency",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.860684014530165",
   "difficulty": "Medium",
   "frontendQuestionId": 3006,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Beautiful Indices in the Given Array I",
   "titleSlug": "find-beautiful-indices-in-the-given-array-i",
   "topicTags": "['Two Pointers', 'String', 'Binary Search', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.980949417418664",
   "difficulty": "Medium",
   "frontendQuestionId": 3007,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number That Sum of the Prices Is Less Than or Equal to K",
   "titleSlug": "maximum-number-that-sum-of-the-prices-is-less-than-or-equal-to-k",
   "topicTags": "['Binary Search', 'Dynamic Programming', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.00729176404599",
   "difficulty": "Hard",
   "frontendQuestionId": 3008,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Beautiful Indices in the Given Array II",
   "titleSlug": "find-beautiful-indices-in-the-given-array-ii",
   "topicTags": "['Two Pointers', 'String', 'Binary Search', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.11361129494816",
   "difficulty": "Hard",
   "frontendQuestionId": 3009,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Number of Intersections on the Chart",
   "titleSlug": "maximum-number-of-intersections-on-the-chart",
   "topicTags": "['Array', 'Math', 'Binary Indexed Tree', 'Geometry']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.50214592274678",
   "difficulty": "Easy",
   "frontendQuestionId": 3010,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divide an Array Into Subarrays With Minimum Cost I",
   "titleSlug": "divide-an-array-into-subarrays-with-minimum-cost-i",
   "topicTags": "['Array', 'Sorting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.53143271498986",
   "difficulty": "Medium",
   "frontendQuestionId": 3011,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find if Array Can Be Sorted",
   "titleSlug": "find-if-array-can-be-sorted",
   "topicTags": "['Array', 'Bit Manipulation', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.58690221270521",
   "difficulty": "Medium",
   "frontendQuestionId": 3012,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize Length of Array Using Operations",
   "titleSlug": "minimize-length-of-array-using-operations",
   "topicTags": "['Array', 'Math', 'Greedy', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.69474497681607",
   "difficulty": "Hard",
   "frontendQuestionId": 3013,
   "isFavor": false,
   "paidOnly": false,
   "title": "Divide an Array Into Subarrays With Minimum Cost II",
   "titleSlug": "divide-an-array-into-subarrays-with-minimum-cost-ii",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.99563000728332",
   "difficulty": "Easy",
   "frontendQuestionId": 3014,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Pushes to Type Word I",
   "titleSlug": "minimum-number-of-pushes-to-type-word-i",
   "topicTags": "['Math', 'String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.50790469270663",
   "difficulty": "Medium",
   "frontendQuestionId": 3015,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Houses at a Certain Distance I",
   "titleSlug": "count-the-number-of-houses-at-a-certain-distance-i",
   "topicTags": "['Breadth-First Search', 'Graph', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.89931711121649",
   "difficulty": "Medium",
   "frontendQuestionId": 3016,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Pushes to Type Word II",
   "titleSlug": "minimum-number-of-pushes-to-type-word-ii",
   "topicTags": "['Hash Table', 'String', 'Greedy', 'Sorting', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "21.36741757240877",
   "difficulty": "Hard",
   "frontendQuestionId": 3017,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Houses at a Certain Distance II",
   "titleSlug": "count-the-number-of-houses-at-a-certain-distance-ii",
   "topicTags": "['Graph', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.04482225656878",
   "difficulty": "Hard",
   "frontendQuestionId": 3018,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Number of Removal Queries That Can Be Processed I",
   "titleSlug": "maximum-number-of-removal-queries-that-can-be-processed-i",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.50969444726424",
   "difficulty": "Easy",
   "frontendQuestionId": 3019,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Changing Keys",
   "titleSlug": "number-of-changing-keys",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.265562274505815",
   "difficulty": "Medium",
   "frontendQuestionId": 3020,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Number of Elements in Subset",
   "titleSlug": "find-the-maximum-number-of-elements-in-subset",
   "topicTags": "['Array', 'Hash Table', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.9452392914091",
   "difficulty": "Medium",
   "frontendQuestionId": 3021,
   "isFavor": false,
   "paidOnly": false,
   "title": "Alice and Bob Playing Flower Game",
   "titleSlug": "alice-and-bob-playing-flower-game",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.663342448126105",
   "difficulty": "Hard",
   "frontendQuestionId": 3022,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize OR of Remaining Elements Using Operations",
   "titleSlug": "minimize-or-of-remaining-elements-using-operations",
   "topicTags": "['Array', 'Greedy', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.461001164144356",
   "difficulty": "Medium",
   "frontendQuestionId": 3023,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Pattern in Infinite Stream I",
   "titleSlug": "find-pattern-in-infinite-stream-i",
   "topicTags": "['Array', 'Sliding Window', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.96600059648077",
   "difficulty": "Easy",
   "frontendQuestionId": 3024,
   "isFavor": false,
   "paidOnly": false,
   "title": "Type of Triangle",
   "titleSlug": "type-of-triangle",
   "topicTags": "['Array', 'Math', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.524957877000844",
   "difficulty": "Medium",
   "frontendQuestionId": 3025,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Number of Ways to Place People I",
   "titleSlug": "find-the-number-of-ways-to-place-people-i",
   "topicTags": "['Array', 'Math', 'Geometry', 'Sorting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.002197353758262",
   "difficulty": "Medium",
   "frontendQuestionId": 3026,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Good Subarray Sum",
   "titleSlug": "maximum-good-subarray-sum",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.717879021461314",
   "difficulty": "Hard",
   "frontendQuestionId": 3027,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Number of Ways to Place People II",
   "titleSlug": "find-the-number-of-ways-to-place-people-ii",
   "topicTags": "['Array', 'Math', 'Geometry', 'Sorting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.47393669214648",
   "difficulty": "Easy",
   "frontendQuestionId": 3028,
   "isFavor": false,
   "paidOnly": false,
   "title": "Ant on the Boundary",
   "titleSlug": "ant-on-the-boundary",
   "topicTags": "['Array', 'Simulation', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.03653355989805",
   "difficulty": "Medium",
   "frontendQuestionId": 3029,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Revert Word to Initial State I",
   "titleSlug": "minimum-time-to-revert-word-to-initial-state-i",
   "topicTags": "['String', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.964493371579195",
   "difficulty": "Medium",
   "frontendQuestionId": 3030,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Grid of Region Average",
   "titleSlug": "find-the-grid-of-region-average",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.17307746498718",
   "difficulty": "Hard",
   "frontendQuestionId": 3031,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Revert Word to Initial State II",
   "titleSlug": "minimum-time-to-revert-word-to-initial-state-ii",
   "topicTags": "['String', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.00720121866777",
   "difficulty": "Easy",
   "frontendQuestionId": 3032,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Numbers With Unique Digits II",
   "titleSlug": "count-numbers-with-unique-digits-ii",
   "topicTags": "['Hash Table', 'Math', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.17414307423876",
   "difficulty": "Easy",
   "frontendQuestionId": 3033,
   "isFavor": false,
   "paidOnly": false,
   "title": "Modify the Matrix",
   "titleSlug": "modify-the-matrix",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "66.24337430923649",
   "difficulty": "Medium",
   "frontendQuestionId": 3034,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Subarrays That Match a Pattern I",
   "titleSlug": "number-of-subarrays-that-match-a-pattern-i",
   "topicTags": "['Array', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.821953660226306",
   "difficulty": "Medium",
   "frontendQuestionId": 3035,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Palindromes After Operations",
   "titleSlug": "maximum-palindromes-after-operations",
   "topicTags": "['Array', 'Hash Table', 'String', 'Greedy', 'Sorting', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.801132983263926",
   "difficulty": "Hard",
   "frontendQuestionId": 3036,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Subarrays That Match a Pattern II",
   "titleSlug": "number-of-subarrays-that-match-a-pattern-ii",
   "topicTags": "['Array', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.1735985533454",
   "difficulty": "Hard",
   "frontendQuestionId": 3037,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Pattern in Infinite Stream II",
   "titleSlug": "find-pattern-in-infinite-stream-ii",
   "topicTags": "['Array', 'Sliding Window', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.684387395328336",
   "difficulty": "Easy",
   "frontendQuestionId": 3038,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Operations With the Same Score I",
   "titleSlug": "maximum-number-of-operations-with-the-same-score-i",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.881783321067516",
   "difficulty": "Medium",
   "frontendQuestionId": 3039,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Operations to Make String Empty",
   "titleSlug": "apply-operations-to-make-string-empty",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.897782204904345",
   "difficulty": "Medium",
   "frontendQuestionId": 3040,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Operations With the Same Score II",
   "titleSlug": "maximum-number-of-operations-with-the-same-score-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Memoization']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.00359329252063",
   "difficulty": "Hard",
   "frontendQuestionId": 3041,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Consecutive Elements in an Array After Modification",
   "titleSlug": "maximize-consecutive-elements-in-an-array-after-modification",
   "topicTags": "['Array', 'Dynamic Programming', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.6267256405268",
   "difficulty": "Easy",
   "frontendQuestionId": 3042,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Prefix and Suffix Pairs I",
   "titleSlug": "count-prefix-and-suffix-pairs-i",
   "topicTags": "['Array', 'String', 'Trie', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.2696352453576",
   "difficulty": "Medium",
   "frontendQuestionId": 3043,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Length of the Longest Common Prefix",
   "titleSlug": "find-the-length-of-the-longest-common-prefix",
   "topicTags": "['Array', 'Hash Table', 'String', 'Trie']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.70712123206529",
   "difficulty": "Medium",
   "frontendQuestionId": 3044,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Frequent Prime",
   "titleSlug": "most-frequent-prime",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Matrix', 'Counting', 'Enumeration', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.87407529179681",
   "difficulty": "Hard",
   "frontendQuestionId": 3045,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Prefix and Suffix Pairs II",
   "titleSlug": "count-prefix-and-suffix-pairs-ii",
   "topicTags": "['Array', 'String', 'Trie', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.85997296880527",
   "difficulty": "Easy",
   "frontendQuestionId": 3046,
   "isFavor": false,
   "paidOnly": false,
   "title": "Split the Array",
   "titleSlug": "split-the-array",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.81028203608029",
   "difficulty": "Medium",
   "frontendQuestionId": 3047,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Largest Area of Square Inside Two Rectangles",
   "titleSlug": "find-the-largest-area-of-square-inside-two-rectangles",
   "topicTags": "['Array', 'Math', 'Geometry']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.1227125941873",
   "difficulty": "Medium",
   "frontendQuestionId": 3048,
   "isFavor": false,
   "paidOnly": false,
   "title": "Earliest Second to Mark Indices I",
   "titleSlug": "earliest-second-to-mark-indices-i",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.096277713743305",
   "difficulty": "Hard",
   "frontendQuestionId": 3049,
   "isFavor": false,
   "paidOnly": false,
   "title": "Earliest Second to Mark Indices II",
   "titleSlug": "earliest-second-to-mark-indices-ii",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.76334776334775",
   "difficulty": "Medium",
   "frontendQuestionId": 3050,
   "isFavor": false,
   "paidOnly": true,
   "title": "Pizza Toppings Cost Analysis",
   "titleSlug": "pizza-toppings-cost-analysis",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.05133267522211",
   "difficulty": "Easy",
   "frontendQuestionId": 3051,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Candidates for Data Scientist Position",
   "titleSlug": "find-candidates-for-data-scientist-position",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.78021978021978",
   "difficulty": "Hard",
   "frontendQuestionId": 3052,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximize Items",
   "titleSlug": "maximize-items",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.53110773899848",
   "difficulty": "Easy",
   "frontendQuestionId": 3053,
   "isFavor": false,
   "paidOnly": true,
   "title": "Classifying Triangles by Lengths",
   "titleSlug": "classifying-triangles-by-lengths",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.13217242363689",
   "difficulty": "Medium",
   "frontendQuestionId": 3054,
   "isFavor": false,
   "paidOnly": true,
   "title": "Binary Tree Nodes",
   "titleSlug": "binary-tree-nodes",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.385416666666664",
   "difficulty": "Medium",
   "frontendQuestionId": 3055,
   "isFavor": false,
   "paidOnly": true,
   "title": "Top Percentile Fraud",
   "titleSlug": "top-percentile-fraud",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.566131025957965",
   "difficulty": "Medium",
   "frontendQuestionId": 3056,
   "isFavor": false,
   "paidOnly": true,
   "title": "Snaps Analysis",
   "titleSlug": "snaps-analysis",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.63453815261045",
   "difficulty": "Hard",
   "frontendQuestionId": 3057,
   "isFavor": false,
   "paidOnly": true,
   "title": "Employees Project Allocation",
   "titleSlug": "employees-project-allocation",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.83502000470699",
   "difficulty": "Medium",
   "frontendQuestionId": 3058,
   "isFavor": false,
   "paidOnly": true,
   "title": "Friends With No Mutual Friends",
   "titleSlug": "friends-with-no-mutual-friends",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.19022393450518",
   "difficulty": "Easy",
   "frontendQuestionId": 3059,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find All Unique Email Domains",
   "titleSlug": "find-all-unique-email-domains",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.64834076275384",
   "difficulty": "Hard",
   "frontendQuestionId": 3060,
   "isFavor": false,
   "paidOnly": true,
   "title": "User Activities within Time Bounds",
   "titleSlug": "user-activities-within-time-bounds",
   "topicTags": "['Database']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.05307262569832",
   "difficulty": "Hard",
   "frontendQuestionId": 3061,
   "isFavor": false,
   "paidOnly": true,
   "title": "Calculate Trapping Rain Water",
   "titleSlug": "calculate-trapping-rain-water",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.012062910368",
   "difficulty": "Easy",
   "frontendQuestionId": 3062,
   "isFavor": false,
   "paidOnly": true,
   "title": "Winner of the Linked List Game",
   "titleSlug": "winner-of-the-linked-list-game",
   "topicTags": "['Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.68278903128015",
   "difficulty": "Easy",
   "frontendQuestionId": 3063,
   "isFavor": false,
   "paidOnly": true,
   "title": "Linked List Frequency",
   "titleSlug": "linked-list-frequency",
   "topicTags": "['Hash Table', 'Linked List', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "90.2377339403136",
   "difficulty": "Medium",
   "frontendQuestionId": 3064,
   "isFavor": false,
   "paidOnly": true,
   "title": "Guess the Number Using Bitwise Questions I",
   "titleSlug": "guess-the-number-using-bitwise-questions-i",
   "topicTags": "['Bit Manipulation', 'Interactive']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.86130362863544",
   "difficulty": "Easy",
   "frontendQuestionId": 3065,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Exceed Threshold Value I",
   "titleSlug": "minimum-operations-to-exceed-threshold-value-i",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.691410773469634",
   "difficulty": "Medium",
   "frontendQuestionId": 3066,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Exceed Threshold Value II",
   "titleSlug": "minimum-operations-to-exceed-threshold-value-ii",
   "topicTags": "['Array', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.77972227506183",
   "difficulty": "Medium",
   "frontendQuestionId": 3067,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Pairs of Connectable Servers in a Weighted Tree Network",
   "titleSlug": "count-pairs-of-connectable-servers-in-a-weighted-tree-network",
   "topicTags": "['Array', 'Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.21216973578862",
   "difficulty": "Hard",
   "frontendQuestionId": 3068,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Sum of Node Values",
   "titleSlug": "find-the-maximum-sum-of-node-values",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy', 'Bit Manipulation', 'Tree', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.7510819176202",
   "difficulty": "Easy",
   "frontendQuestionId": 3069,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distribute Elements Into Two Arrays I",
   "titleSlug": "distribute-elements-into-two-arrays-i",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.915291974496505",
   "difficulty": "Medium",
   "frontendQuestionId": 3070,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Submatrices with Top-Left Element and Sum Less Than k",
   "titleSlug": "count-submatrices-with-top-left-element-and-sum-less-than-k",
   "topicTags": "['Array', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.15830943638946",
   "difficulty": "Medium",
   "frontendQuestionId": 3071,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Write the Letter Y on a Grid",
   "titleSlug": "minimum-operations-to-write-the-letter-y-on-a-grid",
   "topicTags": "['Array', 'Hash Table', 'Matrix', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.014851136710227",
   "difficulty": "Hard",
   "frontendQuestionId": 3072,
   "isFavor": false,
   "paidOnly": false,
   "title": "Distribute Elements Into Two Arrays II",
   "titleSlug": "distribute-elements-into-two-arrays-ii",
   "topicTags": "['Array', 'Binary Indexed Tree', 'Segment Tree', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.32321899736148",
   "difficulty": "Medium",
   "frontendQuestionId": 3073,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Increasing Triplet Value",
   "titleSlug": "maximum-increasing-triplet-value",
   "topicTags": "['Array', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.83858110318258",
   "difficulty": "Easy",
   "frontendQuestionId": 3074,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apple Redistribution into Boxes",
   "titleSlug": "apple-redistribution-into-boxes",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.79942846827662",
   "difficulty": "Medium",
   "frontendQuestionId": 3075,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Happiness of Selected Children",
   "titleSlug": "maximize-happiness-of-selected-children",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.28805444410246",
   "difficulty": "Medium",
   "frontendQuestionId": 3076,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Uncommon Substring in an Array",
   "titleSlug": "shortest-uncommon-substring-in-an-array",
   "topicTags": "['Array', 'Hash Table', 'String', 'Trie']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.5535674511842",
   "difficulty": "Hard",
   "frontendQuestionId": 3077,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Strength of K Disjoint Subarrays",
   "titleSlug": "maximum-strength-of-k-disjoint-subarrays",
   "topicTags": "['Array', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.624678663239074",
   "difficulty": "Medium",
   "frontendQuestionId": 3078,
   "isFavor": false,
   "paidOnly": true,
   "title": "Match Alphanumerical Pattern in Matrix I",
   "titleSlug": "match-alphanumerical-pattern-in-matrix-i",
   "topicTags": "['Array', 'Hash Table', 'String', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.31487506056621",
   "difficulty": "Easy",
   "frontendQuestionId": 3079,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Sum of Encrypted Integers",
   "titleSlug": "find-the-sum-of-encrypted-integers",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.39435781454589",
   "difficulty": "Medium",
   "frontendQuestionId": 3080,
   "isFavor": false,
   "paidOnly": false,
   "title": "Mark Elements on Array by Performing Queries",
   "titleSlug": "mark-elements-on-array-by-performing-queries",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.57082754013109",
   "difficulty": "Medium",
   "frontendQuestionId": 3081,
   "isFavor": false,
   "paidOnly": false,
   "title": "Replace Question Marks in String to Minimize Its Value",
   "titleSlug": "replace-question-marks-in-string-to-minimize-its-value",
   "topicTags": "['Hash Table', 'String', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.14926940239741",
   "difficulty": "Hard",
   "frontendQuestionId": 3082,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Sum of the Power of All Subsequences",
   "titleSlug": "find-the-sum-of-the-power-of-all-subsequences",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.45311887014516",
   "difficulty": "Easy",
   "frontendQuestionId": 3083,
   "isFavor": false,
   "paidOnly": false,
   "title": "Existence of a Substring in a String and Its Reverse",
   "titleSlug": "existence-of-a-substring-in-a-string-and-its-reverse",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.7003842757238",
   "difficulty": "Medium",
   "frontendQuestionId": 3084,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Substrings Starting and Ending with Given Character",
   "titleSlug": "count-substrings-starting-and-ending-with-given-character",
   "topicTags": "['Math', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "44.19788070483527",
   "difficulty": "Medium",
   "frontendQuestionId": 3085,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Deletions to Make String K-Special",
   "titleSlug": "minimum-deletions-to-make-string-k-special",
   "topicTags": "['Hash Table', 'String', 'Greedy', 'Sorting', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.609986814194805",
   "difficulty": "Hard",
   "frontendQuestionId": 3086,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Moves to Pick K Ones",
   "titleSlug": "minimum-moves-to-pick-k-ones",
   "topicTags": "['Array', 'Greedy', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.45695364238411",
   "difficulty": "Medium",
   "frontendQuestionId": 3087,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Trending Hashtags",
   "titleSlug": "find-trending-hashtags",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.18009478672986",
   "difficulty": "Hard",
   "frontendQuestionId": 3088,
   "isFavor": false,
   "paidOnly": true,
   "title": "Make String Anti-palindrome",
   "titleSlug": "make-string-anti-palindrome",
   "topicTags": "['String', 'Greedy', 'Sorting', 'Counting Sort']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.65825044631471",
   "difficulty": "Medium",
   "frontendQuestionId": 3089,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Bursty Behavior",
   "titleSlug": "find-bursty-behavior",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.07423869989939",
   "difficulty": "Easy",
   "frontendQuestionId": 3090,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Length Substring With Two Occurrences",
   "titleSlug": "maximum-length-substring-with-two-occurrences",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.18688524590164",
   "difficulty": "Medium",
   "frontendQuestionId": 3091,
   "isFavor": false,
   "paidOnly": false,
   "title": "Apply Operations to Make Sum of Array Greater Than or Equal to k",
   "titleSlug": "apply-operations-to-make-sum-of-array-greater-than-or-equal-to-k",
   "topicTags": "['Math', 'Greedy', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.34568134568134",
   "difficulty": "Medium",
   "frontendQuestionId": 3092,
   "isFavor": false,
   "paidOnly": false,
   "title": "Most Frequent IDs",
   "titleSlug": "most-frequent-ids",
   "topicTags": "['Array', 'Hash Table', 'Heap (Priority Queue)', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.7170626349892",
   "difficulty": "Hard",
   "frontendQuestionId": 3093,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Common Suffix Queries",
   "titleSlug": "longest-common-suffix-queries",
   "topicTags": "['Array', 'String', 'Trie']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.10740354535974",
   "difficulty": "Medium",
   "frontendQuestionId": 3094,
   "isFavor": false,
   "paidOnly": true,
   "title": "Guess the Number Using Bitwise Questions II",
   "titleSlug": "guess-the-number-using-bitwise-questions-ii",
   "topicTags": "['Bit Manipulation', 'Interactive']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.43942026045167",
   "difficulty": "Easy",
   "frontendQuestionId": 3095,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Subarray With OR at Least K I",
   "titleSlug": "shortest-subarray-with-or-at-least-k-i",
   "topicTags": "['Array', 'Bit Manipulation', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.847393788502664",
   "difficulty": "Medium",
   "frontendQuestionId": 3096,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Levels to Gain More Points",
   "titleSlug": "minimum-levels-to-gain-more-points",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.2559691158575",
   "difficulty": "Medium",
   "frontendQuestionId": 3097,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Subarray With OR at Least K II",
   "titleSlug": "shortest-subarray-with-or-at-least-k-ii",
   "topicTags": "['Array', 'Bit Manipulation', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.10309904800486",
   "difficulty": "Hard",
   "frontendQuestionId": 3098,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Sum of Subsequence Powers",
   "titleSlug": "find-the-sum-of-subsequence-powers",
   "topicTags": "['Array', 'Dynamic Programming', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.04739202709908",
   "difficulty": "Easy",
   "frontendQuestionId": 3099,
   "isFavor": false,
   "paidOnly": false,
   "title": "Harshad Number",
   "titleSlug": "harshad-number",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.04803334546296",
   "difficulty": "Medium",
   "frontendQuestionId": 3100,
   "isFavor": false,
   "paidOnly": false,
   "title": "Water Bottles II",
   "titleSlug": "water-bottles-ii",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.81497886047916",
   "difficulty": "Medium",
   "frontendQuestionId": 3101,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Alternating Subarrays",
   "titleSlug": "count-alternating-subarrays",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.227466675487054",
   "difficulty": "Hard",
   "frontendQuestionId": 3102,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize Manhattan Distances",
   "titleSlug": "minimize-manhattan-distances",
   "topicTags": "['Array', 'Math', 'Geometry', 'Sorting', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.66890653634697",
   "difficulty": "Hard",
   "frontendQuestionId": 3103,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Trending Hashtags II ",
   "titleSlug": "find-trending-hashtags-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.86994146093153",
   "difficulty": "Hard",
   "frontendQuestionId": 3104,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Longest Self-Contained Substring",
   "titleSlug": "find-longest-self-contained-substring",
   "topicTags": "['Hash Table', 'String', 'Binary Search', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.09342404359252",
   "difficulty": "Easy",
   "frontendQuestionId": 3105,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Strictly Increasing or Strictly Decreasing Subarray",
   "titleSlug": "longest-strictly-increasing-or-strictly-decreasing-subarray",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.05911915204678",
   "difficulty": "Medium",
   "frontendQuestionId": 3106,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lexicographically Smallest String After Operations With Constraint",
   "titleSlug": "lexicographically-smallest-string-after-operations-with-constraint",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.47530244508346",
   "difficulty": "Medium",
   "frontendQuestionId": 3107,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make Median of Array Equal to K",
   "titleSlug": "minimum-operations-to-make-median-of-array-equal-to-k",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.6178538085562",
   "difficulty": "Hard",
   "frontendQuestionId": 3108,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost Walk in Weighted Graph",
   "titleSlug": "minimum-cost-walk-in-weighted-graph",
   "topicTags": "['Array', 'Bit Manipulation', 'Union Find', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.68069753457607",
   "difficulty": "Medium",
   "frontendQuestionId": 3109,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Index of Permutation",
   "titleSlug": "find-the-index-of-permutation",
   "topicTags": "['Array', 'Binary Search', 'Divide and Conquer', 'Binary Indexed Tree', 'Segment Tree', 'Merge Sort', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "91.96905180866925",
   "difficulty": "Easy",
   "frontendQuestionId": 3110,
   "isFavor": false,
   "paidOnly": false,
   "title": "Score of a String",
   "titleSlug": "score-of-a-string",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.999278238902924",
   "difficulty": "Medium",
   "frontendQuestionId": 3111,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Rectangles to Cover Points",
   "titleSlug": "minimum-rectangles-to-cover-points",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.17715793441387",
   "difficulty": "Medium",
   "frontendQuestionId": 3112,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Visit Disappearing Nodes",
   "titleSlug": "minimum-time-to-visit-disappearing-nodes",
   "topicTags": "['Array', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.580414156821178",
   "difficulty": "Hard",
   "frontendQuestionId": 3113,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Number of Subarrays Where Boundary Elements Are Maximum",
   "titleSlug": "find-the-number-of-subarrays-where-boundary-elements-are-maximum",
   "topicTags": "['Array', 'Binary Search', 'Stack', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.418777520003786",
   "difficulty": "Easy",
   "frontendQuestionId": 3114,
   "isFavor": false,
   "paidOnly": false,
   "title": "Latest Time You Can Obtain After Replacing Characters",
   "titleSlug": "latest-time-you-can-obtain-after-replacing-characters",
   "topicTags": "['String', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.17779993353274",
   "difficulty": "Medium",
   "frontendQuestionId": 3115,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Prime Difference",
   "titleSlug": "maximum-prime-difference",
   "topicTags": "['Array', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "18.176392932708826",
   "difficulty": "Hard",
   "frontendQuestionId": 3116,
   "isFavor": false,
   "paidOnly": false,
   "title": "Kth Smallest Amount With Single Denomination Combination",
   "titleSlug": "kth-smallest-amount-with-single-denomination-combination",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Bit Manipulation', 'Combinatorics', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.910946196660486",
   "difficulty": "Hard",
   "frontendQuestionId": 3117,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Sum of Values by Dividing Array",
   "titleSlug": "minimum-sum-of-values-by-dividing-array",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Bit Manipulation', 'Segment Tree', 'Queue']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.22201699298116",
   "difficulty": "Medium",
   "frontendQuestionId": 3118,
   "isFavor": false,
   "paidOnly": true,
   "title": "Friday Purchase III ",
   "titleSlug": "friday-purchase-iii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.01382243487507",
   "difficulty": "Medium",
   "frontendQuestionId": 3119,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Number of Potholes That Can Be Fixed",
   "titleSlug": "maximum-number-of-potholes-that-can-be-fixed",
   "topicTags": "['String', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.06495370702649",
   "difficulty": "Easy",
   "frontendQuestionId": 3120,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Special Characters I",
   "titleSlug": "count-the-number-of-special-characters-i",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.75434028805075",
   "difficulty": "Medium",
   "frontendQuestionId": 3121,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Special Characters II",
   "titleSlug": "count-the-number-of-special-characters-ii",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.08956913309875",
   "difficulty": "Medium",
   "frontendQuestionId": 3122,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Satisfy Conditions",
   "titleSlug": "minimum-number-of-operations-to-satisfy-conditions",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.2859730451601",
   "difficulty": "Hard",
   "frontendQuestionId": 3123,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Edges in Shortest Paths",
   "titleSlug": "find-edges-in-shortest-paths",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.27524204702628",
   "difficulty": "Medium",
   "frontendQuestionId": 3124,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Longest Calls",
   "titleSlug": "find-longest-calls",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.0",
   "difficulty": "Medium",
   "frontendQuestionId": 3125,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Number That Makes Result of Bitwise AND Zero",
   "titleSlug": "maximum-number-that-makes-result-of-bitwise-and-zero",
   "topicTags": "['String', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.627906976744185",
   "difficulty": "Medium",
   "frontendQuestionId": 3126,
   "isFavor": false,
   "paidOnly": true,
   "title": "Server Utilization Time",
   "titleSlug": "server-utilization-time",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.60558734085872",
   "difficulty": "Easy",
   "frontendQuestionId": 3127,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make a Square with the Same Color",
   "titleSlug": "make-a-square-with-the-same-color",
   "topicTags": "['Array', 'Matrix', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.577771791590905",
   "difficulty": "Medium",
   "frontendQuestionId": 3128,
   "isFavor": false,
   "paidOnly": false,
   "title": "Right Triangles",
   "titleSlug": "right-triangles",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Combinatorics', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.96170891685871",
   "difficulty": "Medium",
   "frontendQuestionId": 3129,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All Possible Stable Binary Arrays I",
   "titleSlug": "find-all-possible-stable-binary-arrays-i",
   "topicTags": "['Dynamic Programming', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.450196961170512",
   "difficulty": "Hard",
   "frontendQuestionId": 3130,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find All Possible Stable Binary Arrays II",
   "titleSlug": "find-all-possible-stable-binary-arrays-ii",
   "topicTags": "['Dynamic Programming', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.88176975965492",
   "difficulty": "Easy",
   "frontendQuestionId": 3131,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Integer Added to Array I",
   "titleSlug": "find-the-integer-added-to-array-i",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.577103433406993",
   "difficulty": "Medium",
   "frontendQuestionId": 3132,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Integer Added to Array II",
   "titleSlug": "find-the-integer-added-to-array-ii",
   "topicTags": "['Array', 'Two Pointers', 'Sorting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.54820405873199",
   "difficulty": "Medium",
   "frontendQuestionId": 3133,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Array End",
   "titleSlug": "minimum-array-end",
   "topicTags": "['Bit Manipulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.686610797115573",
   "difficulty": "Hard",
   "frontendQuestionId": 3134,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Median of the Uniqueness Array",
   "titleSlug": "find-the-median-of-the-uniqueness-array",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.02318392581144",
   "difficulty": "Medium",
   "frontendQuestionId": 3135,
   "isFavor": false,
   "paidOnly": true,
   "title": "Equalize Strings by Adding or Removing Characters at Ends",
   "titleSlug": "equalize-strings-by-adding-or-removing-characters-at-ends",
   "topicTags": "['String', 'Binary Search', 'Dynamic Programming', 'Sliding Window', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.43115551983989",
   "difficulty": "Easy",
   "frontendQuestionId": 3136,
   "isFavor": false,
   "paidOnly": false,
   "title": "Valid Word",
   "titleSlug": "valid-word",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.50271309842709",
   "difficulty": "Medium",
   "frontendQuestionId": 3137,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Make Word K-Periodic",
   "titleSlug": "minimum-number-of-operations-to-make-word-k-periodic",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.53205419416905",
   "difficulty": "Medium",
   "frontendQuestionId": 3138,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Length of Anagram Concatenation",
   "titleSlug": "minimum-length-of-anagram-concatenation",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "17.618922814834228",
   "difficulty": "Hard",
   "frontendQuestionId": 3139,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Equalize Array",
   "titleSlug": "minimum-cost-to-equalize-array",
   "topicTags": "['Array', 'Greedy', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.57970071567989",
   "difficulty": "Medium",
   "frontendQuestionId": 3140,
   "isFavor": false,
   "paidOnly": true,
   "title": "Consecutive Available Seats II",
   "titleSlug": "consecutive-available-seats-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.70874661857529",
   "difficulty": "Hard",
   "frontendQuestionId": 3141,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Hamming Distances",
   "titleSlug": "maximum-hamming-distances",
   "topicTags": "['Array', 'Bit Manipulation', 'Breadth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.27313614355538",
   "difficulty": "Easy",
   "frontendQuestionId": 3142,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Grid Satisfies Conditions",
   "titleSlug": "check-if-grid-satisfies-conditions",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.87582741845442",
   "difficulty": "Medium",
   "frontendQuestionId": 3143,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Points Inside the Square",
   "titleSlug": "maximum-points-inside-the-square",
   "topicTags": "['Array', 'Hash Table', 'String', 'Binary Search', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.72058934075021",
   "difficulty": "Medium",
   "frontendQuestionId": 3144,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Substring Partition of Equal Character Frequency",
   "titleSlug": "minimum-substring-partition-of-equal-character-frequency",
   "topicTags": "['Hash Table', 'String', 'Dynamic Programming', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "21.462411727898452",
   "difficulty": "Hard",
   "frontendQuestionId": 3145,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Products of Elements of Big Array",
   "titleSlug": "find-products-of-elements-of-big-array",
   "topicTags": "['Array', 'Binary Search', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.0488156257044",
   "difficulty": "Easy",
   "frontendQuestionId": 3146,
   "isFavor": false,
   "paidOnly": false,
   "title": "Permutation Difference between Two Strings",
   "titleSlug": "permutation-difference-between-two-strings",
   "topicTags": "['Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.86480216522747",
   "difficulty": "Medium",
   "frontendQuestionId": 3147,
   "isFavor": false,
   "paidOnly": false,
   "title": "Taking Maximum Energy From the Mystic Dungeon",
   "titleSlug": "taking-maximum-energy-from-the-mystic-dungeon",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.48086041401642",
   "difficulty": "Medium",
   "frontendQuestionId": 3148,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Difference Score in a Grid",
   "titleSlug": "maximum-difference-score-in-a-grid",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "22.834679314617784",
   "difficulty": "Hard",
   "frontendQuestionId": 3149,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Minimum Cost Array Permutation",
   "titleSlug": "find-the-minimum-cost-array-permutation",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.7598137059215",
   "difficulty": "Easy",
   "frontendQuestionId": 3150,
   "isFavor": false,
   "paidOnly": true,
   "title": "Invalid Tweets II",
   "titleSlug": "invalid-tweets-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.83246951006552",
   "difficulty": "Easy",
   "frontendQuestionId": 3151,
   "isFavor": false,
   "paidOnly": false,
   "title": "Special Array I",
   "titleSlug": "special-array-i",
   "topicTags": "['Array']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.67534666542519",
   "difficulty": "Medium",
   "frontendQuestionId": 3152,
   "isFavor": false,
   "paidOnly": false,
   "title": "Special Array II",
   "titleSlug": "special-array-ii",
   "topicTags": "['Array', 'Binary Search', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.323340819581425",
   "difficulty": "Medium",
   "frontendQuestionId": 3153,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Digit Differences of All Pairs",
   "titleSlug": "sum-of-digit-differences-of-all-pairs",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.81294181620446",
   "difficulty": "Hard",
   "frontendQuestionId": 3154,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Number of Ways to Reach the K-th Stair",
   "titleSlug": "find-number-of-ways-to-reach-the-k-th-stair",
   "topicTags": "['Math', 'Dynamic Programming', 'Bit Manipulation', 'Memoization', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.17777777777778",
   "difficulty": "Medium",
   "frontendQuestionId": 3155,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Number of Upgradable Servers",
   "titleSlug": "maximum-number-of-upgradable-servers",
   "topicTags": "['Array', 'Math', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.62890276538805",
   "difficulty": "Hard",
   "frontendQuestionId": 3156,
   "isFavor": false,
   "paidOnly": true,
   "title": "Employee Task Duration and Concurrent Tasks",
   "titleSlug": "employee-task-duration-and-concurrent-tasks",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.56971153846155",
   "difficulty": "Medium",
   "frontendQuestionId": 3157,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Level of Tree with Minimum Sum",
   "titleSlug": "find-the-level-of-tree-with-minimum-sum",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.51051779935275",
   "difficulty": "Easy",
   "frontendQuestionId": 3158,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the XOR of Numbers Which Appear Twice",
   "titleSlug": "find-the-xor-of-numbers-which-appear-twice",
   "topicTags": "['Array', 'Hash Table', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.31376643717167",
   "difficulty": "Medium",
   "frontendQuestionId": 3159,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Occurrences of an Element in an Array",
   "titleSlug": "find-occurrences-of-an-element-in-an-array",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.213314292356486",
   "difficulty": "Medium",
   "frontendQuestionId": 3160,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Number of Distinct Colors Among the Balls",
   "titleSlug": "find-the-number-of-distinct-colors-among-the-balls",
   "topicTags": "['Array', 'Hash Table', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "16.062246278755072",
   "difficulty": "Hard",
   "frontendQuestionId": 3161,
   "isFavor": false,
   "paidOnly": false,
   "title": "Block Placement Queries",
   "titleSlug": "block-placement-queries",
   "topicTags": "['Array', 'Binary Search', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.46820458339657",
   "difficulty": "Easy",
   "frontendQuestionId": 3162,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Number of Good Pairs I",
   "titleSlug": "find-the-number-of-good-pairs-i",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.01687431286952",
   "difficulty": "Medium",
   "frontendQuestionId": 3163,
   "isFavor": false,
   "paidOnly": false,
   "title": "String Compression III",
   "titleSlug": "string-compression-iii",
   "topicTags": "['String']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.938913597141443",
   "difficulty": "Medium",
   "frontendQuestionId": 3164,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Number of Good Pairs II",
   "titleSlug": "find-the-number-of-good-pairs-ii",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "15.938947169454684",
   "difficulty": "Hard",
   "frontendQuestionId": 3165,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum of Subsequence With Non-adjacent Elements",
   "titleSlug": "maximum-sum-of-subsequence-with-non-adjacent-elements",
   "topicTags": "['Array', 'Divide and Conquer', 'Dynamic Programming', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.758402029169304",
   "difficulty": "Medium",
   "frontendQuestionId": 3166,
   "isFavor": false,
   "paidOnly": true,
   "title": "Calculate Parking Fees and Duration",
   "titleSlug": "calculate-parking-fees-and-duration",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.49472295514512",
   "difficulty": "Medium",
   "frontendQuestionId": 3167,
   "isFavor": false,
   "paidOnly": true,
   "title": "Better Compression of String",
   "titleSlug": "better-compression-of-string",
   "topicTags": "['Hash Table', 'String', 'Sorting', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "78.67651766393075",
   "difficulty": "Easy",
   "frontendQuestionId": 3168,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Chairs in a Waiting Room",
   "titleSlug": "minimum-number-of-chairs-in-a-waiting-room",
   "topicTags": "['String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.82224294336211",
   "difficulty": "Medium",
   "frontendQuestionId": 3169,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Days Without Meetings",
   "titleSlug": "count-days-without-meetings",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.193635764659945",
   "difficulty": "Medium",
   "frontendQuestionId": 3170,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lexicographically Minimum String After Removing Stars",
   "titleSlug": "lexicographically-minimum-string-after-removing-stars",
   "topicTags": "['Hash Table', 'String', 'Stack', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.453312923682486",
   "difficulty": "Hard",
   "frontendQuestionId": 3171,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Subarray With Bitwise OR Closest to K",
   "titleSlug": "find-subarray-with-bitwise-or-closest-to-k",
   "topicTags": "['Array', 'Binary Search', 'Bit Manipulation', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.1138990696363",
   "difficulty": "Easy",
   "frontendQuestionId": 3172,
   "isFavor": false,
   "paidOnly": true,
   "title": "Second Day Verification",
   "titleSlug": "second-day-verification",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "95.26714345814051",
   "difficulty": "Easy",
   "frontendQuestionId": 3173,
   "isFavor": false,
   "paidOnly": true,
   "title": "Bitwise OR of Adjacent Elements",
   "titleSlug": "bitwise-or-of-adjacent-elements",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.56883272290874",
   "difficulty": "Easy",
   "frontendQuestionId": 3174,
   "isFavor": false,
   "paidOnly": false,
   "title": "Clear Digits",
   "titleSlug": "clear-digits",
   "topicTags": "['String', 'Stack', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.29057210782169",
   "difficulty": "Medium",
   "frontendQuestionId": 3175,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find The First Player to win K Games in a Row",
   "titleSlug": "find-the-first-player-to-win-k-games-in-a-row",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.210590756045303",
   "difficulty": "Medium",
   "frontendQuestionId": 3176,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Length of a Good Subsequence I",
   "titleSlug": "find-the-maximum-length-of-a-good-subsequence-i",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.636907432331387",
   "difficulty": "Hard",
   "frontendQuestionId": 3177,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Length of a Good Subsequence II",
   "titleSlug": "find-the-maximum-length-of-a-good-subsequence-ii",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.47440352096363",
   "difficulty": "Easy",
   "frontendQuestionId": 3178,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Child Who Has the Ball After K Seconds",
   "titleSlug": "find-the-child-who-has-the-ball-after-k-seconds",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.574124690875955",
   "difficulty": "Medium",
   "frontendQuestionId": 3179,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the N-th Value After K Seconds",
   "titleSlug": "find-the-n-th-value-after-k-seconds",
   "topicTags": "['Array', 'Math', 'Simulation', 'Combinatorics', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.722341799397334",
   "difficulty": "Medium",
   "frontendQuestionId": 3180,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Total Reward Using Operations I",
   "titleSlug": "maximum-total-reward-using-operations-i",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.455908818236352",
   "difficulty": "Hard",
   "frontendQuestionId": 3181,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Total Reward Using Operations II",
   "titleSlug": "maximum-total-reward-using-operations-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.906191369606",
   "difficulty": "Medium",
   "frontendQuestionId": 3182,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Top Scoring Students",
   "titleSlug": "find-top-scoring-students",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.45424292845258",
   "difficulty": "Medium",
   "frontendQuestionId": 3183,
   "isFavor": false,
   "paidOnly": true,
   "title": "The Number of Ways to Make the Sum",
   "titleSlug": "the-number-of-ways-to-make-the-sum",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.39040586978732",
   "difficulty": "Easy",
   "frontendQuestionId": 3184,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Pairs That Form a Complete Day I",
   "titleSlug": "count-pairs-that-form-a-complete-day-i",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.857282244923844",
   "difficulty": "Medium",
   "frontendQuestionId": 3185,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Pairs That Form a Complete Day II",
   "titleSlug": "count-pairs-that-form-a-complete-day-ii",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.426314775573108",
   "difficulty": "Medium",
   "frontendQuestionId": 3186,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Total Damage With Spell Casting",
   "titleSlug": "maximum-total-damage-with-spell-casting",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'Binary Search', 'Dynamic Programming', 'Sorting', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.91112943966184",
   "difficulty": "Hard",
   "frontendQuestionId": 3187,
   "isFavor": false,
   "paidOnly": false,
   "title": "Peaks in Array",
   "titleSlug": "peaks-in-array",
   "topicTags": "['Array', 'Binary Indexed Tree', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.24120603015076",
   "difficulty": "Hard",
   "frontendQuestionId": 3188,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Top Scoring Students II",
   "titleSlug": "find-top-scoring-students-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "76.0710018774535",
   "difficulty": "Medium",
   "frontendQuestionId": 3189,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Moves to Get a Peaceful Board",
   "titleSlug": "minimum-moves-to-get-a-peaceful-board",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Counting Sort']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.65297261933969",
   "difficulty": "Easy",
   "frontendQuestionId": 3190,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Minimum Operations to Make All Elements Divisible by Three",
   "titleSlug": "find-minimum-operations-to-make-all-elements-divisible-by-three",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.51665780388781",
   "difficulty": "Medium",
   "frontendQuestionId": 3191,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make Binary Array Elements Equal to One I",
   "titleSlug": "minimum-operations-to-make-binary-array-elements-equal-to-one-i",
   "topicTags": "['Array', 'Bit Manipulation', 'Queue', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.7548191889122",
   "difficulty": "Medium",
   "frontendQuestionId": 3192,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make Binary Array Elements Equal to One II",
   "titleSlug": "minimum-operations-to-make-binary-array-elements-equal-to-one-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.45766668081314",
   "difficulty": "Hard",
   "frontendQuestionId": 3193,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Inversions",
   "titleSlug": "count-the-number-of-inversions",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.6535681442881",
   "difficulty": "Easy",
   "frontendQuestionId": 3194,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Average of Smallest and Largest Elements",
   "titleSlug": "minimum-average-of-smallest-and-largest-elements",
   "topicTags": "['Array', 'Two Pointers', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.09088506392679",
   "difficulty": "Medium",
   "frontendQuestionId": 3195,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Minimum Area to Cover All Ones I",
   "titleSlug": "find-the-minimum-area-to-cover-all-ones-i",
   "topicTags": "['Array', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.470669189747117",
   "difficulty": "Medium",
   "frontendQuestionId": 3196,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Total Cost of Alternating Subarrays",
   "titleSlug": "maximize-total-cost-of-alternating-subarrays",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.68166089965398",
   "difficulty": "Hard",
   "frontendQuestionId": 3197,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Minimum Area to Cover All Ones II",
   "titleSlug": "find-the-minimum-area-to-cover-all-ones-ii",
   "topicTags": "['Array', 'Matrix', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.9616724738676",
   "difficulty": "Easy",
   "frontendQuestionId": 3198,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Cities in Each State",
   "titleSlug": "find-cities-in-each-state",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.99319727891157",
   "difficulty": "Easy",
   "frontendQuestionId": 3199,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Triplets with Even XOR Set Bits I",
   "titleSlug": "count-triplets-with-even-xor-set-bits-i",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.027709904930596",
   "difficulty": "Easy",
   "frontendQuestionId": 3200,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Height of a Triangle",
   "titleSlug": "maximum-height-of-a-triangle",
   "topicTags": "['Array', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.49502560157058",
   "difficulty": "Medium",
   "frontendQuestionId": 3201,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Length of Valid Subsequence I",
   "titleSlug": "find-the-maximum-length-of-valid-subsequence-i",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.322702613841855",
   "difficulty": "Medium",
   "frontendQuestionId": 3202,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Length of Valid Subsequence II",
   "titleSlug": "find-the-maximum-length-of-valid-subsequence-ii",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.56774153034632",
   "difficulty": "Hard",
   "frontendQuestionId": 3203,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Minimum Diameter After Merging Two Trees",
   "titleSlug": "find-minimum-diameter-after-merging-two-trees",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "93.52678571428571",
   "difficulty": "Medium",
   "frontendQuestionId": 3204,
   "isFavor": false,
   "paidOnly": true,
   "title": "Bitwise User Permissions Analysis",
   "titleSlug": "bitwise-user-permissions-analysis",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.0956816257409",
   "difficulty": "Medium",
   "frontendQuestionId": 3205,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Array Hopping Score I",
   "titleSlug": "maximum-array-hopping-score-i",
   "topicTags": "['Array', 'Dynamic Programming', 'Stack', 'Greedy', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.35904719081408",
   "difficulty": "Easy",
   "frontendQuestionId": 3206,
   "isFavor": false,
   "paidOnly": false,
   "title": "Alternating Groups I",
   "titleSlug": "alternating-groups-i",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.343944451552126",
   "difficulty": "Medium",
   "frontendQuestionId": 3207,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Points After Enemy Battles",
   "titleSlug": "maximum-points-after-enemy-battles",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.826259239503166",
   "difficulty": "Medium",
   "frontendQuestionId": 3208,
   "isFavor": false,
   "paidOnly": false,
   "title": "Alternating Groups II",
   "titleSlug": "alternating-groups-ii",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.56371847119727",
   "difficulty": "Hard",
   "frontendQuestionId": 3209,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Subarrays With AND Value of K",
   "titleSlug": "number-of-subarrays-with-and-value-of-k",
   "topicTags": "['Array', 'Binary Search', 'Bit Manipulation', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.8229517741773",
   "difficulty": "Easy",
   "frontendQuestionId": 3210,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Encrypted String",
   "titleSlug": "find-the-encrypted-string",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.8645945432677",
   "difficulty": "Medium",
   "frontendQuestionId": 3211,
   "isFavor": false,
   "paidOnly": false,
   "title": "Generate Binary Strings Without Adjacent Zeros",
   "titleSlug": "generate-binary-strings-without-adjacent-zeros",
   "topicTags": "['String', 'Backtracking', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.33301028929624",
   "difficulty": "Medium",
   "frontendQuestionId": 3212,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Submatrices With Equal Frequency of X and Y",
   "titleSlug": "count-submatrices-with-equal-frequency-of-x-and-y",
   "topicTags": "['Array', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "19.243844973988395",
   "difficulty": "Hard",
   "frontendQuestionId": 3213,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct String with Minimum Cost",
   "titleSlug": "construct-string-with-minimum-cost",
   "topicTags": "['Array', 'String', 'Dynamic Programming', 'Suffix Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.73889227023737",
   "difficulty": "Hard",
   "frontendQuestionId": 3214,
   "isFavor": false,
   "paidOnly": true,
   "title": "Year on Year Growth Rate",
   "titleSlug": "year-on-year-growth-rate",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.03041825095057",
   "difficulty": "Medium",
   "frontendQuestionId": 3215,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Triplets with Even XOR Set Bits II",
   "titleSlug": "count-triplets-with-even-xor-set-bits-ii",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.46525086161543",
   "difficulty": "Easy",
   "frontendQuestionId": 3216,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lexicographically Smallest String After a Swap",
   "titleSlug": "lexicographically-smallest-string-after-a-swap",
   "topicTags": "['String', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "67.94668177206385",
   "difficulty": "Medium",
   "frontendQuestionId": 3217,
   "isFavor": false,
   "paidOnly": false,
   "title": "Delete Nodes From Linked List Present in Array",
   "titleSlug": "delete-nodes-from-linked-list-present-in-array",
   "topicTags": "['Array', 'Hash Table', 'Linked List']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.44324335369966",
   "difficulty": "Medium",
   "frontendQuestionId": 3218,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost for Cutting Cake I",
   "titleSlug": "minimum-cost-for-cutting-cake-i",
   "topicTags": "['Array', 'Dynamic Programming', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.50951321966889",
   "difficulty": "Hard",
   "frontendQuestionId": 3219,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost for Cutting Cake II",
   "titleSlug": "minimum-cost-for-cutting-cake-ii",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.90703975335171",
   "difficulty": "Medium",
   "frontendQuestionId": 3220,
   "isFavor": false,
   "paidOnly": false,
   "title": "Odd and Even Transactions",
   "titleSlug": "odd-and-even-transactions",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.53409090909091",
   "difficulty": "Medium",
   "frontendQuestionId": 3221,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Array Hopping Score II",
   "titleSlug": "maximum-array-hopping-score-ii",
   "topicTags": "['Array', 'Stack', 'Greedy', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.359501370999325",
   "difficulty": "Easy",
   "frontendQuestionId": 3222,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Winning Player in Coin Game",
   "titleSlug": "find-the-winning-player-in-coin-game",
   "topicTags": "['Math', 'Simulation', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.92485804289814",
   "difficulty": "Medium",
   "frontendQuestionId": 3223,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Length of String After Operations",
   "titleSlug": "minimum-length-of-string-after-operations",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.053957498196944",
   "difficulty": "Medium",
   "frontendQuestionId": 3224,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Array Changes to Make Differences Equal",
   "titleSlug": "minimum-array-changes-to-make-differences-equal",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.274818401937043",
   "difficulty": "Hard",
   "frontendQuestionId": 3225,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Score From Grid Operations",
   "titleSlug": "maximum-score-from-grid-operations",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.71951642677697",
   "difficulty": "Easy",
   "frontendQuestionId": 3226,
   "isFavor": false,
   "paidOnly": false,
   "title": "Number of Bit Changes to Make Two Integers Equal",
   "titleSlug": "number-of-bit-changes-to-make-two-integers-equal",
   "topicTags": "['Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.848023591790536",
   "difficulty": "Medium",
   "frontendQuestionId": 3227,
   "isFavor": false,
   "paidOnly": false,
   "title": "Vowels Game in a String",
   "titleSlug": "vowels-game-in-a-string",
   "topicTags": "['Math', 'String', 'Brainteaser', 'Game Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.98482353149516",
   "difficulty": "Medium",
   "frontendQuestionId": 3228,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Operations to Move Ones to the End",
   "titleSlug": "maximum-number-of-operations-to-move-ones-to-the-end",
   "topicTags": "['String', 'Greedy', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.54194231278116",
   "difficulty": "Hard",
   "frontendQuestionId": 3229,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make Array Equal to Target",
   "titleSlug": "minimum-operations-to-make-array-equal-to-target",
   "topicTags": "['Array', 'Dynamic Programming', 'Stack', 'Greedy', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.49023691746941",
   "difficulty": "Medium",
   "frontendQuestionId": 3230,
   "isFavor": false,
   "paidOnly": true,
   "title": "Customer Purchasing Behavior Analysis",
   "titleSlug": "customer-purchasing-behavior-analysis",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.45577523413112",
   "difficulty": "Hard",
   "frontendQuestionId": 3231,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Number of Increasing Subsequence to Be Removed",
   "titleSlug": "minimum-number-of-increasing-subsequence-to-be-removed",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.0952546461941",
   "difficulty": "Easy",
   "frontendQuestionId": 3232,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find if Digit Game Can Be Won",
   "titleSlug": "find-if-digit-game-can-be-won",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.792397389502337",
   "difficulty": "Medium",
   "frontendQuestionId": 3233,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Count of Numbers Which Are Not Special",
   "titleSlug": "find-the-count-of-numbers-which-are-not-special",
   "topicTags": "['Array', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "16.6121929738722",
   "difficulty": "Medium",
   "frontendQuestionId": 3234,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Substrings With Dominant Ones",
   "titleSlug": "count-the-number-of-substrings-with-dominant-ones",
   "topicTags": "['String', 'Sliding Window', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.580208836535245",
   "difficulty": "Hard",
   "frontendQuestionId": 3235,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if the Rectangle Corner Is Reachable",
   "titleSlug": "check-if-the-rectangle-corner-is-reachable",
   "topicTags": "['Array', 'Math', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Geometry']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.79093005380477",
   "difficulty": "Hard",
   "frontendQuestionId": 3236,
   "isFavor": false,
   "paidOnly": true,
   "title": "CEO Subordinate Hierarchy",
   "titleSlug": "ceo-subordinate-hierarchy",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.989556135770236",
   "difficulty": "Medium",
   "frontendQuestionId": 3237,
   "isFavor": false,
   "paidOnly": true,
   "title": "Alt and Tab Simulation",
   "titleSlug": "alt-and-tab-simulation",
   "topicTags": "['Array', 'Hash Table', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.56684238417984",
   "difficulty": "Easy",
   "frontendQuestionId": 3238,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Number of Winning Players",
   "titleSlug": "find-the-number-of-winning-players",
   "topicTags": "['Array', 'Hash Table', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.15228468974773",
   "difficulty": "Medium",
   "frontendQuestionId": 3239,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Flips to Make Binary Grid Palindromic I",
   "titleSlug": "minimum-number-of-flips-to-make-binary-grid-palindromic-i",
   "topicTags": "['Array', 'Two Pointers', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.85997942161606",
   "difficulty": "Medium",
   "frontendQuestionId": 3240,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Flips to Make Binary Grid Palindromic II",
   "titleSlug": "minimum-number-of-flips-to-make-binary-grid-palindromic-ii",
   "topicTags": "['Array', 'Two Pointers', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.793354353626",
   "difficulty": "Hard",
   "frontendQuestionId": 3241,
   "isFavor": false,
   "paidOnly": false,
   "title": "Time Taken to Mark All Nodes",
   "titleSlug": "time-taken-to-mark-all-nodes",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.6049257829435",
   "difficulty": "Easy",
   "frontendQuestionId": 3242,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Neighbor Sum Service",
   "titleSlug": "design-neighbor-sum-service",
   "topicTags": "['Array', 'Hash Table', 'Design', 'Matrix', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.079410653143874",
   "difficulty": "Medium",
   "frontendQuestionId": 3243,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Distance After Road Addition Queries I",
   "titleSlug": "shortest-distance-after-road-addition-queries-i",
   "topicTags": "['Array', 'Breadth-First Search', 'Graph']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.028767614268737",
   "difficulty": "Hard",
   "frontendQuestionId": 3244,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Distance After Road Addition Queries II",
   "titleSlug": "shortest-distance-after-road-addition-queries-ii",
   "topicTags": "['Array', 'Greedy', 'Graph', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "14.471370690314197",
   "difficulty": "Hard",
   "frontendQuestionId": 3245,
   "isFavor": false,
   "paidOnly": false,
   "title": "Alternating Groups III",
   "titleSlug": "alternating-groups-iii",
   "topicTags": "['Array', 'Binary Indexed Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.02163371876165",
   "difficulty": "Easy",
   "frontendQuestionId": 3246,
   "isFavor": false,
   "paidOnly": true,
   "title": "Premier League Table Ranking",
   "titleSlug": "premier-league-table-ranking",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.120098039215684",
   "difficulty": "Medium",
   "frontendQuestionId": 3247,
   "isFavor": false,
   "paidOnly": true,
   "title": "Number of Subsequences with Odd Sum",
   "titleSlug": "number-of-subsequences-with-odd-sum",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.41498924898318",
   "difficulty": "Easy",
   "frontendQuestionId": 3248,
   "isFavor": false,
   "paidOnly": false,
   "title": "Snake in Matrix",
   "titleSlug": "snake-in-matrix",
   "topicTags": "['Array', 'String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.45970288016425",
   "difficulty": "Medium",
   "frontendQuestionId": 3249,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Good Nodes",
   "titleSlug": "count-the-number-of-good-nodes",
   "topicTags": "['Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.40623837610925",
   "difficulty": "Hard",
   "frontendQuestionId": 3250,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Count of Monotonic Pairs I",
   "titleSlug": "find-the-count-of-monotonic-pairs-i",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Combinatorics', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "22.62632334769395",
   "difficulty": "Hard",
   "frontendQuestionId": 3251,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Count of Monotonic Pairs II",
   "titleSlug": "find-the-count-of-monotonic-pairs-ii",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Combinatorics', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.16385048643114",
   "difficulty": "Medium",
   "frontendQuestionId": 3252,
   "isFavor": false,
   "paidOnly": true,
   "title": "Premier League Table Ranking II",
   "titleSlug": "premier-league-table-ranking-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.333333333333336",
   "difficulty": "Medium",
   "frontendQuestionId": 3253,
   "isFavor": false,
   "paidOnly": true,
   "title": "Construct String with Minimum Cost (Easy)",
   "titleSlug": "construct-string-with-minimum-cost-easy",
   "topicTags": "[]",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.54670681449692",
   "difficulty": "Medium",
   "frontendQuestionId": 3254,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Power of K-Size Subarrays I",
   "titleSlug": "find-the-power-of-k-size-subarrays-i",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.00245372754536",
   "difficulty": "Medium",
   "frontendQuestionId": 3255,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Power of K-Size Subarrays II",
   "titleSlug": "find-the-power-of-k-size-subarrays-ii",
   "topicTags": "['Array', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "14.943765807458428",
   "difficulty": "Hard",
   "frontendQuestionId": 3256,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Value Sum by Placing Three Rooks I",
   "titleSlug": "maximum-value-sum-by-placing-three-rooks-i",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.253926985158703",
   "difficulty": "Hard",
   "frontendQuestionId": 3257,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Value Sum by Placing Three Rooks II",
   "titleSlug": "maximum-value-sum-by-placing-three-rooks-ii",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.61819269898265",
   "difficulty": "Easy",
   "frontendQuestionId": 3258,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Substrings That Satisfy K-Constraint I",
   "titleSlug": "count-substrings-that-satisfy-k-constraint-i",
   "topicTags": "['String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.164833497686416",
   "difficulty": "Medium",
   "frontendQuestionId": 3259,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Energy Boost From Two Drinks",
   "titleSlug": "maximum-energy-boost-from-two-drinks",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "15.196881870877474",
   "difficulty": "Hard",
   "frontendQuestionId": 3260,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Largest Palindrome Divisible by K",
   "titleSlug": "find-the-largest-palindrome-divisible-by-k",
   "topicTags": "['Math', 'String', 'Dynamic Programming', 'Greedy', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "21.209577663898216",
   "difficulty": "Hard",
   "frontendQuestionId": 3261,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Substrings That Satisfy K-Constraint II",
   "titleSlug": "count-substrings-that-satisfy-k-constraint-ii",
   "topicTags": "['Array', 'String', 'Binary Search', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.99074074074075",
   "difficulty": "Medium",
   "frontendQuestionId": 3262,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Overlapping Shifts",
   "titleSlug": "find-overlapping-shifts",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "94.7587957925281",
   "difficulty": "Easy",
   "frontendQuestionId": 3263,
   "isFavor": false,
   "paidOnly": true,
   "title": "Convert Doubly Linked List to Array I",
   "titleSlug": "convert-doubly-linked-list-to-array-i",
   "topicTags": "['Array', 'Linked List', 'Doubly-Linked List']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.1719835038005",
   "difficulty": "Easy",
   "frontendQuestionId": 3264,
   "isFavor": false,
   "paidOnly": false,
   "title": "Final Array State After K Multiplication Operations I",
   "titleSlug": "final-array-state-after-k-multiplication-operations-i",
   "topicTags": "['Array', 'Math', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.36464846728687",
   "difficulty": "Medium",
   "frontendQuestionId": 3265,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Almost Equal Pairs I",
   "titleSlug": "count-almost-equal-pairs-i",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Counting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "11.630571503294021",
   "difficulty": "Hard",
   "frontendQuestionId": 3266,
   "isFavor": false,
   "paidOnly": false,
   "title": "Final Array State After K Multiplication Operations II",
   "titleSlug": "final-array-state-after-k-multiplication-operations-ii",
   "topicTags": "['Array', 'Heap (Priority Queue)', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.95127036291035",
   "difficulty": "Hard",
   "frontendQuestionId": 3267,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Almost Equal Pairs II",
   "titleSlug": "count-almost-equal-pairs-ii",
   "topicTags": "['Array', 'Hash Table', 'Sorting', 'Counting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.79216626698641",
   "difficulty": "Hard",
   "frontendQuestionId": 3268,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Overlapping Shifts II",
   "titleSlug": "find-overlapping-shifts-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.72881355932203",
   "difficulty": "Hard",
   "frontendQuestionId": 3269,
   "isFavor": false,
   "paidOnly": true,
   "title": "Constructing Two Increasing Arrays",
   "titleSlug": "constructing-two-increasing-arrays",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.93301355439306",
   "difficulty": "Easy",
   "frontendQuestionId": 3270,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Key of the Numbers",
   "titleSlug": "find-the-key-of-the-numbers",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.91904307710276",
   "difficulty": "Medium",
   "frontendQuestionId": 3271,
   "isFavor": false,
   "paidOnly": false,
   "title": "Hash Divided String",
   "titleSlug": "hash-divided-string",
   "topicTags": "['String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.93181294632573",
   "difficulty": "Hard",
   "frontendQuestionId": 3272,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Count of Good Integers",
   "titleSlug": "find-the-count-of-good-integers",
   "topicTags": "['Hash Table', 'Math', 'Combinatorics', 'Enumeration']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.62745279240982",
   "difficulty": "Hard",
   "frontendQuestionId": 3273,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Amount of Damage Dealt to Bob",
   "titleSlug": "minimum-amount-of-damage-dealt-to-bob",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.80954656338807",
   "difficulty": "Easy",
   "frontendQuestionId": 3274,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Two Chessboard Squares Have the Same Color",
   "titleSlug": "check-if-two-chessboard-squares-have-the-same-color",
   "topicTags": "['Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.88670897129883",
   "difficulty": "Medium",
   "frontendQuestionId": 3275,
   "isFavor": false,
   "paidOnly": false,
   "title": "K-th Nearest Obstacle Queries",
   "titleSlug": "k-th-nearest-obstacle-queries",
   "topicTags": "['Array', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "14.269561588886944",
   "difficulty": "Hard",
   "frontendQuestionId": 3276,
   "isFavor": false,
   "paidOnly": false,
   "title": "Select Cells in Grid With Maximum Score",
   "titleSlug": "select-cells-in-grid-with-maximum-score",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Matrix', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.69787765293383",
   "difficulty": "Hard",
   "frontendQuestionId": 3277,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum XOR Score Subarray Queries",
   "titleSlug": "maximum-xor-score-subarray-queries",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.79774463441251",
   "difficulty": "Medium",
   "frontendQuestionId": 3278,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Candidates for Data Scientist Position II",
   "titleSlug": "find-candidates-for-data-scientist-position-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.75409836065573",
   "difficulty": "Hard",
   "frontendQuestionId": 3279,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Total Area Occupied by Pistons",
   "titleSlug": "maximum-total-area-occupied-by-pistons",
   "topicTags": "['Array', 'Hash Table', 'String', 'Simulation', 'Counting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.77828432807729",
   "difficulty": "Easy",
   "frontendQuestionId": 3280,
   "isFavor": false,
   "paidOnly": false,
   "title": "Convert Date to Binary",
   "titleSlug": "convert-date-to-binary",
   "topicTags": "['Math', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.308084605577164",
   "difficulty": "Medium",
   "frontendQuestionId": 3281,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Score of Numbers in Ranges",
   "titleSlug": "maximize-score-of-numbers-in-ranges",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.4506879871676",
   "difficulty": "Medium",
   "frontendQuestionId": 3282,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reach End of Array With Max Score",
   "titleSlug": "reach-end-of-array-with-max-score",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.889477511166508",
   "difficulty": "Hard",
   "frontendQuestionId": 3283,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Moves to Kill All Pawns",
   "titleSlug": "maximum-number-of-moves-to-kill-all-pawns",
   "topicTags": "['Array', 'Math', 'Bit Manipulation', 'Breadth-First Search', 'Game Theory', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.284403669724774",
   "difficulty": "Medium",
   "frontendQuestionId": 3284,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sum of Consecutive Subarrays",
   "titleSlug": "sum-of-consecutive-subarrays",
   "topicTags": "['Array', 'Two Pointers', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.83588417279141",
   "difficulty": "Easy",
   "frontendQuestionId": 3285,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Indices of Stable Mountains",
   "titleSlug": "find-indices-of-stable-mountains",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.881199440938545",
   "difficulty": "Medium",
   "frontendQuestionId": 3286,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find a Safe Walk Through a Grid",
   "titleSlug": "find-a-safe-walk-through-a-grid",
   "topicTags": "['Array', 'Breadth-First Search', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "18.206195469462898",
   "difficulty": "Hard",
   "frontendQuestionId": 3287,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Sequence Value of Array",
   "titleSlug": "find-the-maximum-sequence-value-of-array",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "16.77567742399195",
   "difficulty": "Hard",
   "frontendQuestionId": 3288,
   "isFavor": false,
   "paidOnly": false,
   "title": "Length of the Longest Increasing Path",
   "titleSlug": "length-of-the-longest-increasing-path",
   "topicTags": "['Array', 'Binary Search', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.1796201773057",
   "difficulty": "Easy",
   "frontendQuestionId": 3289,
   "isFavor": false,
   "paidOnly": false,
   "title": "The Two Sneaky Numbers of Digitville",
   "titleSlug": "the-two-sneaky-numbers-of-digitville",
   "topicTags": "['Array', 'Hash Table', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.89663487887756",
   "difficulty": "Medium",
   "frontendQuestionId": 3290,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Multiplication Score",
   "titleSlug": "maximum-multiplication-score",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "19.723302080951292",
   "difficulty": "Medium",
   "frontendQuestionId": 3291,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Valid Strings to Form Target I",
   "titleSlug": "minimum-number-of-valid-strings-to-form-target-i",
   "topicTags": "['Array', 'String', 'Binary Search', 'Dynamic Programming', 'Trie', 'Segment Tree', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "17.813319793517813",
   "difficulty": "Hard",
   "frontendQuestionId": 3292,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Valid Strings to Form Target II",
   "titleSlug": "minimum-number-of-valid-strings-to-form-target-ii",
   "topicTags": "['Array', 'String', 'Binary Search', 'Dynamic Programming', 'Segment Tree', 'Rolling Hash', 'String Matching', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.71200850159404",
   "difficulty": "Medium",
   "frontendQuestionId": 3293,
   "isFavor": false,
   "paidOnly": true,
   "title": "Calculate Product Final Price",
   "titleSlug": "calculate-product-final-price",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "81.47689768976898",
   "difficulty": "Medium",
   "frontendQuestionId": 3294,
   "isFavor": false,
   "paidOnly": true,
   "title": "Convert Doubly Linked List to Array II",
   "titleSlug": "convert-doubly-linked-list-to-array-ii",
   "topicTags": "['Array', 'Linked List', 'Doubly-Linked List']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.35326564574335",
   "difficulty": "Medium",
   "frontendQuestionId": 3295,
   "isFavor": false,
   "paidOnly": false,
   "title": "Report Spam Message",
   "titleSlug": "report-spam-message",
   "topicTags": "['Array', 'Hash Table', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.68194281237759",
   "difficulty": "Medium",
   "frontendQuestionId": 3296,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Seconds to Make Mountain Height Zero",
   "titleSlug": "minimum-number-of-seconds-to-make-mountain-height-zero",
   "topicTags": "['Array', 'Math', 'Binary Search', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.14167979638832",
   "difficulty": "Medium",
   "frontendQuestionId": 3297,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Substrings That Can Be Rearranged to Contain a String I",
   "titleSlug": "count-substrings-that-can-be-rearranged-to-contain-a-string-i",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.297263173530396",
   "difficulty": "Hard",
   "frontendQuestionId": 3298,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Substrings That Can Be Rearranged to Contain a String II",
   "titleSlug": "count-substrings-that-can-be-rearranged-to-contain-a-string-ii",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.9098083427283",
   "difficulty": "Hard",
   "frontendQuestionId": 3299,
   "isFavor": false,
   "paidOnly": true,
   "title": "Sum of Consecutive Subsequences",
   "titleSlug": "sum-of-consecutive-subsequences",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.29056742928262",
   "difficulty": "Easy",
   "frontendQuestionId": 3300,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Element After Replacement With Digit Sum",
   "titleSlug": "minimum-element-after-replacement-with-digit-sum",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.09344028027474",
   "difficulty": "Medium",
   "frontendQuestionId": 3301,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize the Total Height of Unique Towers",
   "titleSlug": "maximize-the-total-height-of-unique-towers",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "19.99031945788964",
   "difficulty": "Medium",
   "frontendQuestionId": 3302,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Lexicographically Smallest Valid Sequence",
   "titleSlug": "find-the-lexicographically-smallest-valid-sequence",
   "topicTags": "['Two Pointers', 'String', 'Dynamic Programming', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "13.469652710159039",
   "difficulty": "Hard",
   "frontendQuestionId": 3303,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Occurrence of First Almost Equal Substring",
   "titleSlug": "find-the-occurrence-of-first-almost-equal-substring",
   "topicTags": "['String', 'String Matching']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.72691056370759",
   "difficulty": "Easy",
   "frontendQuestionId": 3304,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the K-th Character in String Game I",
   "titleSlug": "find-the-k-th-character-in-string-game-i",
   "topicTags": "['Math', 'Bit Manipulation', 'Recursion', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.963703402543146",
   "difficulty": "Medium",
   "frontendQuestionId": 3305,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count of Substrings Containing Every Vowel and K Consonants I",
   "titleSlug": "count-of-substrings-containing-every-vowel-and-k-consonants-i",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.7296457146298",
   "difficulty": "Medium",
   "frontendQuestionId": 3306,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count of Substrings Containing Every Vowel and K Consonants II",
   "titleSlug": "count-of-substrings-containing-every-vowel-and-k-consonants-ii",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.910287273310864",
   "difficulty": "Hard",
   "frontendQuestionId": 3307,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the K-th Character in String Game II",
   "titleSlug": "find-the-k-th-character-in-string-game-ii",
   "topicTags": "['Math', 'Bit Manipulation', 'Recursion']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.20242914979757",
   "difficulty": "Medium",
   "frontendQuestionId": 3308,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Top Performing Driver",
   "titleSlug": "find-top-performing-driver",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.92125531670308",
   "difficulty": "Medium",
   "frontendQuestionId": 3309,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Possible Number by Binary Concatenation",
   "titleSlug": "maximum-possible-number-by-binary-concatenation",
   "topicTags": "['Array', 'Bit Manipulation', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.018658130817506",
   "difficulty": "Medium",
   "frontendQuestionId": 3310,
   "isFavor": false,
   "paidOnly": false,
   "title": "Remove Methods From Project",
   "titleSlug": "remove-methods-from-project",
   "topicTags": "['Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.920919361121932",
   "difficulty": "Hard",
   "frontendQuestionId": 3311,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct 2D Grid Matching Graph Layout",
   "titleSlug": "construct-2d-grid-matching-graph-layout",
   "topicTags": "['Array', 'Hash Table', 'Graph', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "19.932976454715583",
   "difficulty": "Hard",
   "frontendQuestionId": 3312,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sorted GCD Pair Queries",
   "titleSlug": "sorted-gcd-pair-queries",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Binary Search', 'Combinatorics', 'Counting', 'Number Theory', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.03211009174312",
   "difficulty": "Hard",
   "frontendQuestionId": 3313,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Last Marked Nodes in Tree",
   "titleSlug": "find-the-last-marked-nodes-in-tree",
   "topicTags": "['Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.72390715461836",
   "difficulty": "Easy",
   "frontendQuestionId": 3314,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct the Minimum Bitwise Array I",
   "titleSlug": "construct-the-minimum-bitwise-array-i",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.5142547082363",
   "difficulty": "Medium",
   "frontendQuestionId": 3315,
   "isFavor": false,
   "paidOnly": false,
   "title": "Construct the Minimum Bitwise Array II",
   "titleSlug": "construct-the-minimum-bitwise-array-ii",
   "topicTags": "['Array', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "38.683646932843814",
   "difficulty": "Medium",
   "frontendQuestionId": 3316,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Maximum Removals From Source String",
   "titleSlug": "find-maximum-removals-from-source-string",
   "topicTags": "['Array', 'Hash Table', 'Two Pointers', 'String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.652316672747176",
   "difficulty": "Hard",
   "frontendQuestionId": 3317,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Number of Possible Ways for an Event",
   "titleSlug": "find-the-number-of-possible-ways-for-an-event",
   "topicTags": "['Math', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.22032539873367",
   "difficulty": "Easy",
   "frontendQuestionId": 3318,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find X-Sum of All K-Long Subarrays I",
   "titleSlug": "find-x-sum-of-all-k-long-subarrays-i",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.74439112955518",
   "difficulty": "Medium",
   "frontendQuestionId": 3319,
   "isFavor": false,
   "paidOnly": false,
   "title": "K-th Largest Perfect Subtree Size in Binary Tree",
   "titleSlug": "k-th-largest-perfect-subtree-size-in-binary-tree",
   "topicTags": "['Tree', 'Depth-First Search', 'Sorting', 'Binary Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.548319822395644",
   "difficulty": "Hard",
   "frontendQuestionId": 3320,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count The Number of Winning Sequences",
   "titleSlug": "count-the-number-of-winning-sequences",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "15.532063197026021",
   "difficulty": "Hard",
   "frontendQuestionId": 3321,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find X-Sum of All K-Long Subarrays II",
   "titleSlug": "find-x-sum-of-all-k-long-subarrays-ii",
   "topicTags": "['Array', 'Hash Table', 'Sliding Window', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.4881995954147",
   "difficulty": "Medium",
   "frontendQuestionId": 3322,
   "isFavor": false,
   "paidOnly": true,
   "title": "Premier League Table Ranking III",
   "titleSlug": "premier-league-table-ranking-iii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.94773118897186",
   "difficulty": "Medium",
   "frontendQuestionId": 3323,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimize Connected Groups by Inserting Interval",
   "titleSlug": "minimize-connected-groups-by-inserting-interval",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "79.0101842560369",
   "difficulty": "Medium",
   "frontendQuestionId": 3324,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Sequence of Strings Appeared on the Screen",
   "titleSlug": "find-the-sequence-of-strings-appeared-on-the-screen",
   "topicTags": "['String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.25649481642605",
   "difficulty": "Medium",
   "frontendQuestionId": 3325,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Substrings With K-Frequency Characters I",
   "titleSlug": "count-substrings-with-k-frequency-characters-i",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.374762012541773",
   "difficulty": "Medium",
   "frontendQuestionId": 3326,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Division Operations to Make Array Non Decreasing",
   "titleSlug": "minimum-division-operations-to-make-array-non-decreasing",
   "topicTags": "['Array', 'Math', 'Greedy', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.643494598403006",
   "difficulty": "Hard",
   "frontendQuestionId": 3327,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if DFS Strings Are Palindromes",
   "titleSlug": "check-if-dfs-strings-are-palindromes",
   "topicTags": "['Array', 'Hash Table', 'String', 'Tree', 'Depth-First Search', 'Hash Function']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.52061855670104",
   "difficulty": "Medium",
   "frontendQuestionId": 3328,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Cities in Each State II",
   "titleSlug": "find-cities-in-each-state-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "70.40690505548706",
   "difficulty": "Hard",
   "frontendQuestionId": 3329,
   "isFavor": false,
   "paidOnly": true,
   "title": "Count Substrings With K-Frequency Characters II",
   "titleSlug": "count-substrings-with-k-frequency-characters-ii",
   "topicTags": "['Hash Table', 'String', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.360510361053294",
   "difficulty": "Easy",
   "frontendQuestionId": 3330,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Original Typed String I",
   "titleSlug": "find-the-original-typed-string-i",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.48553643354083",
   "difficulty": "Medium",
   "frontendQuestionId": 3331,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Subtree Sizes After Changes",
   "titleSlug": "find-subtree-sizes-after-changes",
   "topicTags": "['Array', 'Hash Table', 'String', 'Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.57526198793268",
   "difficulty": "Medium",
   "frontendQuestionId": 3332,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Points Tourist Can Earn",
   "titleSlug": "maximum-points-tourist-can-earn",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "16.2333661902415",
   "difficulty": "Hard",
   "frontendQuestionId": 3333,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Original Typed String II",
   "titleSlug": "find-the-original-typed-string-ii",
   "topicTags": "['String', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.17272240777989",
   "difficulty": "Medium",
   "frontendQuestionId": 3334,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Factor Score of Array",
   "titleSlug": "find-the-maximum-factor-score-of-array",
   "topicTags": "['Array', 'Math', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.347227421428688",
   "difficulty": "Medium",
   "frontendQuestionId": 3335,
   "isFavor": false,
   "paidOnly": false,
   "title": "Total Characters in String After Transformations I",
   "titleSlug": "total-characters-in-string-after-transformations-i",
   "topicTags": "['Hash Table', 'Math', 'String', 'Dynamic Programming', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.782290320595656",
   "difficulty": "Hard",
   "frontendQuestionId": 3336,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Number of Subsequences With Equal GCD",
   "titleSlug": "find-the-number-of-subsequences-with-equal-gcd",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.64266597599931",
   "difficulty": "Hard",
   "frontendQuestionId": 3337,
   "isFavor": false,
   "paidOnly": false,
   "title": "Total Characters in String After Transformations II",
   "titleSlug": "total-characters-in-string-after-transformations-ii",
   "topicTags": "['Hash Table', 'Math', 'String', 'Dynamic Programming', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.58333333333334",
   "difficulty": "Medium",
   "frontendQuestionId": 3338,
   "isFavor": false,
   "paidOnly": true,
   "title": "Second Highest Salary II",
   "titleSlug": "second-highest-salary-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.72043010752689",
   "difficulty": "Medium",
   "frontendQuestionId": 3339,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Number of K-Even Arrays",
   "titleSlug": "find-the-number-of-k-even-arrays",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.03493968373024",
   "difficulty": "Easy",
   "frontendQuestionId": 3340,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check Balanced String",
   "titleSlug": "check-balanced-string",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.64286164910731",
   "difficulty": "Medium",
   "frontendQuestionId": 3341,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Minimum Time to Reach Last Room I",
   "titleSlug": "find-minimum-time-to-reach-last-room-i",
   "topicTags": "['Array', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.868173258003765",
   "difficulty": "Medium",
   "frontendQuestionId": 3342,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Minimum Time to Reach Last Room II",
   "titleSlug": "find-minimum-time-to-reach-last-room-ii",
   "topicTags": "['Array', 'Graph', 'Heap (Priority Queue)', 'Matrix', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "15.737730912550543",
   "difficulty": "Hard",
   "frontendQuestionId": 3343,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Number of Balanced Permutations",
   "titleSlug": "count-number-of-balanced-permutations",
   "topicTags": "['Math', 'String', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.28113440197287",
   "difficulty": "Medium",
   "frontendQuestionId": 3344,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Sized Array",
   "titleSlug": "maximum-sized-array",
   "topicTags": "['Binary Search', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.826532639357936",
   "difficulty": "Easy",
   "frontendQuestionId": 3345,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Divisible Digit Product I",
   "titleSlug": "smallest-divisible-digit-product-i",
   "topicTags": "['Math', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.60572389561248",
   "difficulty": "Medium",
   "frontendQuestionId": 3346,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Frequency of an Element After Performing Operations I",
   "titleSlug": "maximum-frequency-of-an-element-after-performing-operations-i",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.229341581970836",
   "difficulty": "Hard",
   "frontendQuestionId": 3347,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Frequency of an Element After Performing Operations II",
   "titleSlug": "maximum-frequency-of-an-element-after-performing-operations-ii",
   "topicTags": "['Array', 'Binary Search', 'Sliding Window', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "9.992069785884219",
   "difficulty": "Hard",
   "frontendQuestionId": 3348,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Divisible Digit Product II",
   "titleSlug": "smallest-divisible-digit-product-ii",
   "topicTags": "['Math', 'String', 'Backtracking', 'Greedy', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.726774094641094",
   "difficulty": "Easy",
   "frontendQuestionId": 3349,
   "isFavor": false,
   "paidOnly": false,
   "title": "Adjacent Increasing Subarrays Detection I",
   "titleSlug": "adjacent-increasing-subarrays-detection-i",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.69994323825741",
   "difficulty": "Medium",
   "frontendQuestionId": 3350,
   "isFavor": false,
   "paidOnly": false,
   "title": "Adjacent Increasing Subarrays Detection II",
   "titleSlug": "adjacent-increasing-subarrays-detection-ii",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.39110070257611",
   "difficulty": "Hard",
   "frontendQuestionId": 3351,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Good Subsequences",
   "titleSlug": "sum-of-good-subsequences",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.16416040100251",
   "difficulty": "Hard",
   "frontendQuestionId": 3352,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count K-Reducible Numbers Less Than N",
   "titleSlug": "count-k-reducible-numbers-less-than-n",
   "topicTags": "['Math', 'String', 'Dynamic Programming', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.45733041575492",
   "difficulty": "Easy",
   "frontendQuestionId": 3353,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Total Operations",
   "titleSlug": "minimum-total-operations",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.30333089694059",
   "difficulty": "Easy",
   "frontendQuestionId": 3354,
   "isFavor": false,
   "paidOnly": false,
   "title": "Make Array Elements Equal to Zero",
   "titleSlug": "make-array-elements-equal-to-zero",
   "topicTags": "['Array', 'Simulation', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.71284003035937",
   "difficulty": "Medium",
   "frontendQuestionId": 3355,
   "isFavor": false,
   "paidOnly": false,
   "title": "Zero Array Transformation I",
   "titleSlug": "zero-array-transformation-i",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.81640035843748",
   "difficulty": "Medium",
   "frontendQuestionId": 3356,
   "isFavor": false,
   "paidOnly": false,
   "title": "Zero Array Transformation II",
   "titleSlug": "zero-array-transformation-ii",
   "topicTags": "['Array', 'Binary Search', 'Prefix Sum']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "15.121214301129415",
   "difficulty": "Hard",
   "frontendQuestionId": 3357,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize the Maximum Adjacent Element Difference",
   "titleSlug": "minimize-the-maximum-adjacent-element-difference",
   "topicTags": "['Array', 'Binary Search', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "92.83225485316078",
   "difficulty": "Easy",
   "frontendQuestionId": 3358,
   "isFavor": false,
   "paidOnly": true,
   "title": "Books with NULL Ratings",
   "titleSlug": "books-with-null-ratings",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.30549898167006",
   "difficulty": "Hard",
   "frontendQuestionId": 3359,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Sorted Submatrices With Maximum Element at Most K",
   "titleSlug": "find-sorted-submatrices-with-maximum-element-at-most-k",
   "topicTags": "['Array', 'Stack', 'Matrix', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "41.382035705430205",
   "difficulty": "Easy",
   "frontendQuestionId": 3360,
   "isFavor": false,
   "paidOnly": false,
   "title": "Stone Removal Game",
   "titleSlug": "stone-removal-game",
   "topicTags": "['Math', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.43501956400224",
   "difficulty": "Medium",
   "frontendQuestionId": 3361,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shift Distance Between Two Strings",
   "titleSlug": "shift-distance-between-two-strings",
   "topicTags": "['Array', 'String', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.868948212743202",
   "difficulty": "Medium",
   "frontendQuestionId": 3362,
   "isFavor": false,
   "paidOnly": false,
   "title": "Zero Array Transformation III",
   "titleSlug": "zero-array-transformation-iii",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.21907394609537",
   "difficulty": "Hard",
   "frontendQuestionId": 3363,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Maximum Number of Fruits Collected",
   "titleSlug": "find-the-maximum-number-of-fruits-collected",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.1217799252746",
   "difficulty": "Easy",
   "frontendQuestionId": 3364,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Positive Sum Subarray ",
   "titleSlug": "minimum-positive-sum-subarray",
   "topicTags": "['Array', 'Sliding Window', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "52.10243051288983",
   "difficulty": "Medium",
   "frontendQuestionId": 3365,
   "isFavor": false,
   "paidOnly": false,
   "title": "Rearrange K Substrings to Form Target String",
   "titleSlug": "rearrange-k-substrings-to-form-target-string",
   "topicTags": "['Hash Table', 'String', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.209443263533984",
   "difficulty": "Medium",
   "frontendQuestionId": 3366,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Array Sum",
   "titleSlug": "minimum-array-sum",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.52782138496424",
   "difficulty": "Hard",
   "frontendQuestionId": 3367,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Sum of Weights after Edge Removals",
   "titleSlug": "maximize-sum-of-weights-after-edge-removals",
   "topicTags": "['Dynamic Programming', 'Tree', 'Depth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.53541076487252",
   "difficulty": "Hard",
   "frontendQuestionId": 3368,
   "isFavor": false,
   "paidOnly": true,
   "title": "First Letter Capitalization",
   "titleSlug": "first-letter-capitalization",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "33.98464759246336",
   "difficulty": "Hard",
   "frontendQuestionId": 3369,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design an Array Statistics Tracker ",
   "titleSlug": "design-an-array-statistics-tracker",
   "topicTags": "['Hash Table', 'Binary Search', 'Design', 'Queue', 'Heap (Priority Queue)', 'Data Stream', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.46226455756218",
   "difficulty": "Easy",
   "frontendQuestionId": 3370,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Number With All Set Bits",
   "titleSlug": "smallest-number-with-all-set-bits",
   "topicTags": "['Math', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.69407638347623",
   "difficulty": "Medium",
   "frontendQuestionId": 3371,
   "isFavor": false,
   "paidOnly": false,
   "title": "Identify the Largest Outlier in an Array",
   "titleSlug": "identify-the-largest-outlier-in-an-array",
   "topicTags": "['Array', 'Hash Table', 'Counting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "47.90461694571284",
   "difficulty": "Medium",
   "frontendQuestionId": 3372,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize the Number of Target Nodes After Connecting Trees I",
   "titleSlug": "maximize-the-number-of-target-nodes-after-connecting-trees-i",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "53.75210419066182",
   "difficulty": "Hard",
   "frontendQuestionId": 3373,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize the Number of Target Nodes After Connecting Trees II",
   "titleSlug": "maximize-the-number-of-target-nodes-after-connecting-trees-ii",
   "topicTags": "['Tree', 'Depth-First Search', 'Breadth-First Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.19110731081659",
   "difficulty": "Hard",
   "frontendQuestionId": 3374,
   "isFavor": false,
   "paidOnly": false,
   "title": "First Letter Capitalization II",
   "titleSlug": "first-letter-capitalization-ii",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.13878637985228",
   "difficulty": "Easy",
   "frontendQuestionId": 3375,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make Array Values Equal to K",
   "titleSlug": "minimum-operations-to-make-array-values-equal-to-k",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.356130356130357",
   "difficulty": "Medium",
   "frontendQuestionId": 3376,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Time to Break Locks I",
   "titleSlug": "minimum-time-to-break-locks-i",
   "topicTags": "['Array', 'Dynamic Programming', 'Backtracking', 'Bit Manipulation', 'Depth-First Search', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.10045703019984",
   "difficulty": "Medium",
   "frontendQuestionId": 3377,
   "isFavor": false,
   "paidOnly": false,
   "title": "Digit Operations to Make Two Integers Equal",
   "titleSlug": "digit-operations-to-make-two-integers-equal",
   "topicTags": "['Math', 'Graph', 'Heap (Priority Queue)', 'Number Theory', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.66777101471608",
   "difficulty": "Hard",
   "frontendQuestionId": 3378,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Connected Components in LCM Graph",
   "titleSlug": "count-connected-components-in-lcm-graph",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Union Find', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "56.2254186901047",
   "difficulty": "Easy",
   "frontendQuestionId": 3379,
   "isFavor": false,
   "paidOnly": false,
   "title": "Transformed Array",
   "titleSlug": "transformed-array",
   "topicTags": "['Array', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "50.96318749252183",
   "difficulty": "Medium",
   "frontendQuestionId": 3380,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Area Rectangle With Point Constraints I",
   "titleSlug": "maximum-area-rectangle-with-point-constraints-i",
   "topicTags": "['Array', 'Math', 'Binary Indexed Tree', 'Segment Tree', 'Geometry', 'Sorting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.845113706207748",
   "difficulty": "Medium",
   "frontendQuestionId": 3381,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Subarray Sum With Length Divisible by K",
   "titleSlug": "maximum-subarray-sum-with-length-divisible-by-k",
   "topicTags": "['Array', 'Hash Table', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.103243401188273",
   "difficulty": "Hard",
   "frontendQuestionId": 3382,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Area Rectangle With Point Constraints II",
   "titleSlug": "maximum-area-rectangle-with-point-constraints-ii",
   "topicTags": "['Array', 'Math', 'Binary Indexed Tree', 'Segment Tree', 'Geometry', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.903361344537814",
   "difficulty": "Hard",
   "frontendQuestionId": 3383,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Runes to Add to Cast Spell",
   "titleSlug": "minimum-runes-to-add-to-cast-spell",
   "topicTags": "['Array', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph', 'Topological Sort']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.50826901874312",
   "difficulty": "Hard",
   "frontendQuestionId": 3384,
   "isFavor": false,
   "paidOnly": true,
   "title": "Team Dominance by Pass Success",
   "titleSlug": "team-dominance-by-pass-success",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.420824295010846",
   "difficulty": "Hard",
   "frontendQuestionId": 3385,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Time to Break Locks II",
   "titleSlug": "minimum-time-to-break-locks-ii",
   "topicTags": "['Array', 'Depth-First Search', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.41273245625507",
   "difficulty": "Easy",
   "frontendQuestionId": 3386,
   "isFavor": false,
   "paidOnly": false,
   "title": "Button with Longest Push Time",
   "titleSlug": "button-with-longest-push-time",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.841683987087066",
   "difficulty": "Medium",
   "frontendQuestionId": 3387,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Amount After Two Days of Conversions",
   "titleSlug": "maximize-amount-after-two-days-of-conversions",
   "topicTags": "['Array', 'String', 'Depth-First Search', 'Breadth-First Search', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "15.632492293640826",
   "difficulty": "Medium",
   "frontendQuestionId": 3388,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Beautiful Splits in an Array",
   "titleSlug": "count-beautiful-splits-in-an-array",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.153577661431065",
   "difficulty": "Hard",
   "frontendQuestionId": 3389,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make Character Frequencies Equal",
   "titleSlug": "minimum-operations-to-make-character-frequencies-equal",
   "topicTags": "['Hash Table', 'String', 'Dynamic Programming', 'Counting', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.96455424274973",
   "difficulty": "Hard",
   "frontendQuestionId": 3390,
   "isFavor": false,
   "paidOnly": true,
   "title": "Longest Team Pass Streak",
   "titleSlug": "longest-team-pass-streak",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.0",
   "difficulty": "Medium",
   "frontendQuestionId": 3391,
   "isFavor": false,
   "paidOnly": true,
   "title": "Design a 3D Binary Matrix with Efficient Layer Tracking",
   "titleSlug": "design-a-3d-binary-matrix-with-efficient-layer-tracking",
   "topicTags": "['Array', 'Hash Table', 'Design', 'Heap (Priority Queue)', 'Matrix', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.643216596487626",
   "difficulty": "Easy",
   "frontendQuestionId": 3392,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Subarrays of Length Three With a Condition",
   "titleSlug": "count-subarrays-of-length-three-with-a-condition",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.73299011801662",
   "difficulty": "Medium",
   "frontendQuestionId": 3393,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Paths With the Given XOR Value",
   "titleSlug": "count-paths-with-the-given-xor-value",
   "topicTags": "['Array', 'Dynamic Programming', 'Bit Manipulation', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.14072582726757",
   "difficulty": "Medium",
   "frontendQuestionId": 3394,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check if Grid can be Cut into Sections",
   "titleSlug": "check-if-grid-can-be-cut-into-sections",
   "topicTags": "['Array', 'Sorting']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "16.565674567813225",
   "difficulty": "Hard",
   "frontendQuestionId": 3395,
   "isFavor": false,
   "paidOnly": false,
   "title": "Subsequences with a Unique Middle Mode I",
   "titleSlug": "subsequences-with-a-unique-middle-mode-i",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "71.56169864027706",
   "difficulty": "Easy",
   "frontendQuestionId": 3396,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Number of Operations to Make Elements in Array Distinct",
   "titleSlug": "minimum-number-of-operations-to-make-elements-in-array-distinct",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": true,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.17350959296248",
   "difficulty": "Medium",
   "frontendQuestionId": 3397,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Number of Distinct Elements After Operations",
   "titleSlug": "maximum-number-of-distinct-elements-after-operations",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "18.886909784069246",
   "difficulty": "Hard",
   "frontendQuestionId": 3398,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Substring With Identical Characters I",
   "titleSlug": "smallest-substring-with-identical-characters-i",
   "topicTags": "['Array', 'Binary Search', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.565762613006704",
   "difficulty": "Hard",
   "frontendQuestionId": 3399,
   "isFavor": false,
   "paidOnly": false,
   "title": "Smallest Substring With Identical Characters II",
   "titleSlug": "smallest-substring-with-identical-characters-ii",
   "topicTags": "['String', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.46712802768167",
   "difficulty": "Medium",
   "frontendQuestionId": 3400,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Number of Matching Indices After Right Shifts",
   "titleSlug": "maximum-number-of-matching-indices-after-right-shifts",
   "topicTags": "['Array', 'Two Pointers', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "55.3314121037464",
   "difficulty": "Hard",
   "frontendQuestionId": 3401,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Circular Gift Exchange Chains",
   "titleSlug": "find-circular-gift-exchange-chains",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.06947329117173",
   "difficulty": "Easy",
   "frontendQuestionId": 3402,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make Columns Strictly Increasing",
   "titleSlug": "minimum-operations-to-make-columns-strictly-increasing",
   "topicTags": "['Array', 'Greedy', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.659382538073963",
   "difficulty": "Medium",
   "frontendQuestionId": 3403,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Lexicographically Largest String From the Box I",
   "titleSlug": "find-the-lexicographically-largest-string-from-the-box-i",
   "topicTags": "['Two Pointers', 'String', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.42538861661505",
   "difficulty": "Medium",
   "frontendQuestionId": 3404,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Special Subsequences",
   "titleSlug": "count-special-subsequences",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "37.67531964354901",
   "difficulty": "Hard",
   "frontendQuestionId": 3405,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count the Number of Arrays with K Matching Adjacent Elements",
   "titleSlug": "count-the-number-of-arrays-with-k-matching-adjacent-elements",
   "topicTags": "['Math', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.29682997118156",
   "difficulty": "Hard",
   "frontendQuestionId": 3406,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find the Lexicographically Largest String From the Box II",
   "titleSlug": "find-the-lexicographically-largest-string-from-the-box-ii",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.38591842528627",
   "difficulty": "Easy",
   "frontendQuestionId": 3407,
   "isFavor": false,
   "paidOnly": false,
   "title": "Substring Matching Pattern",
   "titleSlug": "substring-matching-pattern",
   "topicTags": "['String', 'String Matching']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "34.13862598535677",
   "difficulty": "Medium",
   "frontendQuestionId": 3408,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Task Manager",
   "titleSlug": "design-task-manager",
   "topicTags": "['Hash Table', 'Design', 'Heap (Priority Queue)', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "14.123585015754465",
   "difficulty": "Medium",
   "frontendQuestionId": 3409,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Subsequence With Decreasing Adjacent Difference",
   "titleSlug": "longest-subsequence-with-decreasing-adjacent-difference",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.26943326107154",
   "difficulty": "Hard",
   "frontendQuestionId": 3410,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Subarray Sum After Removing All Occurrences of One Element",
   "titleSlug": "maximize-subarray-sum-after-removing-all-occurrences-of-one-element",
   "topicTags": "['Array', 'Dynamic Programming', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.9357613542201",
   "difficulty": "Easy",
   "frontendQuestionId": 3411,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Subarray With Equal Products",
   "titleSlug": "maximum-subarray-with-equal-products",
   "topicTags": "['Array', 'Math', 'Sliding Window', 'Enumeration', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.115887655671926",
   "difficulty": "Medium",
   "frontendQuestionId": 3412,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Mirror Score of a String",
   "titleSlug": "find-mirror-score-of-a-string",
   "topicTags": "['Hash Table', 'String', 'Stack', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.546981516620985",
   "difficulty": "Medium",
   "frontendQuestionId": 3413,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Coins From K Consecutive Bags",
   "titleSlug": "maximum-coins-from-k-consecutive-bags",
   "topicTags": "['Array', 'Binary Search', 'Greedy', 'Sliding Window', 'Sorting', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.26768092105263",
   "difficulty": "Hard",
   "frontendQuestionId": 3414,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Score of Non-overlapping Intervals",
   "titleSlug": "maximum-score-of-non-overlapping-intervals",
   "topicTags": "['Array', 'Binary Search', 'Dynamic Programming', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "82.50244379276637",
   "difficulty": "Easy",
   "frontendQuestionId": 3415,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Products with Three Consecutive Digits ",
   "titleSlug": "find-products-with-three-consecutive-digits",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.66197183098591",
   "difficulty": "Hard",
   "frontendQuestionId": 3416,
   "isFavor": false,
   "paidOnly": true,
   "title": "Subsequences with a Unique Middle Mode II",
   "titleSlug": "subsequences-with-a-unique-middle-mode-ii",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.11893469536666",
   "difficulty": "Easy",
   "frontendQuestionId": 3417,
   "isFavor": false,
   "paidOnly": false,
   "title": "Zigzag Grid Traversal With Skip",
   "titleSlug": "zigzag-grid-traversal-with-skip",
   "topicTags": "['Array', 'Matrix', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.797272392185768",
   "difficulty": "Medium",
   "frontendQuestionId": 3418,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Amount of Money Robot Can Earn",
   "titleSlug": "maximum-amount-of-money-robot-can-earn",
   "topicTags": "['Array', 'Dynamic Programming', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.23749949877701",
   "difficulty": "Medium",
   "frontendQuestionId": 3419,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimize the Maximum Edge Weight of Graph",
   "titleSlug": "minimize-the-maximum-edge-weight-of-graph",
   "topicTags": "['Binary Search', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Shortest Path']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "21.819031303535276",
   "difficulty": "Hard",
   "frontendQuestionId": 3420,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Non-Decreasing Subarrays After K Operations",
   "titleSlug": "count-non-decreasing-subarrays-after-k-operations",
   "topicTags": "['Array', 'Stack', 'Segment Tree', 'Queue', 'Sliding Window', 'Monotonic Stack', 'Monotonic Queue']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "48.444185141968106",
   "difficulty": "Medium",
   "frontendQuestionId": 3421,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Students Who Improved",
   "titleSlug": "find-students-who-improved",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.94011976047904",
   "difficulty": "Medium",
   "frontendQuestionId": 3422,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Operations to Make Subarray Elements Equal",
   "titleSlug": "minimum-operations-to-make-subarray-elements-equal",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Sliding Window', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "73.75962958527921",
   "difficulty": "Easy",
   "frontendQuestionId": 3423,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Difference Between Adjacent Elements in a Circular Array",
   "titleSlug": "maximum-difference-between-adjacent-elements-in-a-circular-array",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.686332510745395",
   "difficulty": "Medium",
   "frontendQuestionId": 3424,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Make Arrays Identical",
   "titleSlug": "minimum-cost-to-make-arrays-identical",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.07801743919229",
   "difficulty": "Hard",
   "frontendQuestionId": 3425,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Special Path",
   "titleSlug": "longest-special-path",
   "topicTags": "['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.79374275782155",
   "difficulty": "Hard",
   "frontendQuestionId": 3426,
   "isFavor": false,
   "paidOnly": false,
   "title": "Manhattan Distances of All Arrangements of Pieces",
   "titleSlug": "manhattan-distances-of-all-arrangements-of-pieces",
   "topicTags": "['Math', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "85.98608088599686",
   "difficulty": "Easy",
   "frontendQuestionId": 3427,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Variable Length Subarrays",
   "titleSlug": "sum-of-variable-length-subarrays",
   "topicTags": "['Array', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "21.035999999999998",
   "difficulty": "Medium",
   "frontendQuestionId": 3428,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum and Minimum Sums of at Most Size K Subsequences",
   "titleSlug": "maximum-and-minimum-sums-of-at-most-size-k-subsequences",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Sorting', 'Combinatorics']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.371577574967404",
   "difficulty": "Medium",
   "frontendQuestionId": 3429,
   "isFavor": false,
   "paidOnly": false,
   "title": "Paint House IV",
   "titleSlug": "paint-house-iv",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.477430140912347",
   "difficulty": "Hard",
   "frontendQuestionId": 3430,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum and Minimum Sums of at Most Size K Subarrays",
   "titleSlug": "maximum-and-minimum-sums-of-at-most-size-k-subarrays",
   "topicTags": "['Array', 'Math', 'Stack', 'Monotonic Stack']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "59.523809523809526",
   "difficulty": "Medium",
   "frontendQuestionId": 3431,
   "isFavor": false,
   "paidOnly": true,
   "title": "Minimum Unlocked Indices to Sort Nums",
   "titleSlug": "minimum-unlocked-indices-to-sort-nums",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.65975988330779",
   "difficulty": "Easy",
   "frontendQuestionId": 3432,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Partitions with Even Sum Difference",
   "titleSlug": "count-partitions-with-even-sum-difference",
   "topicTags": "['Array', 'Math', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.139103554868623",
   "difficulty": "Medium",
   "frontendQuestionId": 3433,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Mentions Per User",
   "titleSlug": "count-mentions-per-user",
   "topicTags": "['Array', 'Math', 'Sorting', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "23.49835621736608",
   "difficulty": "Medium",
   "frontendQuestionId": 3434,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Frequency After Subarray Operation",
   "titleSlug": "maximum-frequency-after-subarray-operation",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming', 'Greedy', 'Enumeration', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.601686972820993",
   "difficulty": "Hard",
   "frontendQuestionId": 3435,
   "isFavor": false,
   "paidOnly": false,
   "title": "Frequencies of Shortest Supersequences",
   "titleSlug": "frequencies-of-shortest-supersequences",
   "topicTags": "['Array', 'String', 'Bit Manipulation', 'Graph', 'Topological Sort', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.49778493757552",
   "difficulty": "Easy",
   "frontendQuestionId": 3436,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Valid Emails",
   "titleSlug": "find-valid-emails",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.05463182897863",
   "difficulty": "Medium",
   "frontendQuestionId": 3437,
   "isFavor": false,
   "paidOnly": true,
   "title": "Permutations III",
   "titleSlug": "permutations-iii",
   "topicTags": "['Array', 'Backtracking']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "61.608362134367354",
   "difficulty": "Easy",
   "frontendQuestionId": 3438,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Valid Pair of Adjacent Digits in String",
   "titleSlug": "find-valid-pair-of-adjacent-digits-in-string",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.431496147836864",
   "difficulty": "Medium",
   "frontendQuestionId": 3439,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reschedule Meetings for Maximum Free Time I",
   "titleSlug": "reschedule-meetings-for-maximum-free-time-i",
   "topicTags": "['Array', 'Greedy', 'Sliding Window']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "40.18582104625328",
   "difficulty": "Medium",
   "frontendQuestionId": 3440,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reschedule Meetings for Maximum Free Time II",
   "titleSlug": "reschedule-meetings-for-maximum-free-time-ii",
   "topicTags": "['Array', 'Greedy', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "19.180449271784745",
   "difficulty": "Hard",
   "frontendQuestionId": 3441,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost Good Caption",
   "titleSlug": "minimum-cost-good-caption",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "49.12352373170913",
   "difficulty": "Easy",
   "frontendQuestionId": 3442,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Difference Between Even and Odd Frequency I",
   "titleSlug": "maximum-difference-between-even-and-odd-frequency-i",
   "topicTags": "['Hash Table', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.998767444634407",
   "difficulty": "Medium",
   "frontendQuestionId": 3443,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Manhattan Distance After K Changes",
   "titleSlug": "maximum-manhattan-distance-after-k-changes",
   "topicTags": "['Hash Table', 'Math', 'String', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "25.634270101483214",
   "difficulty": "Hard",
   "frontendQuestionId": 3444,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Increments for Target Multiples in an Array",
   "titleSlug": "minimum-increments-for-target-multiples-in-an-array",
   "topicTags": "['Array', 'Math', 'Dynamic Programming', 'Bit Manipulation', 'Number Theory', 'Bitmask']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "19.318287359524472",
   "difficulty": "Hard",
   "frontendQuestionId": 3445,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Difference Between Even and Odd Frequency II",
   "titleSlug": "maximum-difference-between-even-and-odd-frequency-ii",
   "topicTags": "['String', 'Sliding Window', 'Enumeration', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "72.54871395167577",
   "difficulty": "Medium",
   "frontendQuestionId": 3446,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sort Matrix by Diagonals",
   "titleSlug": "sort-matrix-by-diagonals",
   "topicTags": "['Array', 'Sorting', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.040023894862603",
   "difficulty": "Medium",
   "frontendQuestionId": 3447,
   "isFavor": false,
   "paidOnly": false,
   "title": "Assign Elements to Groups with Constraints",
   "titleSlug": "assign-elements-to-groups-with-constraints",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.895784030151635",
   "difficulty": "Hard",
   "frontendQuestionId": 3448,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Substrings Divisible By Last Digit",
   "titleSlug": "count-substrings-divisible-by-last-digit",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.473616912454183",
   "difficulty": "Hard",
   "frontendQuestionId": 3449,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize the Minimum Game Score",
   "titleSlug": "maximize-the-minimum-game-score",
   "topicTags": "['Array', 'Binary Search', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "86.32686084142395",
   "difficulty": "Easy",
   "frontendQuestionId": 3450,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Students on a Single Bench",
   "titleSlug": "maximum-students-on-a-single-bench",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "58.38182321972846",
   "difficulty": "Hard",
   "frontendQuestionId": 3451,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Invalid IP Addresses",
   "titleSlug": "find-invalid-ip-addresses",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "69.8934794445957",
   "difficulty": "Easy",
   "frontendQuestionId": 3452,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of Good Numbers",
   "titleSlug": "sum-of-good-numbers",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.5942881979029",
   "difficulty": "Medium",
   "frontendQuestionId": 3453,
   "isFavor": false,
   "paidOnly": false,
   "title": "Separate Squares I",
   "titleSlug": "separate-squares-i",
   "topicTags": "['Array', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "19.3719806763285",
   "difficulty": "Hard",
   "frontendQuestionId": 3454,
   "isFavor": false,
   "paidOnly": false,
   "title": "Separate Squares II",
   "titleSlug": "separate-squares-ii",
   "topicTags": "['Array', 'Binary Search', 'Segment Tree', 'Line Sweep']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.51694956708898",
   "difficulty": "Hard",
   "frontendQuestionId": 3455,
   "isFavor": false,
   "paidOnly": false,
   "title": "Shortest Matching Substring",
   "titleSlug": "shortest-matching-substring",
   "topicTags": "['Two Pointers', 'String', 'Binary Search', 'String Matching']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.308896412974136",
   "difficulty": "Easy",
   "frontendQuestionId": 3456,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Special Substring of Length K",
   "titleSlug": "find-special-substring-of-length-k",
   "topicTags": "['String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.62120095926269",
   "difficulty": "Medium",
   "frontendQuestionId": 3457,
   "isFavor": false,
   "paidOnly": false,
   "title": "Eat Pizzas!",
   "titleSlug": "eat-pizzas",
   "topicTags": "['Array', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "17.81527314174062",
   "difficulty": "Medium",
   "frontendQuestionId": 3458,
   "isFavor": false,
   "paidOnly": false,
   "title": "Select K Disjoint Special Substrings",
   "titleSlug": "select-k-disjoint-special-substrings",
   "topicTags": "['Hash Table', 'String', 'Dynamic Programming', 'Greedy', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "39.88095238095239",
   "difficulty": "Hard",
   "frontendQuestionId": 3459,
   "isFavor": false,
   "paidOnly": false,
   "title": "Length of Longest V-Shaped Diagonal Segment",
   "titleSlug": "length-of-longest-v-shaped-diagonal-segment",
   "topicTags": "['Array', 'Dynamic Programming', 'Memoization', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.73563218390805",
   "difficulty": "Medium",
   "frontendQuestionId": 3460,
   "isFavor": false,
   "paidOnly": true,
   "title": "Longest Common Prefix After at Most One Removal",
   "titleSlug": "longest-common-prefix-after-at-most-one-removal",
   "topicTags": "['Two Pointers', 'String']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "80.117066032559",
   "difficulty": "Easy",
   "frontendQuestionId": 3461,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If Digits Are Equal in String After Operations I",
   "titleSlug": "check-if-digits-are-equal-in-string-after-operations-i",
   "topicTags": "['Math', 'String', 'Simulation', 'Combinatorics', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "60.33403300521135",
   "difficulty": "Medium",
   "frontendQuestionId": 3462,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Sum With at Most K Elements",
   "titleSlug": "maximum-sum-with-at-most-k-elements",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "9.919019008251762",
   "difficulty": "Hard",
   "frontendQuestionId": 3463,
   "isFavor": false,
   "paidOnly": false,
   "title": "Check If Digits Are Equal in String After Operations II",
   "titleSlug": "check-if-digits-are-equal-in-string-after-operations-ii",
   "topicTags": "['Math', 'String', 'Combinatorics', 'Number Theory']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "18.70557426112982",
   "difficulty": "Hard",
   "frontendQuestionId": 3464,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize the Distance Between Points on a Square",
   "titleSlug": "maximize-the-distance-between-points-on-a-square",
   "topicTags": "['Array', 'Binary Search', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.80797793337577",
   "difficulty": "Easy",
   "frontendQuestionId": 3465,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Products with Valid Serial Numbers",
   "titleSlug": "find-products-with-valid-serial-numbers",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "54.008603832616345",
   "difficulty": "Medium",
   "frontendQuestionId": 3466,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximum Coin Collection ",
   "titleSlug": "maximum-coin-collection",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "89.01945232927034",
   "difficulty": "Easy",
   "frontendQuestionId": 3467,
   "isFavor": false,
   "paidOnly": false,
   "title": "Transform Array by Parity",
   "titleSlug": "transform-array-by-parity",
   "topicTags": "['Array', 'Sorting', 'Counting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "45.503654273911664",
   "difficulty": "Medium",
   "frontendQuestionId": 3468,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Number of Copy Arrays",
   "titleSlug": "find-the-number-of-copy-arrays",
   "topicTags": "['Array', 'Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "17.477187559545232",
   "difficulty": "Medium",
   "frontendQuestionId": 3469,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find Minimum Cost to Remove Array Elements",
   "titleSlug": "find-minimum-cost-to-remove-array-elements",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.49592282071896",
   "difficulty": "Hard",
   "frontendQuestionId": 3470,
   "isFavor": false,
   "paidOnly": false,
   "title": "Permutations IV",
   "titleSlug": "permutations-iv",
   "topicTags": "['Array', 'Math', 'Combinatorics', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "36.47557972251347",
   "difficulty": "Easy",
   "frontendQuestionId": 3471,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Largest Almost Missing Integer",
   "titleSlug": "find-the-largest-almost-missing-integer",
   "topicTags": "['Array', 'Hash Table']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "35.780078951885116",
   "difficulty": "Medium",
   "frontendQuestionId": 3472,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Palindromic Subsequence After at Most K Operations",
   "titleSlug": "longest-palindromic-subsequence-after-at-most-k-operations",
   "topicTags": "['String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "24.30666880410388",
   "difficulty": "Medium",
   "frontendQuestionId": 3473,
   "isFavor": false,
   "paidOnly": false,
   "title": "Sum of K Subarrays With Length at Least M",
   "titleSlug": "sum-of-k-subarrays-with-length-at-least-m",
   "topicTags": "['Array', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.74198322644302",
   "difficulty": "Hard",
   "frontendQuestionId": 3474,
   "isFavor": false,
   "paidOnly": false,
   "title": "Lexicographically Smallest Generated String",
   "titleSlug": "lexicographically-smallest-generated-string",
   "topicTags": "['String', 'Greedy', 'String Matching']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "87.44447734675748",
   "difficulty": "Medium",
   "frontendQuestionId": 3475,
   "isFavor": false,
   "paidOnly": false,
   "title": "DNA Pattern Recognition ",
   "titleSlug": "dna-pattern-recognition",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "63.1578947368421",
   "difficulty": "Medium",
   "frontendQuestionId": 3476,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximize Profit from Task Assignment",
   "titleSlug": "maximize-profit-from-task-assignment",
   "topicTags": "['Array', 'Greedy', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "51.22854616955767",
   "difficulty": "Easy",
   "frontendQuestionId": 3477,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fruits Into Baskets II",
   "titleSlug": "fruits-into-baskets-ii",
   "topicTags": "['Array', 'Binary Search', 'Segment Tree', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.630987253582454",
   "difficulty": "Medium",
   "frontendQuestionId": 3478,
   "isFavor": false,
   "paidOnly": false,
   "title": "Choose K Elements With Maximum Sum",
   "titleSlug": "choose-k-elements-with-maximum-sum",
   "topicTags": "['Array', 'Sorting', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "21.131025201859554",
   "difficulty": "Medium",
   "frontendQuestionId": 3479,
   "isFavor": false,
   "paidOnly": false,
   "title": "Fruits Into Baskets III",
   "titleSlug": "fruits-into-baskets-iii",
   "topicTags": "['Array', 'Binary Search', 'Segment Tree', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "31.538903244329603",
   "difficulty": "Hard",
   "frontendQuestionId": 3480,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Subarrays After Removing One Conflicting Pair",
   "titleSlug": "maximize-subarrays-after-removing-one-conflicting-pair",
   "topicTags": "['Array', 'Segment Tree', 'Enumeration', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "77.129750982962",
   "difficulty": "Medium",
   "frontendQuestionId": 3481,
   "isFavor": false,
   "paidOnly": true,
   "title": "Apply Substitutions",
   "titleSlug": "apply-substitutions",
   "topicTags": "['Array', 'Hash Table', 'String', 'Depth-First Search', 'Breadth-First Search', 'Graph', 'Topological Sort']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "64.4633972992182",
   "difficulty": "Hard",
   "frontendQuestionId": 3482,
   "isFavor": false,
   "paidOnly": false,
   "title": "Analyze Organization Hierarchy",
   "titleSlug": "analyze-organization-hierarchy",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "65.7497303128371",
   "difficulty": "Easy",
   "frontendQuestionId": 3483,
   "isFavor": false,
   "paidOnly": false,
   "title": "Unique 3-Digit Even Numbers",
   "titleSlug": "unique-3-digit-even-numbers",
   "topicTags": "['Array', 'Hash Table', 'Recursion', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "68.00221361372441",
   "difficulty": "Medium",
   "frontendQuestionId": 3484,
   "isFavor": false,
   "paidOnly": false,
   "title": "Design Spreadsheet",
   "titleSlug": "design-spreadsheet",
   "topicTags": "['Array', 'Hash Table', 'String', 'Design', 'Matrix']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "19.530541961210805",
   "difficulty": "Hard",
   "frontendQuestionId": 3485,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Common Prefix of K Strings After Removal",
   "titleSlug": "longest-common-prefix-of-k-strings-after-removal",
   "topicTags": "['Array', 'String', 'Trie']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "15.50513913261469",
   "difficulty": "Hard",
   "frontendQuestionId": 3486,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Special Path II",
   "titleSlug": "longest-special-path-ii",
   "topicTags": "['Array', 'Hash Table', 'Tree', 'Depth-First Search', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "26.80350135828554",
   "difficulty": "Easy",
   "frontendQuestionId": 3487,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Unique Subarray Sum After Deletion",
   "titleSlug": "maximum-unique-subarray-sum-after-deletion",
   "topicTags": "['Array', 'Hash Table', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.449217675220574",
   "difficulty": "Medium",
   "frontendQuestionId": 3488,
   "isFavor": false,
   "paidOnly": false,
   "title": "Closest Equal Element Queries",
   "titleSlug": "closest-equal-element-queries",
   "topicTags": "['Array', 'Hash Table', 'Binary Search']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "28.862509500199053",
   "difficulty": "Medium",
   "frontendQuestionId": 3489,
   "isFavor": false,
   "paidOnly": false,
   "title": "Zero Array Transformation IV",
   "titleSlug": "zero-array-transformation-iv",
   "topicTags": "['Array', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.052067924974853",
   "difficulty": "Hard",
   "frontendQuestionId": 3490,
   "isFavor": false,
   "paidOnly": false,
   "title": "Count Beautiful Numbers",
   "titleSlug": "count-beautiful-numbers",
   "topicTags": "['Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "75.40628385698808",
   "difficulty": "Easy",
   "frontendQuestionId": 3491,
   "isFavor": false,
   "paidOnly": true,
   "title": "Phone Number Prefix",
   "titleSlug": "phone-number-prefix",
   "topicTags": "['Array', 'String', 'Trie', 'Sorting']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "74.3041385948027",
   "difficulty": "Easy",
   "frontendQuestionId": 3492,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Containers on a Ship",
   "titleSlug": "maximum-containers-on-a-ship",
   "topicTags": "['Math']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "46.280772751360985",
   "difficulty": "Medium",
   "frontendQuestionId": 3493,
   "isFavor": false,
   "paidOnly": false,
   "title": "Properties Graph",
   "titleSlug": "properties-graph",
   "topicTags": "['Array', 'Hash Table', 'Depth-First Search', 'Breadth-First Search', 'Union Find', 'Graph']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "32.82163742690059",
   "difficulty": "Medium",
   "frontendQuestionId": 3494,
   "isFavor": false,
   "paidOnly": false,
   "title": "Find the Minimum Amount of Time to Brew Potions",
   "titleSlug": "find-the-minimum-amount-of-time-to-brew-potions",
   "topicTags": "['Array', 'Simulation', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "30.406494359219245",
   "difficulty": "Hard",
   "frontendQuestionId": 3495,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make Array Elements Zero",
   "titleSlug": "minimum-operations-to-make-array-elements-zero",
   "topicTags": "['Array', 'Math', 'Bit Manipulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "62.450592885375485",
   "difficulty": "Medium",
   "frontendQuestionId": 3496,
   "isFavor": false,
   "paidOnly": true,
   "title": "Maximize Score After Pair Deletions",
   "titleSlug": "maximize-score-after-pair-deletions",
   "topicTags": "['Array', 'Greedy']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "84.6707818930041",
   "difficulty": "Medium",
   "frontendQuestionId": 3497,
   "isFavor": false,
   "paidOnly": false,
   "title": "Analyze Subscription Conversion ",
   "titleSlug": "analyze-subscription-conversion",
   "topicTags": "['Database']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "88.75377436178974",
   "difficulty": "Easy",
   "frontendQuestionId": 3498,
   "isFavor": false,
   "paidOnly": false,
   "title": "Reverse Degree of a String",
   "titleSlug": "reverse-degree-of-a-string",
   "topicTags": "['String', 'Simulation']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "29.86325191684452",
   "difficulty": "Medium",
   "frontendQuestionId": 3499,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Active Section with Trade I",
   "titleSlug": "maximize-active-section-with-trade-i",
   "topicTags": "['String', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "21.9034166151673",
   "difficulty": "Hard",
   "frontendQuestionId": 3500,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Divide Array Into Subarrays",
   "titleSlug": "minimum-cost-to-divide-array-into-subarrays",
   "topicTags": "['Array', 'Dynamic Programming', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "18.650793650793652",
   "difficulty": "Hard",
   "frontendQuestionId": 3501,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximize Active Section with Trade II",
   "titleSlug": "maximize-active-section-with-trade-ii",
   "topicTags": "['Array', 'String', 'Binary Search', 'Segment Tree']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "83.3695025135291",
   "difficulty": "Easy",
   "frontendQuestionId": 3502,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Cost to Reach Every Position",
   "titleSlug": "minimum-cost-to-reach-every-position",
   "topicTags": "['Array']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "43.14316213972245",
   "difficulty": "Medium",
   "frontendQuestionId": 3503,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Palindrome After Substring Concatenation I",
   "titleSlug": "longest-palindrome-after-substring-concatenation-i",
   "topicTags": "['Two Pointers', 'String', 'Dynamic Programming', 'Enumeration']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "14.9061400759238",
   "difficulty": "Hard",
   "frontendQuestionId": 3504,
   "isFavor": false,
   "paidOnly": false,
   "title": "Longest Palindrome After Substring Concatenation II",
   "titleSlug": "longest-palindrome-after-substring-concatenation-ii",
   "topicTags": "['Two Pointers', 'String', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "27.38729508196721",
   "difficulty": "Hard",
   "frontendQuestionId": 3505,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Operations to Make Elements Within K Subarrays Equal",
   "titleSlug": "minimum-operations-to-make-elements-within-k-subarrays-equal",
   "topicTags": "['Array', 'Hash Table', 'Math', 'Dynamic Programming', 'Sliding Window', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.801418439716315",
   "difficulty": "Hard",
   "frontendQuestionId": 3506,
   "isFavor": false,
   "paidOnly": true,
   "title": "Find Time Required to Eliminate Bacterial Strains",
   "titleSlug": "find-time-required-to-eliminate-bacterial-strains",
   "topicTags": "['Array', 'Math', 'Greedy', 'Heap (Priority Queue)']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "57.28819916545548",
   "difficulty": "Easy",
   "frontendQuestionId": 3507,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Pair Removal to Sort Array I",
   "titleSlug": "minimum-pair-removal-to-sort-array-i",
   "topicTags": "['Array', 'Hash Table', 'Linked List', 'Heap (Priority Queue)', 'Simulation', 'Doubly-Linked List', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "20.01485477502834",
   "difficulty": "Medium",
   "frontendQuestionId": 3508,
   "isFavor": false,
   "paidOnly": false,
   "title": "Implement Router",
   "titleSlug": "implement-router",
   "topicTags": "['Array', 'Hash Table', 'Binary Search', 'Design', 'Queue', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "9.275551211035083",
   "difficulty": "Hard",
   "frontendQuestionId": 3509,
   "isFavor": false,
   "paidOnly": false,
   "title": "Maximum Product of Subsequences With an Alternating Sum Equal to K",
   "titleSlug": "maximum-product-of-subsequences-with-an-alternating-sum-equal-to-k",
   "topicTags": "['Array', 'Hash Table', 'Dynamic Programming']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "11.304457474308052",
   "difficulty": "Hard",
   "frontendQuestionId": 3510,
   "isFavor": false,
   "paidOnly": false,
   "title": "Minimum Pair Removal to Sort Array II",
   "titleSlug": "minimum-pair-removal-to-sort-array-ii",
   "topicTags": "['Array', 'Hash Table', 'Linked List', 'Heap (Priority Queue)', 'Simulation', 'Doubly-Linked List', 'Ordered Set']",
   "hasSolution": false,
   "hasVideoSolution": false
 },
 {
   "acRate": "42.22222222222222",
   "difficulty": "Medium",
   "frontendQuestionId": 3511,
   "isFavor": false,
   "paidOnly": true,
   "title": "Make a Positive Array",
   "titleSlug": "make-a-positive-array",
   "topicTags": "['Array', 'Greedy', 'Prefix Sum']",
   "hasSolution": false,
   "hasVideoSolution": false
 }
]